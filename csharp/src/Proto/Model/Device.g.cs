// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: toit/model/device.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Toit.Proto.Model {

  /// <summary>Holder for reflection information generated from toit/model/device.proto</summary>
  public static partial class DeviceReflection {

    #region Descriptor
    /// <summary>File descriptor for toit/model/device.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chd0b2l0L21vZGVsL2RldmljZS5wcm90bxIKdG9pdC5tb2RlbBofZ29vZ2xl",
            "L3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1",
            "cmF0aW9uLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8aFXRv",
            "aXQvbW9kZWwvZGF0YS5wcm90byKpAwoMRGV2aWNlQ29uZmlnEgwKBG5hbWUY",
            "ASABKAkSMQoNc3RhcnRlZF9hZnRlchgCIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASCwoDc2RrGAMgASgJEjAKBmJyb2tlchgEIAEoCzIgLnRv",
            "aXQubW9kZWwuRGV2aWNlQnJva2VyU2V0dGluZ3MSOAoKY29ubmVjdGlvbhgF",
            "IAEoCzIkLnRvaXQubW9kZWwuRGV2aWNlQ29ubmVjdGlvblNldHRpbmdzEg0K",
            "BW1vZGVsGAYgASgJEjEKDWZhY3RvcnlfYWZ0ZXIYByABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEjIKB3J1bnRpbWUYCCABKAsyIS50b2l0Lm1v",
            "ZGVsLkRldmljZVJ1bnRpbWVTZXR0aW5ncxIwCgdtb2R1bGVzGAkgASgLMh8u",
            "dG9pdC5tb2RlbC5EZXZpY2VNb2R1bGVzQ29uZmlnEjcKDm1vZGVsX3NldHRp",
            "bmdzGAogASgLMh8udG9pdC5tb2RlbC5EZXZpY2VNb2RlbFNldHRpbmdzInUK",
            "E0RldmljZU1vZHVsZXNDb25maWcSMgoOc3luY19yZXF1ZXN0ZWQYASABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEioKB21vZHVsZXMYAiABKAsy",
            "GS50b2l0Lm1vZGVsLkRldmljZU1vZHVsZXMicwoVRGV2aWNlUnVudGltZVNl",
            "dHRpbmdzEiwKB2xvZ2dpbmcYASABKAsyGy50b2l0Lm1vZGVsLkxvZ2dpbmdT",
            "ZXR0aW5ncxIsCgdtZXRyaWNzGAIgASgLMhsudG9pdC5tb2RlbC5NZXRyaWNz",
            "U2V0dGluZ3MiOwoPTG9nZ2luZ1NldHRpbmdzEigKBWxldmVsGAEgASgOMhku",
            "dG9pdC5tb2RlbC5Mb2dEYXRhLkxldmVsIj8KD01ldHJpY3NTZXR0aW5ncxIs",
            "CgVsZXZlbBgBIAEoDjIdLnRvaXQubW9kZWwuTWV0cmljc0RhdGEuTGV2ZWwi",
            "nQEKGERldmljZUNvbm5lY3Rpb25TZXR0aW5ncxIuCgttYXhfb2ZmbGluZRgB",
            "IAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIyCgtjb25uZWN0aW9u",
            "cxgCIAMoCzIdLnRvaXQubW9kZWwuQ29ubmVjdGlvblNldHRpbmcSHQoVZXZl",
            "bnRfcXVldWVfdGhyZXNob2xkGAMgASgNImMKEUNvbm5lY3Rpb25TZXR0aW5n",
            "EiUKBHdpZmkYASABKAsyFy50b2l0Lm1vZGVsLldpZmlTZXR0aW5nEicKBW5i",
            "aW90GAIgASgLMhgudG9pdC5tb2RlbC5OQklvVFNldHRpbmciLQoLV2lmaVNl",
            "dHRpbmcSDAoEc3NpZBgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSJJCgxOQklv",
            "VFNldHRpbmcSCwoDYXBuGAEgASgJEg0KBWJhbmRzGAIgAygDEhAKCG9wZXJh",
            "dG9yGAMgASgJEgsKA3BpbhgEIAEoCSJUChREZXZpY2VCcm9rZXJTZXR0aW5n",
            "cxIMCgRob3N0GAEgASgJEgwKBHBvcnQYAiABKAMSCgoCY24YAyABKAkSFAoI",
            "cHJvdG9jb2wYBCABKAlCAhgBIqoDCgxEZXZpY2VTdGF0dXMSFAoIcmV2aXNp",
            "b24YASABKANCAhgBEg0KBWVwb2NoGAYgASgMEhYKDnN0YXRlX3JldmlzaW9u",
            "GAUgASgDEisKB3VwZGF0ZWQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wEhcKD2NvbmZpZ19yZXZpc2lvbhgDIAEoAxILCgNzZGsYBCABKAkS",
            "DQoFbW9kZWwYByABKAkSKAoGY29uZmlnGAggASgLMhgudG9pdC5tb2RlbC5E",
            "ZXZpY2VDb25maWcSEQoJY29ubmVjdGVkGAkgASgIEioKBGJvb3QYCiABKAsy",
            "HC50b2l0Lm1vZGVsLkRldmljZUJvb3RTdGF0dXMSKAoGaGVhbHRoGAsgASgL",
            "MhgudG9pdC5tb2RlbC5EZXZpY2VIZWFsdGgSNgoKY29ubmVjdGlvbhgMIAEo",
            "CzIiLnRvaXQubW9kZWwuRGV2aWNlQ29ubmVjdGlvblN0YXR1cxIwCgdtb2R1",
            "bGVzGA0gASgLMh8udG9pdC5tb2RlbC5EZXZpY2VNb2R1bGVzU3RhdHVzInMK",
            "E0RldmljZU1vZHVsZXNTdGF0dXMSMAoMbGFzdF91cGRhdGVkGAEgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIqCgdtb2R1bGVzGAIgASgLMhku",
            "dG9pdC5tb2RlbC5EZXZpY2VNb2R1bGVzIjsKDURldmljZU1vZHVsZXMSKgoI",
            "Y2VsbHVsYXIYASABKAsyGC50b2l0Lm1vZGVsLkRldmljZU1vZHVsZSIuCgxE",
            "ZXZpY2VNb2R1bGUSDQoFbW9kZWwYASABKAkSDwoHdmVyc2lvbhgCIAEoCSJX",
            "ChZEZXZpY2VDb25uZWN0aW9uU3RhdHVzEg0KBWluZGV4GAEgASgDEi4KBHR5",
            "cGUYAiABKA4yIC50b2l0Lm1vZGVsLkRldmljZUNvbm5lY3Rpb25UeXBlIowB",
            "ChBEZXZpY2VCb290U3RhdHVzEi0KCWxhc3RfYm9vdBgBIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXASEgoKaW5fZmFjdG9yeRgCIAEoCBI1ChFs",
            "YXN0X2ZhY3RvcnlfYm9vdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXAi+wQKDERldmljZUhlYWx0aBItCgVwb3dlchgBIAEoCzIeLnRvaXQu",
            "bW9kZWwuRGV2aWNlSGVhbHRoLlBvd2VyEjwKDWJhdHRlcnlfY3VydmUYAiAB",
            "KAsyJS50b2l0Lm1vZGVsLkRldmljZUhlYWx0aC5CYXR0ZXJ5Q3VydmUSOwoM",
            "Y29ubmVjdGl2aXR5GAMgASgLMiUudG9pdC5tb2RlbC5EZXZpY2VIZWFsdGgu",
            "Q29ubmVjdGl2aXR5GsABCgVQb3dlchIzCgV2YWx1ZRgBIAEoCzIkLnRvaXQu",
            "bW9kZWwuRGV2aWNlSGVhbHRoLlBvd2VyLlZhbHVlEjAKDGxhc3RfdXBkYXRl",
            "ZBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaUAoFVmFsdWUS",
            "EQoHYmF0dGVyeRgBIAEoAUgAEisKCXBsdWdnZWRpbhgCIAEoCzIWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eUgAQgcKBXBvd2VyGk8KDEJhdHRlcnlDdXJ2ZRIN",
            "CgVzbG9wZRgBIAEoARIwCgxsYXN0X3VwZGF0ZWQYAiABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wGqwBCgxDb25uZWN0aXZpdHkSLQoJbGFzdF9z",
            "ZWVuGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIRCgljb25u",
            "ZWN0ZWQYAiABKAgSPwoIY2hlY2tpbnMYAyADKAsyLS50b2l0Lm1vZGVsLkRl",
            "dmljZUhlYWx0aC5Db25uZWN0aXZpdHkuQ2hlY2tpbhoZCgdDaGVja2luEg4K",
            "Bm1pc3NlZBgBIAEoCCJ5ChBIYXJkd2FyZUlkZW50aXR5EhMKC2hhcmR3YXJl",
            "X2lkGAEgASgMEhcKD3NlcXVlbmNlX251bWJlchgCIAEoAxINCgViYXRjaBgD",
            "IAEoCRITCgtwcml2YXRlX2tleRgEIAEoDBITCgtjZXJ0aWZpY2F0ZRgFIAEo",
            "DCKFAQoUSGFyZHdhcmVJZGVudGl0eUluZm8SGwoTZmFjdG9yeV9zZGtfdmVy",
            "c2lvbhgBIAEoCRISCgpmbGFzaGVkX2J5GAIgASgMEg0KBWljY2lkGAMgASgJ",
            "Eg8KB2NoaXBfaWQYBCABKAkSHAoUZmFjdG9yeV9kZXZpY2VfbW9kZWwYBSAB",
            "KAkiUwoMSGFyZHdhcmVJbmZvEhMKC2hhcmR3YXJlX2lkGAEgASgMEhUKDWhh",
            "cmR3YXJlX2ZxZG4YAiABKAkSFwoPb3JnYW5pemF0aW9uX2lkGAQgASgMIpYB",
            "ChRIYXJkd2FyZVRvRGV2aWNlSW5mbxITCgtoYXJkd2FyZV9pZBgBIAEoDBIR",
            "CglkZXZpY2VfaWQYAiABKAwSKQoFYm91bmQYAyABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEisKB3VuYm91bmQYBCABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wItUJCgtEZXZpY2VFdmVudBIRCglkZXZpY2VfaWQY",
            "ASABKAwSEAoIZXZlbnRfaWQYAiABKAwSKwoHY3JlYXRlZBgDIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKgoEdHlwZRgEIAEoDjIcLnRvaXQu",
            "bW9kZWwuRGV2aWNlRXZlbnQuVHlwZRILCgNtc2cYBSABKAkSDAoEZGF0YRgG",
            "IAEoDBI0Cglpbml0aWF0ZXIYByABKAsyIS50b2l0Lm1vZGVsLkRldmljZUV2",
            "ZW50LkluaXRpYXRlchIxCgtpbmZvcm1hdGlvbhgIIAMoCzIcLnRvaXQubW9k",
            "ZWwuRGV2aWNlRXZlbnQuSW5mbxqLAgoJSW5pdGlhdGVyEjoKBmRldmljZRgB",
            "IAEoCzIoLnRvaXQubW9kZWwuRGV2aWNlRXZlbnQuSW5pdGlhdGVyLkRldmlj",
            "ZUgAEjwKB2NvbnNvbGUYAiABKAsyKS50b2l0Lm1vZGVsLkRldmljZUV2ZW50",
            "LkluaXRpYXRlci5Db25zb2xlSAASNgoEdXNlchgDIAEoCzImLnRvaXQubW9k",
            "ZWwuRGV2aWNlRXZlbnQuSW5pdGlhdGVyLlVzZXJIABobCgZEZXZpY2USEQoJ",
            "ZGV2aWNlX2lkGAEgASgMGgkKB0NvbnNvbGUaFwoEVXNlchIPCgd1c2VyX2lk",
            "GAEgASgMQgsKCWluaXRpYXRlchqvBAoESW5mbxILCgNrZXkYASABKAkSMQoF",
            "dmFsdWUYAiABKAsyIi50b2l0Lm1vZGVsLkRldmljZUV2ZW50LkluZm8uVmFs",
            "dWUa5gMKBVZhbHVlEkEKCXByaW1pdGl2ZRgBIAEoCzIsLnRvaXQubW9kZWwu",
            "RGV2aWNlRXZlbnQuSW5mby5WYWx1ZS5QcmltaXRpdmVIABI3CgRkaWZmGAIg",
            "ASgLMicudG9pdC5tb2RlbC5EZXZpY2VFdmVudC5JbmZvLlZhbHVlLkRpZmZI",
            "ABI5CgVlcnJvchgDIAEoCzIoLnRvaXQubW9kZWwuRGV2aWNlRXZlbnQuSW5m",
            "by5WYWx1ZS5FcnJvckgAGoYBCglQcmltaXRpdmUSPwoEdHlwZRgBIAEoDjIx",
            "LnRvaXQubW9kZWwuRGV2aWNlRXZlbnQuSW5mby5WYWx1ZS5QcmltaXRpdmUu",
            "VHlwZRINCgV2YWx1ZRgCIAEoDCIpCgRUeXBlEgsKB0lOVkFMSUQQABIICgRK",
            "U09OEAESCgoGU1RSSU5HEAIafAoERGlmZhI6CgRmcm9tGAEgASgLMiwudG9p",
            "dC5tb2RlbC5EZXZpY2VFdmVudC5JbmZvLlZhbHVlLlByaW1pdGl2ZRI4CgJ0",
            "bxgCIAEoCzIsLnRvaXQubW9kZWwuRGV2aWNlRXZlbnQuSW5mby5WYWx1ZS5Q",
            "cmltaXRpdmUaFgoFRXJyb3ISDQoFZXJyb3IYASABKAlCBwoFdmFsdWUigwEK",
            "BFR5cGUSCwoHVU5LTk9XThAAEhEKDUNPTkZJR19DSEFOR0UQARIRCg1TVEFU",
            "VVNfQ0hBTkdFEAISDwoLTkVYVF9BQ1RJT04QAxIRCg1ERVZJQ0VfQUNUSU9O",
            "EAQSEgoOUVVFVUVfT1ZFUkZMT1cQBRIQCgxSRVFVRVNUX0ZJTEUQBiKNAQoT",
            "RGV2aWNlTW9kZWxTZXR0aW5ncxJDCgpwYXJhbWV0ZXJzGAEgAygLMi8udG9p",
            "dC5tb2RlbC5EZXZpY2VNb2RlbFNldHRpbmdzLlBhcmFtZXRlcnNFbnRyeRox",
            "Cg9QYXJhbWV0ZXJzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgF",
            "OgI4ASqcAQoURGV2aWNlQ29ubmVjdGlvblR5cGUSIgoeREVWSUNFX0NPTk5F",
            "Q1RJT05fVFlQRV9VTktOT1dOEAASHwobREVWSUNFX0NPTk5FQ1RJT05fVFlQ",
            "RV9XSUZJEAESIAocREVWSUNFX0NPTk5FQ1RJT05fVFlQRV9OQklPVBACEh0K",
            "GURFVklDRV9DT05ORUNUSU9OX1RZUEVfT1MQAyraAQoQRGV2aWNlQ2hhbmdl",
            "VHlwZRIZChVERVZJQ0VfQ0hBTkdFX1VOS05PV04QABIXChNERVZJQ0VfQ0hB",
            "TkdFX0FEREVEEAESGQoVREVWSUNFX0NIQU5HRV9ERUxFVEVEEAISGQoVREVW",
            "SUNFX0NIQU5HRV9DSEFOR0VEEAMSHwoXREVWSUNFX0NIQU5HRV9IRUFSVEJF",
            "QVQQBBoCCAESGwoXREVWSUNFX0NIQU5HRV9DT05ORUNURUQQBRIeChpERVZJ",
            "Q0VfQ0hBTkdFX0RJU0NPTk5FQ1RFRBAGKkwKF0RldmljZVNlc3Npb25DaGFu",
            "Z2VUeXBlEhAKDFVOS05PV05fVFlQRRAAEg0KCUNPTk5FQ1RFRBABEhAKDERJ",
            "U0NPTk5FQ1RFRBACKrQDCgxEZXZpY2VBY3Rpb24SGQoVREVWSUNFX0FDVElP",
            "Tl9VTktOT1dOEAASFQoRREVWSUNFX0FDVElPTl9OT1AQARIYChRERVZJQ0Vf",
            "QUNUSU9OX1JFQk9PVBACEhsKF0RFVklDRV9BQ1RJT05fTkVXX0VQT0NIEAMS",
            "HwobREVWSUNFX0FDVElPTl9SRVBPUlRfQ09ORklHEAQSIQodREVWSUNFX0FD",
            "VElPTl9GQUNUT1JZX1BST01PVEUQBRIfChtERVZJQ0VfQUNUSU9OX1VQREFU",
            "RV9DT05GSUcQBhIhCh1ERVZJQ0VfQUNUSU9OX1VQREFURV9GSVJNV0FSRRAH",
            "Eh8KG0RFVklDRV9BQ1RJT05fRkFDVE9SWV9SRVNFVBAIEhsKF0RFVklDRV9B",
            "Q1RJT05fUkVDT05DSUxFEAkSKQolREVWSUNFX0FDVElPTl9VUERBVEVfUEFS",
            "VElBTF9GSVJNV0FSRRAKEiAKHERFVklDRV9BQ1RJT05fUkVQT1JUX01PRFVM",
            "RVMQCxIoCiRERVZJQ0VfQUNUSU9OX1VQREFURV9NT0RVTEVfQ0VMTFVMQVIQ",
            "DCotChBEZXZpY2VNb2R1bGVUeXBlEgsKB1Vua25vd24QABIMCghDZWxsdWxh",
            "chABQmUKGGlvLnRvaXQucHJvdG8udG9pdC5tb2RlbEILRGV2aWNlUHJvdG9a",
            "KWdpdGh1Yi5jb20vdG9pdHdhcmUvYXBpL2dvbGFuZy90b2l0L21vZGVsqgIQ",
            "VG9pdC5Qcm90by5Nb2RlbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Toit.Proto.Model.DataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Toit.Proto.Model.DeviceConnectionType), typeof(global::Toit.Proto.Model.DeviceChangeType), typeof(global::Toit.Proto.Model.DeviceSessionChangeType), typeof(global::Toit.Proto.Model.DeviceAction), typeof(global::Toit.Proto.Model.DeviceModuleType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceConfig), global::Toit.Proto.Model.DeviceConfig.Parser, new[]{ "Name", "StartedAfter", "Sdk", "Broker", "Connection", "Model", "FactoryAfter", "Runtime", "Modules", "ModelSettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceModulesConfig), global::Toit.Proto.Model.DeviceModulesConfig.Parser, new[]{ "SyncRequested", "Modules" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceRuntimeSettings), global::Toit.Proto.Model.DeviceRuntimeSettings.Parser, new[]{ "Logging", "Metrics" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.LoggingSettings), global::Toit.Proto.Model.LoggingSettings.Parser, new[]{ "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.MetricsSettings), global::Toit.Proto.Model.MetricsSettings.Parser, new[]{ "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceConnectionSettings), global::Toit.Proto.Model.DeviceConnectionSettings.Parser, new[]{ "MaxOffline", "Connections", "EventQueueThreshold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.ConnectionSetting), global::Toit.Proto.Model.ConnectionSetting.Parser, new[]{ "Wifi", "Nbiot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.WifiSetting), global::Toit.Proto.Model.WifiSetting.Parser, new[]{ "Ssid", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.NBIoTSetting), global::Toit.Proto.Model.NBIoTSetting.Parser, new[]{ "Apn", "Bands", "Operator", "Pin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceBrokerSettings), global::Toit.Proto.Model.DeviceBrokerSettings.Parser, new[]{ "Host", "Port", "Cn", "Protocol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceStatus), global::Toit.Proto.Model.DeviceStatus.Parser, new[]{ "Revision", "Epoch", "StateRevision", "Updated", "ConfigRevision", "Sdk", "Model", "Config", "Connected", "Boot", "Health", "Connection", "Modules" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceModulesStatus), global::Toit.Proto.Model.DeviceModulesStatus.Parser, new[]{ "LastUpdated", "Modules" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceModules), global::Toit.Proto.Model.DeviceModules.Parser, new[]{ "Cellular" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceModule), global::Toit.Proto.Model.DeviceModule.Parser, new[]{ "Model", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceConnectionStatus), global::Toit.Proto.Model.DeviceConnectionStatus.Parser, new[]{ "Index", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceBootStatus), global::Toit.Proto.Model.DeviceBootStatus.Parser, new[]{ "LastBoot", "InFactory", "LastFactoryBoot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceHealth), global::Toit.Proto.Model.DeviceHealth.Parser, new[]{ "Power", "BatteryCurve", "Connectivity" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceHealth.Types.Power), global::Toit.Proto.Model.DeviceHealth.Types.Power.Parser, new[]{ "Value", "LastUpdated" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceHealth.Types.Power.Types.Value), global::Toit.Proto.Model.DeviceHealth.Types.Power.Types.Value.Parser, new[]{ "Battery", "Pluggedin" }, new[]{ "Power" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceHealth.Types.BatteryCurve), global::Toit.Proto.Model.DeviceHealth.Types.BatteryCurve.Parser, new[]{ "Slope", "LastUpdated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceHealth.Types.Connectivity), global::Toit.Proto.Model.DeviceHealth.Types.Connectivity.Parser, new[]{ "LastSeen", "Connected", "Checkins" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceHealth.Types.Connectivity.Types.Checkin), global::Toit.Proto.Model.DeviceHealth.Types.Connectivity.Types.Checkin.Parser, new[]{ "Missed" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.HardwareIdentity), global::Toit.Proto.Model.HardwareIdentity.Parser, new[]{ "HardwareId", "SequenceNumber", "Batch", "PrivateKey", "Certificate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.HardwareIdentityInfo), global::Toit.Proto.Model.HardwareIdentityInfo.Parser, new[]{ "FactorySdkVersion", "FlashedBy", "Iccid", "ChipId", "FactoryDeviceModel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.HardwareInfo), global::Toit.Proto.Model.HardwareInfo.Parser, new[]{ "HardwareId", "HardwareFqdn", "OrganizationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.HardwareToDeviceInfo), global::Toit.Proto.Model.HardwareToDeviceInfo.Parser, new[]{ "HardwareId", "DeviceId", "Bound", "Unbound" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceEvent), global::Toit.Proto.Model.DeviceEvent.Parser, new[]{ "DeviceId", "EventId", "Created", "Type", "Msg", "Data", "Initiater", "Information" }, null, new[]{ typeof(global::Toit.Proto.Model.DeviceEvent.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceEvent.Types.Initiater), global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Parser, new[]{ "Device", "Console", "User" }, new[]{ "Initiater" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Device), global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Device.Parser, new[]{ "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Console), global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Console.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.User), global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.User.Parser, new[]{ "UserId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceEvent.Types.Info), global::Toit.Proto.Model.DeviceEvent.Types.Info.Parser, new[]{ "Key", "Value" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value), global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Parser, new[]{ "Primitive", "Diff", "Error" }, new[]{ "Value" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive), global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Parser, new[]{ "Type", "Value" }, null, new[]{ typeof(global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Diff), global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Diff.Parser, new[]{ "From", "To" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Error), global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Error.Parser, new[]{ "Error_" }, null, null, null, null)})})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.DeviceModelSettings), global::Toit.Proto.Model.DeviceModelSettings.Parser, new[]{ "Parameters" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum DeviceConnectionType {
    [pbr::OriginalName("DEVICE_CONNECTION_TYPE_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("DEVICE_CONNECTION_TYPE_WIFI")] Wifi = 1,
    [pbr::OriginalName("DEVICE_CONNECTION_TYPE_NBIOT")] Nbiot = 2,
    [pbr::OriginalName("DEVICE_CONNECTION_TYPE_OS")] Os = 3,
  }

  public enum DeviceChangeType {
    [pbr::OriginalName("DEVICE_CHANGE_UNKNOWN")] DeviceChangeUnknown = 0,
    [pbr::OriginalName("DEVICE_CHANGE_ADDED")] DeviceChangeAdded = 1,
    [pbr::OriginalName("DEVICE_CHANGE_DELETED")] DeviceChangeDeleted = 2,
    [pbr::OriginalName("DEVICE_CHANGE_CHANGED")] DeviceChangeChanged = 3,
    [pbr::OriginalName("DEVICE_CHANGE_HEARTBEAT")] DeviceChangeHeartbeat = 4,
    [pbr::OriginalName("DEVICE_CHANGE_CONNECTED")] DeviceChangeConnected = 5,
    [pbr::OriginalName("DEVICE_CHANGE_DISCONNECTED")] DeviceChangeDisconnected = 6,
  }

  public enum DeviceSessionChangeType {
    [pbr::OriginalName("UNKNOWN_TYPE")] UnknownType = 0,
    [pbr::OriginalName("CONNECTED")] Connected = 1,
    [pbr::OriginalName("DISCONNECTED")] Disconnected = 2,
  }

  public enum DeviceAction {
    [pbr::OriginalName("DEVICE_ACTION_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("DEVICE_ACTION_NOP")] Nop = 1,
    [pbr::OriginalName("DEVICE_ACTION_REBOOT")] Reboot = 2,
    [pbr::OriginalName("DEVICE_ACTION_NEW_EPOCH")] NewEpoch = 3,
    [pbr::OriginalName("DEVICE_ACTION_REPORT_CONFIG")] ReportConfig = 4,
    [pbr::OriginalName("DEVICE_ACTION_FACTORY_PROMOTE")] FactoryPromote = 5,
    [pbr::OriginalName("DEVICE_ACTION_UPDATE_CONFIG")] UpdateConfig = 6,
    [pbr::OriginalName("DEVICE_ACTION_UPDATE_FIRMWARE")] UpdateFirmware = 7,
    [pbr::OriginalName("DEVICE_ACTION_FACTORY_RESET")] FactoryReset = 8,
    [pbr::OriginalName("DEVICE_ACTION_RECONCILE")] Reconcile = 9,
    [pbr::OriginalName("DEVICE_ACTION_UPDATE_PARTIAL_FIRMWARE")] UpdatePartialFirmware = 10,
    [pbr::OriginalName("DEVICE_ACTION_REPORT_MODULES")] ReportModules = 11,
    [pbr::OriginalName("DEVICE_ACTION_UPDATE_MODULE_CELLULAR")] UpdateModuleCellular = 12,
  }

  public enum DeviceModuleType {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("Cellular")] Cellular = 1,
  }

  #endregion

  #region Messages
  public sealed partial class DeviceConfig : pb::IMessage<DeviceConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceConfig> _parser = new pb::MessageParser<DeviceConfig>(() => new DeviceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfig(DeviceConfig other) : this() {
      name_ = other.name_;
      startedAfter_ = other.startedAfter_ != null ? other.startedAfter_.Clone() : null;
      sdk_ = other.sdk_;
      broker_ = other.broker_ != null ? other.broker_.Clone() : null;
      connection_ = other.connection_ != null ? other.connection_.Clone() : null;
      model_ = other.model_;
      factoryAfter_ = other.factoryAfter_ != null ? other.factoryAfter_.Clone() : null;
      runtime_ = other.runtime_ != null ? other.runtime_.Clone() : null;
      modules_ = other.modules_ != null ? other.modules_.Clone() : null;
      modelSettings_ = other.modelSettings_ != null ? other.modelSettings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfig Clone() {
      return new DeviceConfig(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "started_after" field.</summary>
    public const int StartedAfterFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startedAfter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartedAfter {
      get { return startedAfter_; }
      set {
        startedAfter_ = value;
      }
    }

    /// <summary>Field number for the "sdk" field.</summary>
    public const int SdkFieldNumber = 3;
    private string sdk_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sdk {
      get { return sdk_; }
      set {
        sdk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "broker" field.</summary>
    public const int BrokerFieldNumber = 4;
    private global::Toit.Proto.Model.DeviceBrokerSettings broker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceBrokerSettings Broker {
      get { return broker_; }
      set {
        broker_ = value;
      }
    }

    /// <summary>Field number for the "connection" field.</summary>
    public const int ConnectionFieldNumber = 5;
    private global::Toit.Proto.Model.DeviceConnectionSettings connection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceConnectionSettings Connection {
      get { return connection_; }
      set {
        connection_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 6;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "factory_after" field.</summary>
    public const int FactoryAfterFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp factoryAfter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FactoryAfter {
      get { return factoryAfter_; }
      set {
        factoryAfter_ = value;
      }
    }

    /// <summary>Field number for the "runtime" field.</summary>
    public const int RuntimeFieldNumber = 8;
    private global::Toit.Proto.Model.DeviceRuntimeSettings runtime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceRuntimeSettings Runtime {
      get { return runtime_; }
      set {
        runtime_ = value;
      }
    }

    /// <summary>Field number for the "modules" field.</summary>
    public const int ModulesFieldNumber = 9;
    private global::Toit.Proto.Model.DeviceModulesConfig modules_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceModulesConfig Modules {
      get { return modules_; }
      set {
        modules_ = value;
      }
    }

    /// <summary>Field number for the "model_settings" field.</summary>
    public const int ModelSettingsFieldNumber = 10;
    private global::Toit.Proto.Model.DeviceModelSettings modelSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceModelSettings ModelSettings {
      get { return modelSettings_; }
      set {
        modelSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(StartedAfter, other.StartedAfter)) return false;
      if (Sdk != other.Sdk) return false;
      if (!object.Equals(Broker, other.Broker)) return false;
      if (!object.Equals(Connection, other.Connection)) return false;
      if (Model != other.Model) return false;
      if (!object.Equals(FactoryAfter, other.FactoryAfter)) return false;
      if (!object.Equals(Runtime, other.Runtime)) return false;
      if (!object.Equals(Modules, other.Modules)) return false;
      if (!object.Equals(ModelSettings, other.ModelSettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (startedAfter_ != null) hash ^= StartedAfter.GetHashCode();
      if (Sdk.Length != 0) hash ^= Sdk.GetHashCode();
      if (broker_ != null) hash ^= Broker.GetHashCode();
      if (connection_ != null) hash ^= Connection.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (factoryAfter_ != null) hash ^= FactoryAfter.GetHashCode();
      if (runtime_ != null) hash ^= Runtime.GetHashCode();
      if (modules_ != null) hash ^= Modules.GetHashCode();
      if (modelSettings_ != null) hash ^= ModelSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (startedAfter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartedAfter);
      }
      if (Sdk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sdk);
      }
      if (broker_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Broker);
      }
      if (connection_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Connection);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Model);
      }
      if (factoryAfter_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(FactoryAfter);
      }
      if (runtime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Runtime);
      }
      if (modules_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Modules);
      }
      if (modelSettings_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ModelSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (startedAfter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartedAfter);
      }
      if (Sdk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sdk);
      }
      if (broker_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Broker);
      }
      if (connection_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Connection);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Model);
      }
      if (factoryAfter_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(FactoryAfter);
      }
      if (runtime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Runtime);
      }
      if (modules_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Modules);
      }
      if (modelSettings_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ModelSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (startedAfter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartedAfter);
      }
      if (Sdk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sdk);
      }
      if (broker_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Broker);
      }
      if (connection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connection);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (factoryAfter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FactoryAfter);
      }
      if (runtime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Runtime);
      }
      if (modules_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Modules);
      }
      if (modelSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceConfig other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.startedAfter_ != null) {
        if (startedAfter_ == null) {
          StartedAfter = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartedAfter.MergeFrom(other.StartedAfter);
      }
      if (other.Sdk.Length != 0) {
        Sdk = other.Sdk;
      }
      if (other.broker_ != null) {
        if (broker_ == null) {
          Broker = new global::Toit.Proto.Model.DeviceBrokerSettings();
        }
        Broker.MergeFrom(other.Broker);
      }
      if (other.connection_ != null) {
        if (connection_ == null) {
          Connection = new global::Toit.Proto.Model.DeviceConnectionSettings();
        }
        Connection.MergeFrom(other.Connection);
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.factoryAfter_ != null) {
        if (factoryAfter_ == null) {
          FactoryAfter = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FactoryAfter.MergeFrom(other.FactoryAfter);
      }
      if (other.runtime_ != null) {
        if (runtime_ == null) {
          Runtime = new global::Toit.Proto.Model.DeviceRuntimeSettings();
        }
        Runtime.MergeFrom(other.Runtime);
      }
      if (other.modules_ != null) {
        if (modules_ == null) {
          Modules = new global::Toit.Proto.Model.DeviceModulesConfig();
        }
        Modules.MergeFrom(other.Modules);
      }
      if (other.modelSettings_ != null) {
        if (modelSettings_ == null) {
          ModelSettings = new global::Toit.Proto.Model.DeviceModelSettings();
        }
        ModelSettings.MergeFrom(other.ModelSettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (startedAfter_ == null) {
              StartedAfter = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartedAfter);
            break;
          }
          case 26: {
            Sdk = input.ReadString();
            break;
          }
          case 34: {
            if (broker_ == null) {
              Broker = new global::Toit.Proto.Model.DeviceBrokerSettings();
            }
            input.ReadMessage(Broker);
            break;
          }
          case 42: {
            if (connection_ == null) {
              Connection = new global::Toit.Proto.Model.DeviceConnectionSettings();
            }
            input.ReadMessage(Connection);
            break;
          }
          case 50: {
            Model = input.ReadString();
            break;
          }
          case 58: {
            if (factoryAfter_ == null) {
              FactoryAfter = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FactoryAfter);
            break;
          }
          case 66: {
            if (runtime_ == null) {
              Runtime = new global::Toit.Proto.Model.DeviceRuntimeSettings();
            }
            input.ReadMessage(Runtime);
            break;
          }
          case 74: {
            if (modules_ == null) {
              Modules = new global::Toit.Proto.Model.DeviceModulesConfig();
            }
            input.ReadMessage(Modules);
            break;
          }
          case 82: {
            if (modelSettings_ == null) {
              ModelSettings = new global::Toit.Proto.Model.DeviceModelSettings();
            }
            input.ReadMessage(ModelSettings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (startedAfter_ == null) {
              StartedAfter = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartedAfter);
            break;
          }
          case 26: {
            Sdk = input.ReadString();
            break;
          }
          case 34: {
            if (broker_ == null) {
              Broker = new global::Toit.Proto.Model.DeviceBrokerSettings();
            }
            input.ReadMessage(Broker);
            break;
          }
          case 42: {
            if (connection_ == null) {
              Connection = new global::Toit.Proto.Model.DeviceConnectionSettings();
            }
            input.ReadMessage(Connection);
            break;
          }
          case 50: {
            Model = input.ReadString();
            break;
          }
          case 58: {
            if (factoryAfter_ == null) {
              FactoryAfter = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FactoryAfter);
            break;
          }
          case 66: {
            if (runtime_ == null) {
              Runtime = new global::Toit.Proto.Model.DeviceRuntimeSettings();
            }
            input.ReadMessage(Runtime);
            break;
          }
          case 74: {
            if (modules_ == null) {
              Modules = new global::Toit.Proto.Model.DeviceModulesConfig();
            }
            input.ReadMessage(Modules);
            break;
          }
          case 82: {
            if (modelSettings_ == null) {
              ModelSettings = new global::Toit.Proto.Model.DeviceModelSettings();
            }
            input.ReadMessage(ModelSettings);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceModulesConfig : pb::IMessage<DeviceModulesConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceModulesConfig> _parser = new pb::MessageParser<DeviceModulesConfig>(() => new DeviceModulesConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceModulesConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModulesConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModulesConfig(DeviceModulesConfig other) : this() {
      syncRequested_ = other.syncRequested_ != null ? other.syncRequested_.Clone() : null;
      modules_ = other.modules_ != null ? other.modules_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModulesConfig Clone() {
      return new DeviceModulesConfig(this);
    }

    /// <summary>Field number for the "sync_requested" field.</summary>
    public const int SyncRequestedFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp syncRequested_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SyncRequested {
      get { return syncRequested_; }
      set {
        syncRequested_ = value;
      }
    }

    /// <summary>Field number for the "modules" field.</summary>
    public const int ModulesFieldNumber = 2;
    private global::Toit.Proto.Model.DeviceModules modules_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceModules Modules {
      get { return modules_; }
      set {
        modules_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceModulesConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceModulesConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SyncRequested, other.SyncRequested)) return false;
      if (!object.Equals(Modules, other.Modules)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (syncRequested_ != null) hash ^= SyncRequested.GetHashCode();
      if (modules_ != null) hash ^= Modules.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (syncRequested_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SyncRequested);
      }
      if (modules_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Modules);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (syncRequested_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SyncRequested);
      }
      if (modules_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Modules);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (syncRequested_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncRequested);
      }
      if (modules_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Modules);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceModulesConfig other) {
      if (other == null) {
        return;
      }
      if (other.syncRequested_ != null) {
        if (syncRequested_ == null) {
          SyncRequested = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SyncRequested.MergeFrom(other.SyncRequested);
      }
      if (other.modules_ != null) {
        if (modules_ == null) {
          Modules = new global::Toit.Proto.Model.DeviceModules();
        }
        Modules.MergeFrom(other.Modules);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (syncRequested_ == null) {
              SyncRequested = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SyncRequested);
            break;
          }
          case 18: {
            if (modules_ == null) {
              Modules = new global::Toit.Proto.Model.DeviceModules();
            }
            input.ReadMessage(Modules);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (syncRequested_ == null) {
              SyncRequested = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SyncRequested);
            break;
          }
          case 18: {
            if (modules_ == null) {
              Modules = new global::Toit.Proto.Model.DeviceModules();
            }
            input.ReadMessage(Modules);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceRuntimeSettings : pb::IMessage<DeviceRuntimeSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceRuntimeSettings> _parser = new pb::MessageParser<DeviceRuntimeSettings>(() => new DeviceRuntimeSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceRuntimeSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceRuntimeSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceRuntimeSettings(DeviceRuntimeSettings other) : this() {
      logging_ = other.logging_ != null ? other.logging_.Clone() : null;
      metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceRuntimeSettings Clone() {
      return new DeviceRuntimeSettings(this);
    }

    /// <summary>Field number for the "logging" field.</summary>
    public const int LoggingFieldNumber = 1;
    private global::Toit.Proto.Model.LoggingSettings logging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.LoggingSettings Logging {
      get { return logging_; }
      set {
        logging_ = value;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 2;
    private global::Toit.Proto.Model.MetricsSettings metrics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.MetricsSettings Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceRuntimeSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceRuntimeSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Logging, other.Logging)) return false;
      if (!object.Equals(Metrics, other.Metrics)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (logging_ != null) hash ^= Logging.GetHashCode();
      if (metrics_ != null) hash ^= Metrics.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Logging);
      }
      if (metrics_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Metrics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Logging);
      }
      if (metrics_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Metrics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (logging_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Logging);
      }
      if (metrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceRuntimeSettings other) {
      if (other == null) {
        return;
      }
      if (other.logging_ != null) {
        if (logging_ == null) {
          Logging = new global::Toit.Proto.Model.LoggingSettings();
        }
        Logging.MergeFrom(other.Logging);
      }
      if (other.metrics_ != null) {
        if (metrics_ == null) {
          Metrics = new global::Toit.Proto.Model.MetricsSettings();
        }
        Metrics.MergeFrom(other.Metrics);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logging_ == null) {
              Logging = new global::Toit.Proto.Model.LoggingSettings();
            }
            input.ReadMessage(Logging);
            break;
          }
          case 18: {
            if (metrics_ == null) {
              Metrics = new global::Toit.Proto.Model.MetricsSettings();
            }
            input.ReadMessage(Metrics);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logging_ == null) {
              Logging = new global::Toit.Proto.Model.LoggingSettings();
            }
            input.ReadMessage(Logging);
            break;
          }
          case 18: {
            if (metrics_ == null) {
              Metrics = new global::Toit.Proto.Model.MetricsSettings();
            }
            input.ReadMessage(Metrics);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoggingSettings : pb::IMessage<LoggingSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoggingSettings> _parser = new pb::MessageParser<LoggingSettings>(() => new LoggingSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoggingSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoggingSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoggingSettings(LoggingSettings other) : this() {
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoggingSettings Clone() {
      return new LoggingSettings(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private global::Toit.Proto.Model.LogData.Types.Level level_ = global::Toit.Proto.Model.LogData.Types.Level.PrintLevel;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.LogData.Types.Level Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoggingSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoggingSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoggingSettings other) {
      if (other == null) {
        return;
      }
      if (other.Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = (global::Toit.Proto.Model.LogData.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = (global::Toit.Proto.Model.LogData.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MetricsSettings : pb::IMessage<MetricsSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetricsSettings> _parser = new pb::MessageParser<MetricsSettings>(() => new MetricsSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetricsSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricsSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricsSettings(MetricsSettings other) : this() {
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricsSettings Clone() {
      return new MetricsSettings(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private global::Toit.Proto.Model.MetricsData.Types.Level level_ = global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.MetricsData.Types.Level Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetricsSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetricsSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetricsSettings other) {
      if (other == null) {
        return;
      }
      if (other.Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = (global::Toit.Proto.Model.MetricsData.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = (global::Toit.Proto.Model.MetricsData.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceConnectionSettings : pb::IMessage<DeviceConnectionSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceConnectionSettings> _parser = new pb::MessageParser<DeviceConnectionSettings>(() => new DeviceConnectionSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceConnectionSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConnectionSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConnectionSettings(DeviceConnectionSettings other) : this() {
      maxOffline_ = other.maxOffline_ != null ? other.maxOffline_.Clone() : null;
      connections_ = other.connections_.Clone();
      eventQueueThreshold_ = other.eventQueueThreshold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConnectionSettings Clone() {
      return new DeviceConnectionSettings(this);
    }

    /// <summary>Field number for the "max_offline" field.</summary>
    public const int MaxOfflineFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration maxOffline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration MaxOffline {
      get { return maxOffline_; }
      set {
        maxOffline_ = value;
      }
    }

    /// <summary>Field number for the "connections" field.</summary>
    public const int ConnectionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Toit.Proto.Model.ConnectionSetting> _repeated_connections_codec
        = pb::FieldCodec.ForMessage(18, global::Toit.Proto.Model.ConnectionSetting.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.Model.ConnectionSetting> connections_ = new pbc::RepeatedField<global::Toit.Proto.Model.ConnectionSetting>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.Model.ConnectionSetting> Connections {
      get { return connections_; }
    }

    /// <summary>Field number for the "event_queue_threshold" field.</summary>
    public const int EventQueueThresholdFieldNumber = 3;
    private uint eventQueueThreshold_;
    /// <summary>
    /// Must be between 0-100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EventQueueThreshold {
      get { return eventQueueThreshold_; }
      set {
        eventQueueThreshold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceConnectionSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceConnectionSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MaxOffline, other.MaxOffline)) return false;
      if(!connections_.Equals(other.connections_)) return false;
      if (EventQueueThreshold != other.EventQueueThreshold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (maxOffline_ != null) hash ^= MaxOffline.GetHashCode();
      hash ^= connections_.GetHashCode();
      if (EventQueueThreshold != 0) hash ^= EventQueueThreshold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (maxOffline_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MaxOffline);
      }
      connections_.WriteTo(output, _repeated_connections_codec);
      if (EventQueueThreshold != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(EventQueueThreshold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (maxOffline_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MaxOffline);
      }
      connections_.WriteTo(ref output, _repeated_connections_codec);
      if (EventQueueThreshold != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(EventQueueThreshold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (maxOffline_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxOffline);
      }
      size += connections_.CalculateSize(_repeated_connections_codec);
      if (EventQueueThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventQueueThreshold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceConnectionSettings other) {
      if (other == null) {
        return;
      }
      if (other.maxOffline_ != null) {
        if (maxOffline_ == null) {
          MaxOffline = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        MaxOffline.MergeFrom(other.MaxOffline);
      }
      connections_.Add(other.connections_);
      if (other.EventQueueThreshold != 0) {
        EventQueueThreshold = other.EventQueueThreshold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (maxOffline_ == null) {
              MaxOffline = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MaxOffline);
            break;
          }
          case 18: {
            connections_.AddEntriesFrom(input, _repeated_connections_codec);
            break;
          }
          case 24: {
            EventQueueThreshold = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (maxOffline_ == null) {
              MaxOffline = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MaxOffline);
            break;
          }
          case 18: {
            connections_.AddEntriesFrom(ref input, _repeated_connections_codec);
            break;
          }
          case 24: {
            EventQueueThreshold = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConnectionSetting : pb::IMessage<ConnectionSetting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectionSetting> _parser = new pb::MessageParser<ConnectionSetting>(() => new ConnectionSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectionSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionSetting(ConnectionSetting other) : this() {
      wifi_ = other.wifi_ != null ? other.wifi_.Clone() : null;
      nbiot_ = other.nbiot_ != null ? other.nbiot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionSetting Clone() {
      return new ConnectionSetting(this);
    }

    /// <summary>Field number for the "wifi" field.</summary>
    public const int WifiFieldNumber = 1;
    private global::Toit.Proto.Model.WifiSetting wifi_;
    /// <summary>
    /// This is essentially a one-of but that is not supported when using ubjson
    /// encoding as done between the device and the console.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.WifiSetting Wifi {
      get { return wifi_; }
      set {
        wifi_ = value;
      }
    }

    /// <summary>Field number for the "nbiot" field.</summary>
    public const int NbiotFieldNumber = 2;
    private global::Toit.Proto.Model.NBIoTSetting nbiot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.NBIoTSetting Nbiot {
      get { return nbiot_; }
      set {
        nbiot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectionSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectionSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Wifi, other.Wifi)) return false;
      if (!object.Equals(Nbiot, other.Nbiot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (wifi_ != null) hash ^= Wifi.GetHashCode();
      if (nbiot_ != null) hash ^= Nbiot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wifi_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Wifi);
      }
      if (nbiot_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Nbiot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wifi_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Wifi);
      }
      if (nbiot_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Nbiot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (wifi_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Wifi);
      }
      if (nbiot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nbiot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectionSetting other) {
      if (other == null) {
        return;
      }
      if (other.wifi_ != null) {
        if (wifi_ == null) {
          Wifi = new global::Toit.Proto.Model.WifiSetting();
        }
        Wifi.MergeFrom(other.Wifi);
      }
      if (other.nbiot_ != null) {
        if (nbiot_ == null) {
          Nbiot = new global::Toit.Proto.Model.NBIoTSetting();
        }
        Nbiot.MergeFrom(other.Nbiot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wifi_ == null) {
              Wifi = new global::Toit.Proto.Model.WifiSetting();
            }
            input.ReadMessage(Wifi);
            break;
          }
          case 18: {
            if (nbiot_ == null) {
              Nbiot = new global::Toit.Proto.Model.NBIoTSetting();
            }
            input.ReadMessage(Nbiot);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wifi_ == null) {
              Wifi = new global::Toit.Proto.Model.WifiSetting();
            }
            input.ReadMessage(Wifi);
            break;
          }
          case 18: {
            if (nbiot_ == null) {
              Nbiot = new global::Toit.Proto.Model.NBIoTSetting();
            }
            input.ReadMessage(Nbiot);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WifiSetting : pb::IMessage<WifiSetting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WifiSetting> _parser = new pb::MessageParser<WifiSetting>(() => new WifiSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WifiSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WifiSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WifiSetting(WifiSetting other) : this() {
      ssid_ = other.ssid_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WifiSetting Clone() {
      return new WifiSetting(this);
    }

    /// <summary>Field number for the "ssid" field.</summary>
    public const int SsidFieldNumber = 1;
    private string ssid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ssid {
      get { return ssid_; }
      set {
        ssid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WifiSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WifiSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ssid != other.Ssid) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ssid.Length != 0) hash ^= Ssid.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ssid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ssid);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ssid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ssid);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ssid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ssid);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WifiSetting other) {
      if (other == null) {
        return;
      }
      if (other.Ssid.Length != 0) {
        Ssid = other.Ssid;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ssid = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ssid = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NBIoTSetting : pb::IMessage<NBIoTSetting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NBIoTSetting> _parser = new pb::MessageParser<NBIoTSetting>(() => new NBIoTSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NBIoTSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NBIoTSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NBIoTSetting(NBIoTSetting other) : this() {
      apn_ = other.apn_;
      bands_ = other.bands_.Clone();
      operator_ = other.operator_;
      pin_ = other.pin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NBIoTSetting Clone() {
      return new NBIoTSetting(this);
    }

    /// <summary>Field number for the "apn" field.</summary>
    public const int ApnFieldNumber = 1;
    private string apn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Apn {
      get { return apn_; }
      set {
        apn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bands" field.</summary>
    public const int BandsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_bands_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> bands_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Bands {
      get { return bands_; }
    }

    /// <summary>Field number for the "operator" field.</summary>
    public const int OperatorFieldNumber = 3;
    private string operator_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Operator {
      get { return operator_; }
      set {
        operator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 4;
    private string pin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pin {
      get { return pin_; }
      set {
        pin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NBIoTSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NBIoTSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Apn != other.Apn) return false;
      if(!bands_.Equals(other.bands_)) return false;
      if (Operator != other.Operator) return false;
      if (Pin != other.Pin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Apn.Length != 0) hash ^= Apn.GetHashCode();
      hash ^= bands_.GetHashCode();
      if (Operator.Length != 0) hash ^= Operator.GetHashCode();
      if (Pin.Length != 0) hash ^= Pin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Apn.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Apn);
      }
      bands_.WriteTo(output, _repeated_bands_codec);
      if (Operator.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Operator);
      }
      if (Pin.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Pin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Apn.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Apn);
      }
      bands_.WriteTo(ref output, _repeated_bands_codec);
      if (Operator.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Operator);
      }
      if (Pin.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Pin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Apn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Apn);
      }
      size += bands_.CalculateSize(_repeated_bands_codec);
      if (Operator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Operator);
      }
      if (Pin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NBIoTSetting other) {
      if (other == null) {
        return;
      }
      if (other.Apn.Length != 0) {
        Apn = other.Apn;
      }
      bands_.Add(other.bands_);
      if (other.Operator.Length != 0) {
        Operator = other.Operator;
      }
      if (other.Pin.Length != 0) {
        Pin = other.Pin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Apn = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            bands_.AddEntriesFrom(input, _repeated_bands_codec);
            break;
          }
          case 26: {
            Operator = input.ReadString();
            break;
          }
          case 34: {
            Pin = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Apn = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            bands_.AddEntriesFrom(ref input, _repeated_bands_codec);
            break;
          }
          case 26: {
            Operator = input.ReadString();
            break;
          }
          case 34: {
            Pin = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceBrokerSettings : pb::IMessage<DeviceBrokerSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceBrokerSettings> _parser = new pb::MessageParser<DeviceBrokerSettings>(() => new DeviceBrokerSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceBrokerSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceBrokerSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceBrokerSettings(DeviceBrokerSettings other) : this() {
      host_ = other.host_;
      port_ = other.port_;
      cn_ = other.cn_;
      protocol_ = other.protocol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceBrokerSettings Clone() {
      return new DeviceBrokerSettings(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private long port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "cn" field.</summary>
    public const int CnFieldNumber = 3;
    private string cn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cn {
      get { return cn_; }
      set {
        cn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 4;
    private string protocol_ = "";
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Protocol {
      get { return protocol_; }
      set {
        protocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceBrokerSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceBrokerSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (Cn != other.Cn) return false;
      if (Protocol != other.Protocol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0L) hash ^= Port.GetHashCode();
      if (Cn.Length != 0) hash ^= Cn.GetHashCode();
      if (Protocol.Length != 0) hash ^= Protocol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (Port != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Port);
      }
      if (Cn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Cn);
      }
      if (Protocol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Protocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (Port != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Port);
      }
      if (Cn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Cn);
      }
      if (Protocol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Protocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Port != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Port);
      }
      if (Cn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cn);
      }
      if (Protocol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Protocol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceBrokerSettings other) {
      if (other == null) {
        return;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0L) {
        Port = other.Port;
      }
      if (other.Cn.Length != 0) {
        Cn = other.Cn;
      }
      if (other.Protocol.Length != 0) {
        Protocol = other.Protocol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt64();
            break;
          }
          case 26: {
            Cn = input.ReadString();
            break;
          }
          case 34: {
            Protocol = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt64();
            break;
          }
          case 26: {
            Cn = input.ReadString();
            break;
          }
          case 34: {
            Protocol = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceStatus : pb::IMessage<DeviceStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceStatus> _parser = new pb::MessageParser<DeviceStatus>(() => new DeviceStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceStatus(DeviceStatus other) : this() {
      revision_ = other.revision_;
      epoch_ = other.epoch_;
      stateRevision_ = other.stateRevision_;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      configRevision_ = other.configRevision_;
      sdk_ = other.sdk_;
      model_ = other.model_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      connected_ = other.connected_;
      boot_ = other.boot_ != null ? other.boot_.Clone() : null;
      health_ = other.health_ != null ? other.health_.Clone() : null;
      connection_ = other.connection_ != null ? other.connection_.Clone() : null;
      modules_ = other.modules_ != null ? other.modules_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceStatus Clone() {
      return new DeviceStatus(this);
    }

    /// <summary>Field number for the "revision" field.</summary>
    public const int RevisionFieldNumber = 1;
    private long revision_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Revision {
      get { return revision_; }
      set {
        revision_ = value;
      }
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 6;
    private pb::ByteString epoch_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Epoch {
      get { return epoch_; }
      set {
        epoch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state_revision" field.</summary>
    public const int StateRevisionFieldNumber = 5;
    private long stateRevision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StateRevision {
      get { return stateRevision_; }
      set {
        stateRevision_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    /// <summary>Field number for the "config_revision" field.</summary>
    public const int ConfigRevisionFieldNumber = 3;
    private long configRevision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConfigRevision {
      get { return configRevision_; }
      set {
        configRevision_ = value;
      }
    }

    /// <summary>Field number for the "sdk" field.</summary>
    public const int SdkFieldNumber = 4;
    private string sdk_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sdk {
      get { return sdk_; }
      set {
        sdk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 7;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 8;
    private global::Toit.Proto.Model.DeviceConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "connected" field.</summary>
    public const int ConnectedFieldNumber = 9;
    private bool connected_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Connected {
      get { return connected_; }
      set {
        connected_ = value;
      }
    }

    /// <summary>Field number for the "boot" field.</summary>
    public const int BootFieldNumber = 10;
    private global::Toit.Proto.Model.DeviceBootStatus boot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceBootStatus Boot {
      get { return boot_; }
      set {
        boot_ = value;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 11;
    private global::Toit.Proto.Model.DeviceHealth health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceHealth Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "connection" field.</summary>
    public const int ConnectionFieldNumber = 12;
    private global::Toit.Proto.Model.DeviceConnectionStatus connection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceConnectionStatus Connection {
      get { return connection_; }
      set {
        connection_ = value;
      }
    }

    /// <summary>Field number for the "modules" field.</summary>
    public const int ModulesFieldNumber = 13;
    private global::Toit.Proto.Model.DeviceModulesStatus modules_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceModulesStatus Modules {
      get { return modules_; }
      set {
        modules_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Revision != other.Revision) return false;
      if (Epoch != other.Epoch) return false;
      if (StateRevision != other.StateRevision) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      if (ConfigRevision != other.ConfigRevision) return false;
      if (Sdk != other.Sdk) return false;
      if (Model != other.Model) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (Connected != other.Connected) return false;
      if (!object.Equals(Boot, other.Boot)) return false;
      if (!object.Equals(Health, other.Health)) return false;
      if (!object.Equals(Connection, other.Connection)) return false;
      if (!object.Equals(Modules, other.Modules)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Revision != 0L) hash ^= Revision.GetHashCode();
      if (Epoch.Length != 0) hash ^= Epoch.GetHashCode();
      if (StateRevision != 0L) hash ^= StateRevision.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (ConfigRevision != 0L) hash ^= ConfigRevision.GetHashCode();
      if (Sdk.Length != 0) hash ^= Sdk.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (Connected != false) hash ^= Connected.GetHashCode();
      if (boot_ != null) hash ^= Boot.GetHashCode();
      if (health_ != null) hash ^= Health.GetHashCode();
      if (connection_ != null) hash ^= Connection.GetHashCode();
      if (modules_ != null) hash ^= Modules.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Revision != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Revision);
      }
      if (updated_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Updated);
      }
      if (ConfigRevision != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ConfigRevision);
      }
      if (Sdk.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sdk);
      }
      if (StateRevision != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StateRevision);
      }
      if (Epoch.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Epoch);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Model);
      }
      if (config_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Config);
      }
      if (Connected != false) {
        output.WriteRawTag(72);
        output.WriteBool(Connected);
      }
      if (boot_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Boot);
      }
      if (health_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Health);
      }
      if (connection_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Connection);
      }
      if (modules_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Modules);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Revision != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Revision);
      }
      if (updated_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Updated);
      }
      if (ConfigRevision != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ConfigRevision);
      }
      if (Sdk.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sdk);
      }
      if (StateRevision != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StateRevision);
      }
      if (Epoch.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Epoch);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Model);
      }
      if (config_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Config);
      }
      if (Connected != false) {
        output.WriteRawTag(72);
        output.WriteBool(Connected);
      }
      if (boot_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Boot);
      }
      if (health_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Health);
      }
      if (connection_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Connection);
      }
      if (modules_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Modules);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Revision != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Revision);
      }
      if (Epoch.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Epoch);
      }
      if (StateRevision != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StateRevision);
      }
      if (updated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (ConfigRevision != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConfigRevision);
      }
      if (Sdk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sdk);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (Connected != false) {
        size += 1 + 1;
      }
      if (boot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Boot);
      }
      if (health_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Health);
      }
      if (connection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connection);
      }
      if (modules_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Modules);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceStatus other) {
      if (other == null) {
        return;
      }
      if (other.Revision != 0L) {
        Revision = other.Revision;
      }
      if (other.Epoch.Length != 0) {
        Epoch = other.Epoch;
      }
      if (other.StateRevision != 0L) {
        StateRevision = other.StateRevision;
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      if (other.ConfigRevision != 0L) {
        ConfigRevision = other.ConfigRevision;
      }
      if (other.Sdk.Length != 0) {
        Sdk = other.Sdk;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Toit.Proto.Model.DeviceConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.Connected != false) {
        Connected = other.Connected;
      }
      if (other.boot_ != null) {
        if (boot_ == null) {
          Boot = new global::Toit.Proto.Model.DeviceBootStatus();
        }
        Boot.MergeFrom(other.Boot);
      }
      if (other.health_ != null) {
        if (health_ == null) {
          Health = new global::Toit.Proto.Model.DeviceHealth();
        }
        Health.MergeFrom(other.Health);
      }
      if (other.connection_ != null) {
        if (connection_ == null) {
          Connection = new global::Toit.Proto.Model.DeviceConnectionStatus();
        }
        Connection.MergeFrom(other.Connection);
      }
      if (other.modules_ != null) {
        if (modules_ == null) {
          Modules = new global::Toit.Proto.Model.DeviceModulesStatus();
        }
        Modules.MergeFrom(other.Modules);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Revision = input.ReadInt64();
            break;
          }
          case 18: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 24: {
            ConfigRevision = input.ReadInt64();
            break;
          }
          case 34: {
            Sdk = input.ReadString();
            break;
          }
          case 40: {
            StateRevision = input.ReadInt64();
            break;
          }
          case 50: {
            Epoch = input.ReadBytes();
            break;
          }
          case 58: {
            Model = input.ReadString();
            break;
          }
          case 66: {
            if (config_ == null) {
              Config = new global::Toit.Proto.Model.DeviceConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 72: {
            Connected = input.ReadBool();
            break;
          }
          case 82: {
            if (boot_ == null) {
              Boot = new global::Toit.Proto.Model.DeviceBootStatus();
            }
            input.ReadMessage(Boot);
            break;
          }
          case 90: {
            if (health_ == null) {
              Health = new global::Toit.Proto.Model.DeviceHealth();
            }
            input.ReadMessage(Health);
            break;
          }
          case 98: {
            if (connection_ == null) {
              Connection = new global::Toit.Proto.Model.DeviceConnectionStatus();
            }
            input.ReadMessage(Connection);
            break;
          }
          case 106: {
            if (modules_ == null) {
              Modules = new global::Toit.Proto.Model.DeviceModulesStatus();
            }
            input.ReadMessage(Modules);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Revision = input.ReadInt64();
            break;
          }
          case 18: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 24: {
            ConfigRevision = input.ReadInt64();
            break;
          }
          case 34: {
            Sdk = input.ReadString();
            break;
          }
          case 40: {
            StateRevision = input.ReadInt64();
            break;
          }
          case 50: {
            Epoch = input.ReadBytes();
            break;
          }
          case 58: {
            Model = input.ReadString();
            break;
          }
          case 66: {
            if (config_ == null) {
              Config = new global::Toit.Proto.Model.DeviceConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 72: {
            Connected = input.ReadBool();
            break;
          }
          case 82: {
            if (boot_ == null) {
              Boot = new global::Toit.Proto.Model.DeviceBootStatus();
            }
            input.ReadMessage(Boot);
            break;
          }
          case 90: {
            if (health_ == null) {
              Health = new global::Toit.Proto.Model.DeviceHealth();
            }
            input.ReadMessage(Health);
            break;
          }
          case 98: {
            if (connection_ == null) {
              Connection = new global::Toit.Proto.Model.DeviceConnectionStatus();
            }
            input.ReadMessage(Connection);
            break;
          }
          case 106: {
            if (modules_ == null) {
              Modules = new global::Toit.Proto.Model.DeviceModulesStatus();
            }
            input.ReadMessage(Modules);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceModulesStatus : pb::IMessage<DeviceModulesStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceModulesStatus> _parser = new pb::MessageParser<DeviceModulesStatus>(() => new DeviceModulesStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceModulesStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModulesStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModulesStatus(DeviceModulesStatus other) : this() {
      lastUpdated_ = other.lastUpdated_ != null ? other.lastUpdated_.Clone() : null;
      modules_ = other.modules_ != null ? other.modules_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModulesStatus Clone() {
      return new DeviceModulesStatus(this);
    }

    /// <summary>Field number for the "last_updated" field.</summary>
    public const int LastUpdatedFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdated {
      get { return lastUpdated_; }
      set {
        lastUpdated_ = value;
      }
    }

    /// <summary>Field number for the "modules" field.</summary>
    public const int ModulesFieldNumber = 2;
    private global::Toit.Proto.Model.DeviceModules modules_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceModules Modules {
      get { return modules_; }
      set {
        modules_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceModulesStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceModulesStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LastUpdated, other.LastUpdated)) return false;
      if (!object.Equals(Modules, other.Modules)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lastUpdated_ != null) hash ^= LastUpdated.GetHashCode();
      if (modules_ != null) hash ^= Modules.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (lastUpdated_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastUpdated);
      }
      if (modules_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Modules);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (lastUpdated_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastUpdated);
      }
      if (modules_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Modules);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lastUpdated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdated);
      }
      if (modules_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Modules);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceModulesStatus other) {
      if (other == null) {
        return;
      }
      if (other.lastUpdated_ != null) {
        if (lastUpdated_ == null) {
          LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastUpdated.MergeFrom(other.LastUpdated);
      }
      if (other.modules_ != null) {
        if (modules_ == null) {
          Modules = new global::Toit.Proto.Model.DeviceModules();
        }
        Modules.MergeFrom(other.Modules);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lastUpdated_ == null) {
              LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdated);
            break;
          }
          case 18: {
            if (modules_ == null) {
              Modules = new global::Toit.Proto.Model.DeviceModules();
            }
            input.ReadMessage(Modules);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (lastUpdated_ == null) {
              LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdated);
            break;
          }
          case 18: {
            if (modules_ == null) {
              Modules = new global::Toit.Proto.Model.DeviceModules();
            }
            input.ReadMessage(Modules);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceModules : pb::IMessage<DeviceModules>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceModules> _parser = new pb::MessageParser<DeviceModules>(() => new DeviceModules());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceModules> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModules() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModules(DeviceModules other) : this() {
      cellular_ = other.cellular_ != null ? other.cellular_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModules Clone() {
      return new DeviceModules(this);
    }

    /// <summary>Field number for the "cellular" field.</summary>
    public const int CellularFieldNumber = 1;
    private global::Toit.Proto.Model.DeviceModule cellular_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceModule Cellular {
      get { return cellular_; }
      set {
        cellular_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceModules);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceModules other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Cellular, other.Cellular)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cellular_ != null) hash ^= Cellular.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cellular_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cellular);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cellular_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cellular);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cellular_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cellular);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceModules other) {
      if (other == null) {
        return;
      }
      if (other.cellular_ != null) {
        if (cellular_ == null) {
          Cellular = new global::Toit.Proto.Model.DeviceModule();
        }
        Cellular.MergeFrom(other.Cellular);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cellular_ == null) {
              Cellular = new global::Toit.Proto.Model.DeviceModule();
            }
            input.ReadMessage(Cellular);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cellular_ == null) {
              Cellular = new global::Toit.Proto.Model.DeviceModule();
            }
            input.ReadMessage(Cellular);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceModule : pb::IMessage<DeviceModule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceModule> _parser = new pb::MessageParser<DeviceModule>(() => new DeviceModule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceModule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModule(DeviceModule other) : this() {
      model_ = other.model_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModule Clone() {
      return new DeviceModule(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceModule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceModule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Model != other.Model) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Model.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Model);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Model.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Model);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceModule other) {
      if (other == null) {
        return;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Model = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Model = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceConnectionStatus : pb::IMessage<DeviceConnectionStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceConnectionStatus> _parser = new pb::MessageParser<DeviceConnectionStatus>(() => new DeviceConnectionStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceConnectionStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConnectionStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConnectionStatus(DeviceConnectionStatus other) : this() {
      index_ = other.index_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConnectionStatus Clone() {
      return new DeviceConnectionStatus(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private long index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Toit.Proto.Model.DeviceConnectionType type_ = global::Toit.Proto.Model.DeviceConnectionType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceConnectionType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceConnectionStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceConnectionStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0L) hash ^= Index.GetHashCode();
      if (Type != global::Toit.Proto.Model.DeviceConnectionType.Unknown) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Index);
      }
      if (Type != global::Toit.Proto.Model.DeviceConnectionType.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Index);
      }
      if (Type != global::Toit.Proto.Model.DeviceConnectionType.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Index);
      }
      if (Type != global::Toit.Proto.Model.DeviceConnectionType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceConnectionStatus other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0L) {
        Index = other.Index;
      }
      if (other.Type != global::Toit.Proto.Model.DeviceConnectionType.Unknown) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt64();
            break;
          }
          case 16: {
            Type = (global::Toit.Proto.Model.DeviceConnectionType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt64();
            break;
          }
          case 16: {
            Type = (global::Toit.Proto.Model.DeviceConnectionType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceBootStatus : pb::IMessage<DeviceBootStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceBootStatus> _parser = new pb::MessageParser<DeviceBootStatus>(() => new DeviceBootStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceBootStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceBootStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceBootStatus(DeviceBootStatus other) : this() {
      lastBoot_ = other.lastBoot_ != null ? other.lastBoot_.Clone() : null;
      inFactory_ = other.inFactory_;
      lastFactoryBoot_ = other.lastFactoryBoot_ != null ? other.lastFactoryBoot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceBootStatus Clone() {
      return new DeviceBootStatus(this);
    }

    /// <summary>Field number for the "last_boot" field.</summary>
    public const int LastBootFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastBoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastBoot {
      get { return lastBoot_; }
      set {
        lastBoot_ = value;
      }
    }

    /// <summary>Field number for the "in_factory" field.</summary>
    public const int InFactoryFieldNumber = 2;
    private bool inFactory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InFactory {
      get { return inFactory_; }
      set {
        inFactory_ = value;
      }
    }

    /// <summary>Field number for the "last_factory_boot" field.</summary>
    public const int LastFactoryBootFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastFactoryBoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastFactoryBoot {
      get { return lastFactoryBoot_; }
      set {
        lastFactoryBoot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceBootStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceBootStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LastBoot, other.LastBoot)) return false;
      if (InFactory != other.InFactory) return false;
      if (!object.Equals(LastFactoryBoot, other.LastFactoryBoot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lastBoot_ != null) hash ^= LastBoot.GetHashCode();
      if (InFactory != false) hash ^= InFactory.GetHashCode();
      if (lastFactoryBoot_ != null) hash ^= LastFactoryBoot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (lastBoot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastBoot);
      }
      if (InFactory != false) {
        output.WriteRawTag(16);
        output.WriteBool(InFactory);
      }
      if (lastFactoryBoot_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastFactoryBoot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (lastBoot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastBoot);
      }
      if (InFactory != false) {
        output.WriteRawTag(16);
        output.WriteBool(InFactory);
      }
      if (lastFactoryBoot_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastFactoryBoot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lastBoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastBoot);
      }
      if (InFactory != false) {
        size += 1 + 1;
      }
      if (lastFactoryBoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastFactoryBoot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceBootStatus other) {
      if (other == null) {
        return;
      }
      if (other.lastBoot_ != null) {
        if (lastBoot_ == null) {
          LastBoot = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastBoot.MergeFrom(other.LastBoot);
      }
      if (other.InFactory != false) {
        InFactory = other.InFactory;
      }
      if (other.lastFactoryBoot_ != null) {
        if (lastFactoryBoot_ == null) {
          LastFactoryBoot = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastFactoryBoot.MergeFrom(other.LastFactoryBoot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lastBoot_ == null) {
              LastBoot = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastBoot);
            break;
          }
          case 16: {
            InFactory = input.ReadBool();
            break;
          }
          case 26: {
            if (lastFactoryBoot_ == null) {
              LastFactoryBoot = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastFactoryBoot);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (lastBoot_ == null) {
              LastBoot = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastBoot);
            break;
          }
          case 16: {
            InFactory = input.ReadBool();
            break;
          }
          case 26: {
            if (lastFactoryBoot_ == null) {
              LastFactoryBoot = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastFactoryBoot);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceHealth : pb::IMessage<DeviceHealth>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceHealth> _parser = new pb::MessageParser<DeviceHealth>(() => new DeviceHealth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceHealth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceHealth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceHealth(DeviceHealth other) : this() {
      power_ = other.power_ != null ? other.power_.Clone() : null;
      batteryCurve_ = other.batteryCurve_ != null ? other.batteryCurve_.Clone() : null;
      connectivity_ = other.connectivity_ != null ? other.connectivity_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceHealth Clone() {
      return new DeviceHealth(this);
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 1;
    private global::Toit.Proto.Model.DeviceHealth.Types.Power power_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceHealth.Types.Power Power {
      get { return power_; }
      set {
        power_ = value;
      }
    }

    /// <summary>Field number for the "battery_curve" field.</summary>
    public const int BatteryCurveFieldNumber = 2;
    private global::Toit.Proto.Model.DeviceHealth.Types.BatteryCurve batteryCurve_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceHealth.Types.BatteryCurve BatteryCurve {
      get { return batteryCurve_; }
      set {
        batteryCurve_ = value;
      }
    }

    /// <summary>Field number for the "connectivity" field.</summary>
    public const int ConnectivityFieldNumber = 3;
    private global::Toit.Proto.Model.DeviceHealth.Types.Connectivity connectivity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceHealth.Types.Connectivity Connectivity {
      get { return connectivity_; }
      set {
        connectivity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceHealth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceHealth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Power, other.Power)) return false;
      if (!object.Equals(BatteryCurve, other.BatteryCurve)) return false;
      if (!object.Equals(Connectivity, other.Connectivity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (power_ != null) hash ^= Power.GetHashCode();
      if (batteryCurve_ != null) hash ^= BatteryCurve.GetHashCode();
      if (connectivity_ != null) hash ^= Connectivity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (power_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Power);
      }
      if (batteryCurve_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BatteryCurve);
      }
      if (connectivity_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Connectivity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (power_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Power);
      }
      if (batteryCurve_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BatteryCurve);
      }
      if (connectivity_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Connectivity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (power_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Power);
      }
      if (batteryCurve_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BatteryCurve);
      }
      if (connectivity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connectivity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceHealth other) {
      if (other == null) {
        return;
      }
      if (other.power_ != null) {
        if (power_ == null) {
          Power = new global::Toit.Proto.Model.DeviceHealth.Types.Power();
        }
        Power.MergeFrom(other.Power);
      }
      if (other.batteryCurve_ != null) {
        if (batteryCurve_ == null) {
          BatteryCurve = new global::Toit.Proto.Model.DeviceHealth.Types.BatteryCurve();
        }
        BatteryCurve.MergeFrom(other.BatteryCurve);
      }
      if (other.connectivity_ != null) {
        if (connectivity_ == null) {
          Connectivity = new global::Toit.Proto.Model.DeviceHealth.Types.Connectivity();
        }
        Connectivity.MergeFrom(other.Connectivity);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (power_ == null) {
              Power = new global::Toit.Proto.Model.DeviceHealth.Types.Power();
            }
            input.ReadMessage(Power);
            break;
          }
          case 18: {
            if (batteryCurve_ == null) {
              BatteryCurve = new global::Toit.Proto.Model.DeviceHealth.Types.BatteryCurve();
            }
            input.ReadMessage(BatteryCurve);
            break;
          }
          case 26: {
            if (connectivity_ == null) {
              Connectivity = new global::Toit.Proto.Model.DeviceHealth.Types.Connectivity();
            }
            input.ReadMessage(Connectivity);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (power_ == null) {
              Power = new global::Toit.Proto.Model.DeviceHealth.Types.Power();
            }
            input.ReadMessage(Power);
            break;
          }
          case 18: {
            if (batteryCurve_ == null) {
              BatteryCurve = new global::Toit.Proto.Model.DeviceHealth.Types.BatteryCurve();
            }
            input.ReadMessage(BatteryCurve);
            break;
          }
          case 26: {
            if (connectivity_ == null) {
              Connectivity = new global::Toit.Proto.Model.DeviceHealth.Types.Connectivity();
            }
            input.ReadMessage(Connectivity);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DeviceHealth message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Power : pb::IMessage<Power>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Power> _parser = new pb::MessageParser<Power>(() => new Power());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Power> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.Model.DeviceHealth.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Power() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Power(Power other) : this() {
          value_ = other.value_ != null ? other.value_.Clone() : null;
          lastUpdated_ = other.lastUpdated_ != null ? other.lastUpdated_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Power Clone() {
          return new Power(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private global::Toit.Proto.Model.DeviceHealth.Types.Power.Types.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Toit.Proto.Model.DeviceHealth.Types.Power.Types.Value Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        /// <summary>Field number for the "last_updated" field.</summary>
        public const int LastUpdatedFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdated_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdated {
          get { return lastUpdated_; }
          set {
            lastUpdated_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Power);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Power other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Value, other.Value)) return false;
          if (!object.Equals(LastUpdated, other.LastUpdated)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (value_ != null) hash ^= Value.GetHashCode();
          if (lastUpdated_ != null) hash ^= LastUpdated.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (value_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Value);
          }
          if (lastUpdated_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(LastUpdated);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (value_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Value);
          }
          if (lastUpdated_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(LastUpdated);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (lastUpdated_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdated);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Power other) {
          if (other == null) {
            return;
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Toit.Proto.Model.DeviceHealth.Types.Power.Types.Value();
            }
            Value.MergeFrom(other.Value);
          }
          if (other.lastUpdated_ != null) {
            if (lastUpdated_ == null) {
              LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastUpdated.MergeFrom(other.LastUpdated);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (value_ == null) {
                  Value = new global::Toit.Proto.Model.DeviceHealth.Types.Power.Types.Value();
                }
                input.ReadMessage(Value);
                break;
              }
              case 18: {
                if (lastUpdated_ == null) {
                  LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdated);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (value_ == null) {
                  Value = new global::Toit.Proto.Model.DeviceHealth.Types.Power.Types.Value();
                }
                input.ReadMessage(Value);
                break;
              }
              case 18: {
                if (lastUpdated_ == null) {
                  LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdated);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Power message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Value : pb::IMessage<Value>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Value> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Toit.Proto.Model.DeviceHealth.Types.Power.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Value() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Value(Value other) : this() {
              switch (other.PowerCase) {
                case PowerOneofCase.Battery:
                  Battery = other.Battery;
                  break;
                case PowerOneofCase.Pluggedin:
                  Pluggedin = other.Pluggedin.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Value Clone() {
              return new Value(this);
            }

            /// <summary>Field number for the "battery" field.</summary>
            public const int BatteryFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public double Battery {
              get { return powerCase_ == PowerOneofCase.Battery ? (double) power_ : 0D; }
              set {
                power_ = value;
                powerCase_ = PowerOneofCase.Battery;
              }
            }

            /// <summary>Field number for the "pluggedin" field.</summary>
            public const int PluggedinFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Protobuf.WellKnownTypes.Empty Pluggedin {
              get { return powerCase_ == PowerOneofCase.Pluggedin ? (global::Google.Protobuf.WellKnownTypes.Empty) power_ : null; }
              set {
                power_ = value;
                powerCase_ = value == null ? PowerOneofCase.None : PowerOneofCase.Pluggedin;
              }
            }

            private object power_;
            /// <summary>Enum of possible cases for the "power" oneof.</summary>
            public enum PowerOneofCase {
              None = 0,
              Battery = 1,
              Pluggedin = 2,
            }
            private PowerOneofCase powerCase_ = PowerOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PowerOneofCase PowerCase {
              get { return powerCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearPower() {
              powerCase_ = PowerOneofCase.None;
              power_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Value);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Value other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Battery, other.Battery)) return false;
              if (!object.Equals(Pluggedin, other.Pluggedin)) return false;
              if (PowerCase != other.PowerCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (powerCase_ == PowerOneofCase.Battery) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Battery);
              if (powerCase_ == PowerOneofCase.Pluggedin) hash ^= Pluggedin.GetHashCode();
              hash ^= (int) powerCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (powerCase_ == PowerOneofCase.Battery) {
                output.WriteRawTag(9);
                output.WriteDouble(Battery);
              }
              if (powerCase_ == PowerOneofCase.Pluggedin) {
                output.WriteRawTag(18);
                output.WriteMessage(Pluggedin);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (powerCase_ == PowerOneofCase.Battery) {
                output.WriteRawTag(9);
                output.WriteDouble(Battery);
              }
              if (powerCase_ == PowerOneofCase.Pluggedin) {
                output.WriteRawTag(18);
                output.WriteMessage(Pluggedin);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (powerCase_ == PowerOneofCase.Battery) {
                size += 1 + 8;
              }
              if (powerCase_ == PowerOneofCase.Pluggedin) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pluggedin);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Value other) {
              if (other == null) {
                return;
              }
              switch (other.PowerCase) {
                case PowerOneofCase.Battery:
                  Battery = other.Battery;
                  break;
                case PowerOneofCase.Pluggedin:
                  if (Pluggedin == null) {
                    Pluggedin = new global::Google.Protobuf.WellKnownTypes.Empty();
                  }
                  Pluggedin.MergeFrom(other.Pluggedin);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 9: {
                    Battery = input.ReadDouble();
                    break;
                  }
                  case 18: {
                    global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
                    if (powerCase_ == PowerOneofCase.Pluggedin) {
                      subBuilder.MergeFrom(Pluggedin);
                    }
                    input.ReadMessage(subBuilder);
                    Pluggedin = subBuilder;
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 9: {
                    Battery = input.ReadDouble();
                    break;
                  }
                  case 18: {
                    global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
                    if (powerCase_ == PowerOneofCase.Pluggedin) {
                      subBuilder.MergeFrom(Pluggedin);
                    }
                    input.ReadMessage(subBuilder);
                    Pluggedin = subBuilder;
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class BatteryCurve : pb::IMessage<BatteryCurve>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BatteryCurve> _parser = new pb::MessageParser<BatteryCurve>(() => new BatteryCurve());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BatteryCurve> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.Model.DeviceHealth.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatteryCurve() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatteryCurve(BatteryCurve other) : this() {
          slope_ = other.slope_;
          lastUpdated_ = other.lastUpdated_ != null ? other.lastUpdated_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatteryCurve Clone() {
          return new BatteryCurve(this);
        }

        /// <summary>Field number for the "slope" field.</summary>
        public const int SlopeFieldNumber = 1;
        private double slope_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Slope {
          get { return slope_; }
          set {
            slope_ = value;
          }
        }

        /// <summary>Field number for the "last_updated" field.</summary>
        public const int LastUpdatedFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdated_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdated {
          get { return lastUpdated_; }
          set {
            lastUpdated_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BatteryCurve);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BatteryCurve other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Slope, other.Slope)) return false;
          if (!object.Equals(LastUpdated, other.LastUpdated)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Slope != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Slope);
          if (lastUpdated_ != null) hash ^= LastUpdated.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Slope != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Slope);
          }
          if (lastUpdated_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(LastUpdated);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Slope != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Slope);
          }
          if (lastUpdated_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(LastUpdated);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Slope != 0D) {
            size += 1 + 8;
          }
          if (lastUpdated_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdated);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BatteryCurve other) {
          if (other == null) {
            return;
          }
          if (other.Slope != 0D) {
            Slope = other.Slope;
          }
          if (other.lastUpdated_ != null) {
            if (lastUpdated_ == null) {
              LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastUpdated.MergeFrom(other.LastUpdated);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                Slope = input.ReadDouble();
                break;
              }
              case 18: {
                if (lastUpdated_ == null) {
                  LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdated);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                Slope = input.ReadDouble();
                break;
              }
              case 18: {
                if (lastUpdated_ == null) {
                  LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdated);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Connectivity : pb::IMessage<Connectivity>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Connectivity> _parser = new pb::MessageParser<Connectivity>(() => new Connectivity());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Connectivity> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.Model.DeviceHealth.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Connectivity() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Connectivity(Connectivity other) : this() {
          lastSeen_ = other.lastSeen_ != null ? other.lastSeen_.Clone() : null;
          connected_ = other.connected_;
          checkins_ = other.checkins_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Connectivity Clone() {
          return new Connectivity(this);
        }

        /// <summary>Field number for the "last_seen" field.</summary>
        public const int LastSeenFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastSeen_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastSeen {
          get { return lastSeen_; }
          set {
            lastSeen_ = value;
          }
        }

        /// <summary>Field number for the "connected" field.</summary>
        public const int ConnectedFieldNumber = 2;
        private bool connected_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Connected {
          get { return connected_; }
          set {
            connected_ = value;
          }
        }

        /// <summary>Field number for the "checkins" field.</summary>
        public const int CheckinsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Toit.Proto.Model.DeviceHealth.Types.Connectivity.Types.Checkin> _repeated_checkins_codec
            = pb::FieldCodec.ForMessage(26, global::Toit.Proto.Model.DeviceHealth.Types.Connectivity.Types.Checkin.Parser);
        private readonly pbc::RepeatedField<global::Toit.Proto.Model.DeviceHealth.Types.Connectivity.Types.Checkin> checkins_ = new pbc::RepeatedField<global::Toit.Proto.Model.DeviceHealth.Types.Connectivity.Types.Checkin>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Toit.Proto.Model.DeviceHealth.Types.Connectivity.Types.Checkin> Checkins {
          get { return checkins_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Connectivity);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Connectivity other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(LastSeen, other.LastSeen)) return false;
          if (Connected != other.Connected) return false;
          if(!checkins_.Equals(other.checkins_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (lastSeen_ != null) hash ^= LastSeen.GetHashCode();
          if (Connected != false) hash ^= Connected.GetHashCode();
          hash ^= checkins_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (lastSeen_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(LastSeen);
          }
          if (Connected != false) {
            output.WriteRawTag(16);
            output.WriteBool(Connected);
          }
          checkins_.WriteTo(output, _repeated_checkins_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (lastSeen_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(LastSeen);
          }
          if (Connected != false) {
            output.WriteRawTag(16);
            output.WriteBool(Connected);
          }
          checkins_.WriteTo(ref output, _repeated_checkins_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (lastSeen_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastSeen);
          }
          if (Connected != false) {
            size += 1 + 1;
          }
          size += checkins_.CalculateSize(_repeated_checkins_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Connectivity other) {
          if (other == null) {
            return;
          }
          if (other.lastSeen_ != null) {
            if (lastSeen_ == null) {
              LastSeen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastSeen.MergeFrom(other.LastSeen);
          }
          if (other.Connected != false) {
            Connected = other.Connected;
          }
          checkins_.Add(other.checkins_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (lastSeen_ == null) {
                  LastSeen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastSeen);
                break;
              }
              case 16: {
                Connected = input.ReadBool();
                break;
              }
              case 26: {
                checkins_.AddEntriesFrom(input, _repeated_checkins_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (lastSeen_ == null) {
                  LastSeen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastSeen);
                break;
              }
              case 16: {
                Connected = input.ReadBool();
                break;
              }
              case 26: {
                checkins_.AddEntriesFrom(ref input, _repeated_checkins_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Connectivity message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Checkin : pb::IMessage<Checkin>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Checkin> _parser = new pb::MessageParser<Checkin>(() => new Checkin());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Checkin> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Toit.Proto.Model.DeviceHealth.Types.Connectivity.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Checkin() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Checkin(Checkin other) : this() {
              missed_ = other.missed_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Checkin Clone() {
              return new Checkin(this);
            }

            /// <summary>Field number for the "missed" field.</summary>
            public const int MissedFieldNumber = 1;
            private bool missed_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Missed {
              get { return missed_; }
              set {
                missed_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Checkin);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Checkin other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Missed != other.Missed) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Missed != false) hash ^= Missed.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Missed != false) {
                output.WriteRawTag(8);
                output.WriteBool(Missed);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Missed != false) {
                output.WriteRawTag(8);
                output.WriteBool(Missed);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Missed != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Checkin other) {
              if (other == null) {
                return;
              }
              if (other.Missed != false) {
                Missed = other.Missed;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Missed = input.ReadBool();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Missed = input.ReadBool();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class HardwareIdentity : pb::IMessage<HardwareIdentity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HardwareIdentity> _parser = new pb::MessageParser<HardwareIdentity>(() => new HardwareIdentity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HardwareIdentity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareIdentity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareIdentity(HardwareIdentity other) : this() {
      hardwareId_ = other.hardwareId_;
      sequenceNumber_ = other.sequenceNumber_;
      batch_ = other.batch_;
      privateKey_ = other.privateKey_;
      certificate_ = other.certificate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareIdentity Clone() {
      return new HardwareIdentity(this);
    }

    /// <summary>Field number for the "hardware_id" field.</summary>
    public const int HardwareIdFieldNumber = 1;
    private pb::ByteString hardwareId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString HardwareId {
      get { return hardwareId_; }
      set {
        hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 2;
    private long sequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "batch" field.</summary>
    public const int BatchFieldNumber = 3;
    private string batch_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Batch {
      get { return batch_; }
      set {
        batch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "private_key" field.</summary>
    public const int PrivateKeyFieldNumber = 4;
    private pb::ByteString privateKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "certificate" field.</summary>
    public const int CertificateFieldNumber = 5;
    private pb::ByteString certificate_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Certificate {
      get { return certificate_; }
      set {
        certificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HardwareIdentity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HardwareIdentity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HardwareId != other.HardwareId) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (Batch != other.Batch) return false;
      if (PrivateKey != other.PrivateKey) return false;
      if (Certificate != other.Certificate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
      if (SequenceNumber != 0L) hash ^= SequenceNumber.GetHashCode();
      if (Batch.Length != 0) hash ^= Batch.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (Certificate.Length != 0) hash ^= Certificate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HardwareId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(HardwareId);
      }
      if (SequenceNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SequenceNumber);
      }
      if (Batch.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Batch);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(PrivateKey);
      }
      if (Certificate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Certificate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HardwareId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(HardwareId);
      }
      if (SequenceNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SequenceNumber);
      }
      if (Batch.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Batch);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(PrivateKey);
      }
      if (Certificate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Certificate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HardwareId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(HardwareId);
      }
      if (SequenceNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SequenceNumber);
      }
      if (Batch.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Batch);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (Certificate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Certificate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HardwareIdentity other) {
      if (other == null) {
        return;
      }
      if (other.HardwareId.Length != 0) {
        HardwareId = other.HardwareId;
      }
      if (other.SequenceNumber != 0L) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.Batch.Length != 0) {
        Batch = other.Batch;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      if (other.Certificate.Length != 0) {
        Certificate = other.Certificate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HardwareId = input.ReadBytes();
            break;
          }
          case 16: {
            SequenceNumber = input.ReadInt64();
            break;
          }
          case 26: {
            Batch = input.ReadString();
            break;
          }
          case 34: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 42: {
            Certificate = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HardwareId = input.ReadBytes();
            break;
          }
          case 16: {
            SequenceNumber = input.ReadInt64();
            break;
          }
          case 26: {
            Batch = input.ReadString();
            break;
          }
          case 34: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 42: {
            Certificate = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HardwareIdentityInfo : pb::IMessage<HardwareIdentityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HardwareIdentityInfo> _parser = new pb::MessageParser<HardwareIdentityInfo>(() => new HardwareIdentityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HardwareIdentityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareIdentityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareIdentityInfo(HardwareIdentityInfo other) : this() {
      factorySdkVersion_ = other.factorySdkVersion_;
      flashedBy_ = other.flashedBy_;
      iccid_ = other.iccid_;
      chipId_ = other.chipId_;
      factoryDeviceModel_ = other.factoryDeviceModel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareIdentityInfo Clone() {
      return new HardwareIdentityInfo(this);
    }

    /// <summary>Field number for the "factory_sdk_version" field.</summary>
    public const int FactorySdkVersionFieldNumber = 1;
    private string factorySdkVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FactorySdkVersion {
      get { return factorySdkVersion_; }
      set {
        factorySdkVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flashed_by" field.</summary>
    public const int FlashedByFieldNumber = 2;
    private pb::ByteString flashedBy_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FlashedBy {
      get { return flashedBy_; }
      set {
        flashedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iccid" field.</summary>
    public const int IccidFieldNumber = 3;
    private string iccid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iccid {
      get { return iccid_; }
      set {
        iccid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chip_id" field.</summary>
    public const int ChipIdFieldNumber = 4;
    private string chipId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChipId {
      get { return chipId_; }
      set {
        chipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "factory_device_model" field.</summary>
    public const int FactoryDeviceModelFieldNumber = 5;
    private string factoryDeviceModel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FactoryDeviceModel {
      get { return factoryDeviceModel_; }
      set {
        factoryDeviceModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HardwareIdentityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HardwareIdentityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FactorySdkVersion != other.FactorySdkVersion) return false;
      if (FlashedBy != other.FlashedBy) return false;
      if (Iccid != other.Iccid) return false;
      if (ChipId != other.ChipId) return false;
      if (FactoryDeviceModel != other.FactoryDeviceModel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FactorySdkVersion.Length != 0) hash ^= FactorySdkVersion.GetHashCode();
      if (FlashedBy.Length != 0) hash ^= FlashedBy.GetHashCode();
      if (Iccid.Length != 0) hash ^= Iccid.GetHashCode();
      if (ChipId.Length != 0) hash ^= ChipId.GetHashCode();
      if (FactoryDeviceModel.Length != 0) hash ^= FactoryDeviceModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FactorySdkVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FactorySdkVersion);
      }
      if (FlashedBy.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(FlashedBy);
      }
      if (Iccid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Iccid);
      }
      if (ChipId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ChipId);
      }
      if (FactoryDeviceModel.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FactoryDeviceModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FactorySdkVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FactorySdkVersion);
      }
      if (FlashedBy.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(FlashedBy);
      }
      if (Iccid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Iccid);
      }
      if (ChipId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ChipId);
      }
      if (FactoryDeviceModel.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FactoryDeviceModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FactorySdkVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FactorySdkVersion);
      }
      if (FlashedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FlashedBy);
      }
      if (Iccid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Iccid);
      }
      if (ChipId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChipId);
      }
      if (FactoryDeviceModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FactoryDeviceModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HardwareIdentityInfo other) {
      if (other == null) {
        return;
      }
      if (other.FactorySdkVersion.Length != 0) {
        FactorySdkVersion = other.FactorySdkVersion;
      }
      if (other.FlashedBy.Length != 0) {
        FlashedBy = other.FlashedBy;
      }
      if (other.Iccid.Length != 0) {
        Iccid = other.Iccid;
      }
      if (other.ChipId.Length != 0) {
        ChipId = other.ChipId;
      }
      if (other.FactoryDeviceModel.Length != 0) {
        FactoryDeviceModel = other.FactoryDeviceModel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FactorySdkVersion = input.ReadString();
            break;
          }
          case 18: {
            FlashedBy = input.ReadBytes();
            break;
          }
          case 26: {
            Iccid = input.ReadString();
            break;
          }
          case 34: {
            ChipId = input.ReadString();
            break;
          }
          case 42: {
            FactoryDeviceModel = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FactorySdkVersion = input.ReadString();
            break;
          }
          case 18: {
            FlashedBy = input.ReadBytes();
            break;
          }
          case 26: {
            Iccid = input.ReadString();
            break;
          }
          case 34: {
            ChipId = input.ReadString();
            break;
          }
          case 42: {
            FactoryDeviceModel = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HardwareInfo : pb::IMessage<HardwareInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HardwareInfo> _parser = new pb::MessageParser<HardwareInfo>(() => new HardwareInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HardwareInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareInfo(HardwareInfo other) : this() {
      hardwareId_ = other.hardwareId_;
      hardwareFqdn_ = other.hardwareFqdn_;
      organizationId_ = other.organizationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareInfo Clone() {
      return new HardwareInfo(this);
    }

    /// <summary>Field number for the "hardware_id" field.</summary>
    public const int HardwareIdFieldNumber = 1;
    private pb::ByteString hardwareId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString HardwareId {
      get { return hardwareId_; }
      set {
        hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hardware_fqdn" field.</summary>
    public const int HardwareFqdnFieldNumber = 2;
    private string hardwareFqdn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HardwareFqdn {
      get { return hardwareFqdn_; }
      set {
        hardwareFqdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "organization_id" field.</summary>
    public const int OrganizationIdFieldNumber = 4;
    private pb::ByteString organizationId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OrganizationId {
      get { return organizationId_; }
      set {
        organizationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HardwareInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HardwareInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HardwareId != other.HardwareId) return false;
      if (HardwareFqdn != other.HardwareFqdn) return false;
      if (OrganizationId != other.OrganizationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
      if (HardwareFqdn.Length != 0) hash ^= HardwareFqdn.GetHashCode();
      if (OrganizationId.Length != 0) hash ^= OrganizationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HardwareId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(HardwareId);
      }
      if (HardwareFqdn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HardwareFqdn);
      }
      if (OrganizationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(OrganizationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HardwareId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(HardwareId);
      }
      if (HardwareFqdn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HardwareFqdn);
      }
      if (OrganizationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(OrganizationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HardwareId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(HardwareId);
      }
      if (HardwareFqdn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareFqdn);
      }
      if (OrganizationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrganizationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HardwareInfo other) {
      if (other == null) {
        return;
      }
      if (other.HardwareId.Length != 0) {
        HardwareId = other.HardwareId;
      }
      if (other.HardwareFqdn.Length != 0) {
        HardwareFqdn = other.HardwareFqdn;
      }
      if (other.OrganizationId.Length != 0) {
        OrganizationId = other.OrganizationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HardwareId = input.ReadBytes();
            break;
          }
          case 18: {
            HardwareFqdn = input.ReadString();
            break;
          }
          case 34: {
            OrganizationId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HardwareId = input.ReadBytes();
            break;
          }
          case 18: {
            HardwareFqdn = input.ReadString();
            break;
          }
          case 34: {
            OrganizationId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HardwareToDeviceInfo : pb::IMessage<HardwareToDeviceInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HardwareToDeviceInfo> _parser = new pb::MessageParser<HardwareToDeviceInfo>(() => new HardwareToDeviceInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HardwareToDeviceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareToDeviceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareToDeviceInfo(HardwareToDeviceInfo other) : this() {
      hardwareId_ = other.hardwareId_;
      deviceId_ = other.deviceId_;
      bound_ = other.bound_ != null ? other.bound_.Clone() : null;
      unbound_ = other.unbound_ != null ? other.unbound_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HardwareToDeviceInfo Clone() {
      return new HardwareToDeviceInfo(this);
    }

    /// <summary>Field number for the "hardware_id" field.</summary>
    public const int HardwareIdFieldNumber = 1;
    private pb::ByteString hardwareId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString HardwareId {
      get { return hardwareId_; }
      set {
        hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bound" field.</summary>
    public const int BoundFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp bound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Bound {
      get { return bound_; }
      set {
        bound_ = value;
      }
    }

    /// <summary>Field number for the "unbound" field.</summary>
    public const int UnboundFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp unbound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Unbound {
      get { return unbound_; }
      set {
        unbound_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HardwareToDeviceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HardwareToDeviceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HardwareId != other.HardwareId) return false;
      if (DeviceId != other.DeviceId) return false;
      if (!object.Equals(Bound, other.Bound)) return false;
      if (!object.Equals(Unbound, other.Unbound)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (bound_ != null) hash ^= Bound.GetHashCode();
      if (unbound_ != null) hash ^= Unbound.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HardwareId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(HardwareId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DeviceId);
      }
      if (bound_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Bound);
      }
      if (unbound_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Unbound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HardwareId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(HardwareId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DeviceId);
      }
      if (bound_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Bound);
      }
      if (unbound_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Unbound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HardwareId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(HardwareId);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (bound_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bound);
      }
      if (unbound_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unbound);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HardwareToDeviceInfo other) {
      if (other == null) {
        return;
      }
      if (other.HardwareId.Length != 0) {
        HardwareId = other.HardwareId;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.bound_ != null) {
        if (bound_ == null) {
          Bound = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Bound.MergeFrom(other.Bound);
      }
      if (other.unbound_ != null) {
        if (unbound_ == null) {
          Unbound = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Unbound.MergeFrom(other.Unbound);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HardwareId = input.ReadBytes();
            break;
          }
          case 18: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 26: {
            if (bound_ == null) {
              Bound = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Bound);
            break;
          }
          case 34: {
            if (unbound_ == null) {
              Unbound = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Unbound);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HardwareId = input.ReadBytes();
            break;
          }
          case 18: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 26: {
            if (bound_ == null) {
              Bound = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Bound);
            break;
          }
          case 34: {
            if (unbound_ == null) {
              Unbound = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Unbound);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceEvent : pb::IMessage<DeviceEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceEvent> _parser = new pb::MessageParser<DeviceEvent>(() => new DeviceEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceEvent(DeviceEvent other) : this() {
      deviceId_ = other.deviceId_;
      eventId_ = other.eventId_;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      type_ = other.type_;
      msg_ = other.msg_;
      data_ = other.data_;
      initiater_ = other.initiater_ != null ? other.initiater_.Clone() : null;
      information_ = other.information_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceEvent Clone() {
      return new DeviceEvent(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 2;
    private pb::ByteString eventId_ = pb::ByteString.Empty;
    /// <summary>
    /// Together with the device_id, it globally identifies the event. Device
    /// events can be sorted, and will always be returned in increasing order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Toit.Proto.Model.DeviceEvent.Types.Type type_ = global::Toit.Proto.Model.DeviceEvent.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceEvent.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 5;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initiater" field.</summary>
    public const int InitiaterFieldNumber = 7;
    private global::Toit.Proto.Model.DeviceEvent.Types.Initiater initiater_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceEvent.Types.Initiater Initiater {
      get { return initiater_; }
      set {
        initiater_ = value;
      }
    }

    /// <summary>Field number for the "information" field.</summary>
    public const int InformationFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Toit.Proto.Model.DeviceEvent.Types.Info> _repeated_information_codec
        = pb::FieldCodec.ForMessage(66, global::Toit.Proto.Model.DeviceEvent.Types.Info.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.Model.DeviceEvent.Types.Info> information_ = new pbc::RepeatedField<global::Toit.Proto.Model.DeviceEvent.Types.Info>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.Model.DeviceEvent.Types.Info> Information {
      get { return information_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (EventId != other.EventId) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (Type != other.Type) return false;
      if (Msg != other.Msg) return false;
      if (Data != other.Data) return false;
      if (!object.Equals(Initiater, other.Initiater)) return false;
      if(!information_.Equals(other.information_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (Type != global::Toit.Proto.Model.DeviceEvent.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (initiater_ != null) hash ^= Initiater.GetHashCode();
      hash ^= information_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(EventId);
      }
      if (created_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Created);
      }
      if (Type != global::Toit.Proto.Model.DeviceEvent.Types.Type.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Msg);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Data);
      }
      if (initiater_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Initiater);
      }
      information_.WriteTo(output, _repeated_information_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(EventId);
      }
      if (created_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Created);
      }
      if (Type != global::Toit.Proto.Model.DeviceEvent.Types.Type.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Msg);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Data);
      }
      if (initiater_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Initiater);
      }
      information_.WriteTo(ref output, _repeated_information_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EventId);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (Type != global::Toit.Proto.Model.DeviceEvent.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (initiater_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Initiater);
      }
      size += information_.CalculateSize(_repeated_information_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceEvent other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.Type != global::Toit.Proto.Model.DeviceEvent.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.initiater_ != null) {
        if (initiater_ == null) {
          Initiater = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater();
        }
        Initiater.MergeFrom(other.Initiater);
      }
      information_.Add(other.information_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            EventId = input.ReadBytes();
            break;
          }
          case 26: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 32: {
            Type = (global::Toit.Proto.Model.DeviceEvent.Types.Type) input.ReadEnum();
            break;
          }
          case 42: {
            Msg = input.ReadString();
            break;
          }
          case 50: {
            Data = input.ReadBytes();
            break;
          }
          case 58: {
            if (initiater_ == null) {
              Initiater = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater();
            }
            input.ReadMessage(Initiater);
            break;
          }
          case 66: {
            information_.AddEntriesFrom(input, _repeated_information_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            EventId = input.ReadBytes();
            break;
          }
          case 26: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 32: {
            Type = (global::Toit.Proto.Model.DeviceEvent.Types.Type) input.ReadEnum();
            break;
          }
          case 42: {
            Msg = input.ReadString();
            break;
          }
          case 50: {
            Data = input.ReadBytes();
            break;
          }
          case 58: {
            if (initiater_ == null) {
              Initiater = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater();
            }
            input.ReadMessage(Initiater);
            break;
          }
          case 66: {
            information_.AddEntriesFrom(ref input, _repeated_information_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DeviceEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("CONFIG_CHANGE")] ConfigChange = 1,
        [pbr::OriginalName("STATUS_CHANGE")] StatusChange = 2,
        [pbr::OriginalName("NEXT_ACTION")] NextAction = 3,
        [pbr::OriginalName("DEVICE_ACTION")] DeviceAction = 4,
        [pbr::OriginalName("QUEUE_OVERFLOW")] QueueOverflow = 5,
        [pbr::OriginalName("REQUEST_FILE")] RequestFile = 6,
      }

      public sealed partial class Initiater : pb::IMessage<Initiater>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Initiater> _parser = new pb::MessageParser<Initiater>(() => new Initiater());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Initiater> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.Model.DeviceEvent.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Initiater() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Initiater(Initiater other) : this() {
          switch (other.InitiaterCase) {
            case InitiaterOneofCase.Device:
              Device = other.Device.Clone();
              break;
            case InitiaterOneofCase.Console:
              Console = other.Console.Clone();
              break;
            case InitiaterOneofCase.User:
              User = other.User.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Initiater Clone() {
          return new Initiater(this);
        }

        /// <summary>Field number for the "device" field.</summary>
        public const int DeviceFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Device Device {
          get { return initiaterCase_ == InitiaterOneofCase.Device ? (global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Device) initiater_ : null; }
          set {
            initiater_ = value;
            initiaterCase_ = value == null ? InitiaterOneofCase.None : InitiaterOneofCase.Device;
          }
        }

        /// <summary>Field number for the "console" field.</summary>
        public const int ConsoleFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Console Console {
          get { return initiaterCase_ == InitiaterOneofCase.Console ? (global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Console) initiater_ : null; }
          set {
            initiater_ = value;
            initiaterCase_ = value == null ? InitiaterOneofCase.None : InitiaterOneofCase.Console;
          }
        }

        /// <summary>Field number for the "user" field.</summary>
        public const int UserFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.User User {
          get { return initiaterCase_ == InitiaterOneofCase.User ? (global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.User) initiater_ : null; }
          set {
            initiater_ = value;
            initiaterCase_ = value == null ? InitiaterOneofCase.None : InitiaterOneofCase.User;
          }
        }

        private object initiater_;
        /// <summary>Enum of possible cases for the "initiater" oneof.</summary>
        public enum InitiaterOneofCase {
          None = 0,
          Device = 1,
          Console = 2,
          User = 3,
        }
        private InitiaterOneofCase initiaterCase_ = InitiaterOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitiaterOneofCase InitiaterCase {
          get { return initiaterCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearInitiater() {
          initiaterCase_ = InitiaterOneofCase.None;
          initiater_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Initiater);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Initiater other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Device, other.Device)) return false;
          if (!object.Equals(Console, other.Console)) return false;
          if (!object.Equals(User, other.User)) return false;
          if (InitiaterCase != other.InitiaterCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (initiaterCase_ == InitiaterOneofCase.Device) hash ^= Device.GetHashCode();
          if (initiaterCase_ == InitiaterOneofCase.Console) hash ^= Console.GetHashCode();
          if (initiaterCase_ == InitiaterOneofCase.User) hash ^= User.GetHashCode();
          hash ^= (int) initiaterCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (initiaterCase_ == InitiaterOneofCase.Device) {
            output.WriteRawTag(10);
            output.WriteMessage(Device);
          }
          if (initiaterCase_ == InitiaterOneofCase.Console) {
            output.WriteRawTag(18);
            output.WriteMessage(Console);
          }
          if (initiaterCase_ == InitiaterOneofCase.User) {
            output.WriteRawTag(26);
            output.WriteMessage(User);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (initiaterCase_ == InitiaterOneofCase.Device) {
            output.WriteRawTag(10);
            output.WriteMessage(Device);
          }
          if (initiaterCase_ == InitiaterOneofCase.Console) {
            output.WriteRawTag(18);
            output.WriteMessage(Console);
          }
          if (initiaterCase_ == InitiaterOneofCase.User) {
            output.WriteRawTag(26);
            output.WriteMessage(User);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (initiaterCase_ == InitiaterOneofCase.Device) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Device);
          }
          if (initiaterCase_ == InitiaterOneofCase.Console) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Console);
          }
          if (initiaterCase_ == InitiaterOneofCase.User) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Initiater other) {
          if (other == null) {
            return;
          }
          switch (other.InitiaterCase) {
            case InitiaterOneofCase.Device:
              if (Device == null) {
                Device = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Device();
              }
              Device.MergeFrom(other.Device);
              break;
            case InitiaterOneofCase.Console:
              if (Console == null) {
                Console = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Console();
              }
              Console.MergeFrom(other.Console);
              break;
            case InitiaterOneofCase.User:
              if (User == null) {
                User = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.User();
              }
              User.MergeFrom(other.User);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Device subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Device();
                if (initiaterCase_ == InitiaterOneofCase.Device) {
                  subBuilder.MergeFrom(Device);
                }
                input.ReadMessage(subBuilder);
                Device = subBuilder;
                break;
              }
              case 18: {
                global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Console subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Console();
                if (initiaterCase_ == InitiaterOneofCase.Console) {
                  subBuilder.MergeFrom(Console);
                }
                input.ReadMessage(subBuilder);
                Console = subBuilder;
                break;
              }
              case 26: {
                global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.User subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.User();
                if (initiaterCase_ == InitiaterOneofCase.User) {
                  subBuilder.MergeFrom(User);
                }
                input.ReadMessage(subBuilder);
                User = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Device subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Device();
                if (initiaterCase_ == InitiaterOneofCase.Device) {
                  subBuilder.MergeFrom(Device);
                }
                input.ReadMessage(subBuilder);
                Device = subBuilder;
                break;
              }
              case 18: {
                global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Console subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.Console();
                if (initiaterCase_ == InitiaterOneofCase.Console) {
                  subBuilder.MergeFrom(Console);
                }
                input.ReadMessage(subBuilder);
                Console = subBuilder;
                break;
              }
              case 26: {
                global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.User subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Types.User();
                if (initiaterCase_ == InitiaterOneofCase.User) {
                  subBuilder.MergeFrom(User);
                }
                input.ReadMessage(subBuilder);
                User = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Initiater message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Device : pb::IMessage<Device>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Device> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Device() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Device(Device other) : this() {
              deviceId_ = other.deviceId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Device Clone() {
              return new Device(this);
            }

            /// <summary>Field number for the "device_id" field.</summary>
            public const int DeviceIdFieldNumber = 1;
            private pb::ByteString deviceId_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString DeviceId {
              get { return deviceId_; }
              set {
                deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Device);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Device other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (DeviceId != other.DeviceId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (DeviceId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(DeviceId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (DeviceId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(DeviceId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (DeviceId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Device other) {
              if (other == null) {
                return;
              }
              if (other.DeviceId.Length != 0) {
                DeviceId = other.DeviceId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    DeviceId = input.ReadBytes();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    DeviceId = input.ReadBytes();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Console : pb::IMessage<Console>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Console> _parser = new pb::MessageParser<Console>(() => new Console());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Console> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Console() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Console(Console other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Console Clone() {
              return new Console(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Console);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Console other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Console other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class User : pb::IMessage<User>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<User> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Toit.Proto.Model.DeviceEvent.Types.Initiater.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public User() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public User(User other) : this() {
              userId_ = other.userId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public User Clone() {
              return new User(this);
            }

            /// <summary>Field number for the "user_id" field.</summary>
            public const int UserIdFieldNumber = 1;
            private pb::ByteString userId_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString UserId {
              get { return userId_; }
              set {
                userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as User);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(User other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (UserId != other.UserId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (UserId.Length != 0) hash ^= UserId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (UserId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(UserId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (UserId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(UserId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (UserId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(UserId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(User other) {
              if (other == null) {
                return;
              }
              if (other.UserId.Length != 0) {
                UserId = other.UserId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    UserId = input.ReadBytes();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    UserId = input.ReadBytes();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class Info : pb::IMessage<Info>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Info> _parser = new pb::MessageParser<Info>(() => new Info());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Info> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.Model.DeviceEvent.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Info() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Info(Info other) : this() {
          key_ = other.key_;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Info Clone() {
          return new Info(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private string key_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Info);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Info other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Key != other.Key) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Key.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Key.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Info other) {
          if (other == null) {
            return;
          }
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Info message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Value : pb::IMessage<Value>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Value> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Toit.Proto.Model.DeviceEvent.Types.Info.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Value() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Value(Value other) : this() {
              switch (other.ValueCase) {
                case ValueOneofCase.Primitive:
                  Primitive = other.Primitive.Clone();
                  break;
                case ValueOneofCase.Diff:
                  Diff = other.Diff.Clone();
                  break;
                case ValueOneofCase.Error:
                  Error = other.Error.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Value Clone() {
              return new Value(this);
            }

            /// <summary>Field number for the "primitive" field.</summary>
            public const int PrimitiveFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive Primitive {
              get { return valueCase_ == ValueOneofCase.Primitive ? (global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive) value_ : null; }
              set {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Primitive;
              }
            }

            /// <summary>Field number for the "diff" field.</summary>
            public const int DiffFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Diff Diff {
              get { return valueCase_ == ValueOneofCase.Diff ? (global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Diff) value_ : null; }
              set {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Diff;
              }
            }

            /// <summary>Field number for the "error" field.</summary>
            public const int ErrorFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Error Error {
              get { return valueCase_ == ValueOneofCase.Error ? (global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Error) value_ : null; }
              set {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Error;
              }
            }

            private object value_;
            /// <summary>Enum of possible cases for the "value" oneof.</summary>
            public enum ValueOneofCase {
              None = 0,
              Primitive = 1,
              Diff = 2,
              Error = 3,
            }
            private ValueOneofCase valueCase_ = ValueOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ValueOneofCase ValueCase {
              get { return valueCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearValue() {
              valueCase_ = ValueOneofCase.None;
              value_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Value);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Value other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Primitive, other.Primitive)) return false;
              if (!object.Equals(Diff, other.Diff)) return false;
              if (!object.Equals(Error, other.Error)) return false;
              if (ValueCase != other.ValueCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (valueCase_ == ValueOneofCase.Primitive) hash ^= Primitive.GetHashCode();
              if (valueCase_ == ValueOneofCase.Diff) hash ^= Diff.GetHashCode();
              if (valueCase_ == ValueOneofCase.Error) hash ^= Error.GetHashCode();
              hash ^= (int) valueCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (valueCase_ == ValueOneofCase.Primitive) {
                output.WriteRawTag(10);
                output.WriteMessage(Primitive);
              }
              if (valueCase_ == ValueOneofCase.Diff) {
                output.WriteRawTag(18);
                output.WriteMessage(Diff);
              }
              if (valueCase_ == ValueOneofCase.Error) {
                output.WriteRawTag(26);
                output.WriteMessage(Error);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (valueCase_ == ValueOneofCase.Primitive) {
                output.WriteRawTag(10);
                output.WriteMessage(Primitive);
              }
              if (valueCase_ == ValueOneofCase.Diff) {
                output.WriteRawTag(18);
                output.WriteMessage(Diff);
              }
              if (valueCase_ == ValueOneofCase.Error) {
                output.WriteRawTag(26);
                output.WriteMessage(Error);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (valueCase_ == ValueOneofCase.Primitive) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Primitive);
              }
              if (valueCase_ == ValueOneofCase.Diff) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Diff);
              }
              if (valueCase_ == ValueOneofCase.Error) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Value other) {
              if (other == null) {
                return;
              }
              switch (other.ValueCase) {
                case ValueOneofCase.Primitive:
                  if (Primitive == null) {
                    Primitive = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive();
                  }
                  Primitive.MergeFrom(other.Primitive);
                  break;
                case ValueOneofCase.Diff:
                  if (Diff == null) {
                    Diff = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Diff();
                  }
                  Diff.MergeFrom(other.Diff);
                  break;
                case ValueOneofCase.Error:
                  if (Error == null) {
                    Error = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Error();
                  }
                  Error.MergeFrom(other.Error);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive();
                    if (valueCase_ == ValueOneofCase.Primitive) {
                      subBuilder.MergeFrom(Primitive);
                    }
                    input.ReadMessage(subBuilder);
                    Primitive = subBuilder;
                    break;
                  }
                  case 18: {
                    global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Diff subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Diff();
                    if (valueCase_ == ValueOneofCase.Diff) {
                      subBuilder.MergeFrom(Diff);
                    }
                    input.ReadMessage(subBuilder);
                    Diff = subBuilder;
                    break;
                  }
                  case 26: {
                    global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Error subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Error();
                    if (valueCase_ == ValueOneofCase.Error) {
                      subBuilder.MergeFrom(Error);
                    }
                    input.ReadMessage(subBuilder);
                    Error = subBuilder;
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive();
                    if (valueCase_ == ValueOneofCase.Primitive) {
                      subBuilder.MergeFrom(Primitive);
                    }
                    input.ReadMessage(subBuilder);
                    Primitive = subBuilder;
                    break;
                  }
                  case 18: {
                    global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Diff subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Diff();
                    if (valueCase_ == ValueOneofCase.Diff) {
                      subBuilder.MergeFrom(Diff);
                    }
                    input.ReadMessage(subBuilder);
                    Diff = subBuilder;
                    break;
                  }
                  case 26: {
                    global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Error subBuilder = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Error();
                    if (valueCase_ == ValueOneofCase.Error) {
                      subBuilder.MergeFrom(Error);
                    }
                    input.ReadMessage(subBuilder);
                    Error = subBuilder;
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Value message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class Primitive : pb::IMessage<Primitive>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<Primitive> _parser = new pb::MessageParser<Primitive>(() => new Primitive());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Primitive> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Primitive() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Primitive(Primitive other) : this() {
                  type_ = other.type_;
                  value_ = other.value_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Primitive Clone() {
                  return new Primitive(this);
                }

                /// <summary>Field number for the "type" field.</summary>
                public const int TypeFieldNumber = 1;
                private global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type type_ = global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type.Invalid;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type Type {
                  get { return type_; }
                  set {
                    type_ = value;
                  }
                }

                /// <summary>Field number for the "value" field.</summary>
                public const int ValueFieldNumber = 2;
                private pb::ByteString value_ = pb::ByteString.Empty;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pb::ByteString Value {
                  get { return value_; }
                  set {
                    value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as Primitive);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Primitive other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Type != other.Type) return false;
                  if (Value != other.Value) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Type != global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type.Invalid) hash ^= Type.GetHashCode();
                  if (Value.Length != 0) hash ^= Value.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (Type != global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type.Invalid) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) Type);
                  }
                  if (Value.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteBytes(Value);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (Type != global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type.Invalid) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) Type);
                  }
                  if (Value.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteBytes(Value);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Type != global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type.Invalid) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
                  }
                  if (Value.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Primitive other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Type != global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type.Invalid) {
                    Type = other.Type;
                  }
                  if (other.Value.Length != 0) {
                    Value = other.Value;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Type = (global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type) input.ReadEnum();
                        break;
                      }
                      case 18: {
                        Value = input.ReadBytes();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        Type = (global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive.Types.Type) input.ReadEnum();
                        break;
                      }
                      case 18: {
                        Value = input.ReadBytes();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the Primitive message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types {
                  public enum Type {
                    [pbr::OriginalName("INVALID")] Invalid = 0,
                    [pbr::OriginalName("JSON")] Json = 1,
                    [pbr::OriginalName("STRING")] String = 2,
                  }

                }
                #endregion

              }

              public sealed partial class Diff : pb::IMessage<Diff>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<Diff> _parser = new pb::MessageParser<Diff>(() => new Diff());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Diff> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Diff() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Diff(Diff other) : this() {
                  from_ = other.from_ != null ? other.from_.Clone() : null;
                  to_ = other.to_ != null ? other.to_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Diff Clone() {
                  return new Diff(this);
                }

                /// <summary>Field number for the "from" field.</summary>
                public const int FromFieldNumber = 1;
                private global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive from_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive From {
                  get { return from_; }
                  set {
                    from_ = value;
                  }
                }

                /// <summary>Field number for the "to" field.</summary>
                public const int ToFieldNumber = 2;
                private global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive to_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive To {
                  get { return to_; }
                  set {
                    to_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as Diff);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Diff other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(From, other.From)) return false;
                  if (!object.Equals(To, other.To)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (from_ != null) hash ^= From.GetHashCode();
                  if (to_ != null) hash ^= To.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (from_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(From);
                  }
                  if (to_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(To);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (from_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(From);
                  }
                  if (to_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(To);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (from_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
                  }
                  if (to_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Diff other) {
                  if (other == null) {
                    return;
                  }
                  if (other.from_ != null) {
                    if (from_ == null) {
                      From = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive();
                    }
                    From.MergeFrom(other.From);
                  }
                  if (other.to_ != null) {
                    if (to_ == null) {
                      To = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive();
                    }
                    To.MergeFrom(other.To);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (from_ == null) {
                          From = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive();
                        }
                        input.ReadMessage(From);
                        break;
                      }
                      case 18: {
                        if (to_ == null) {
                          To = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive();
                        }
                        input.ReadMessage(To);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (from_ == null) {
                          From = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive();
                        }
                        input.ReadMessage(From);
                        break;
                      }
                      case 18: {
                        if (to_ == null) {
                          To = new global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Types.Primitive();
                        }
                        input.ReadMessage(To);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class Error : pb::IMessage<Error>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Error> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Toit.Proto.Model.DeviceEvent.Types.Info.Types.Value.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Error() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Error(Error other) : this() {
                  error_ = other.error_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Error Clone() {
                  return new Error(this);
                }

                /// <summary>Field number for the "error" field.</summary>
                public const int Error_FieldNumber = 1;
                private string error_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Error_ {
                  get { return error_; }
                  set {
                    error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as Error);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Error other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Error_ != other.Error_) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Error_.Length != 0) hash ^= Error_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (Error_.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(Error_);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (Error_.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(Error_);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Error_.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Error_);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Error other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Error_.Length != 0) {
                    Error_ = other.Error_;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        Error_ = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        Error_ = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class DeviceModelSettings : pb::IMessage<DeviceModelSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceModelSettings> _parser = new pb::MessageParser<DeviceModelSettings>(() => new DeviceModelSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceModelSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DeviceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModelSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModelSettings(DeviceModelSettings other) : this() {
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceModelSettings Clone() {
      return new DeviceModelSettings(this);
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 1;
    private static readonly pbc::MapField<string, int>.Codec _map_parameters_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 10);
    private readonly pbc::MapField<string, int> parameters_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceModelSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceModelSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Parameters.Equals(other.Parameters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Parameters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      parameters_.WriteTo(output, _map_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      parameters_.WriteTo(ref output, _map_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += parameters_.CalculateSize(_map_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceModelSettings other) {
      if (other == null) {
        return;
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            parameters_.AddEntriesFrom(input, _map_parameters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            parameters_.AddEntriesFrom(ref input, _map_parameters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
