// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: toit/model/data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Toit.Proto.Model {

  /// <summary>Holder for reflection information generated from toit/model/data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for toit/model/data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChV0b2l0L21vZGVsL2RhdGEucHJvdG8SCnRvaXQubW9kZWwaHGdvb2dsZS9w",
            "cm90b2J1Zi9zdHJ1Y3QucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8inAIKC01ldHJpY3NEYXRhEg0KBW5hbWVzGAEgAygMEisKBmdh",
            "dWdlcxgCIAMoCzIbLnRvaXQubW9kZWwuR3VhZ2VNZXRyaWNEYXRhEi8KCGNv",
            "dW50ZXJzGAMgAygLMh0udG9pdC5tb2RlbC5Db3VudGVyTWV0cmljRGF0YRIt",
            "CgVwbG90cxgEIAMoCzIaLnRvaXQubW9kZWwuUGxvdE1ldHJpY0RhdGFCAhgB",
            "EjMKCmhpc3RvZ3JhbXMYBSADKAsyHy50b2l0Lm1vZGVsLkhpc3RvZ3JhbU1l",
            "dHJpY0RhdGEiPAoFTGV2ZWwSDwoLREVCVUdfTEVWRUwQABIOCgpJTkZPX0xF",
            "VkVMEAUSEgoOQ1JJVElDQUxfTEVWRUwQCiL1AQoPR3VhZ2VNZXRyaWNEYXRh",
            "Eg0KBXZhbHVlGAEgASgBEhIKCm5hbWVfaW5kZXgYAiABKA0SLwoHY3JlYXRl",
            "ZBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCAhgBEjMKBHRh",
            "Z3MYBCADKAsyJS50b2l0Lm1vZGVsLkd1YWdlTWV0cmljRGF0YS5UYWdzRW50",
            "cnkSLAoFbGV2ZWwYBSABKA4yHS50b2l0Lm1vZGVsLk1ldHJpY3NEYXRhLkxl",
            "dmVsGisKCVRhZ3NFbnRyeRILCgNrZXkYASABKA0SDQoFdmFsdWUYAiABKA06",
            "AjgBIu0BChFDb3VudGVyTWV0cmljRGF0YRISCgpuYW1lX2luZGV4GAEgASgN",
            "Eg0KBWNvdW50GAIgASgDEhAKBG1lYW4YAyABKAFCAhgBEhEKBXN0ZGV2GAQg",
            "ASgBQgIYARI1CgR0YWdzGAUgAygLMicudG9pdC5tb2RlbC5Db3VudGVyTWV0",
            "cmljRGF0YS5UYWdzRW50cnkSLAoFbGV2ZWwYBiABKA4yHS50b2l0Lm1vZGVs",
            "Lk1ldHJpY3NEYXRhLkxldmVsGisKCVRhZ3NFbnRyeRILCgNrZXkYASABKA0S",
            "DQoFdmFsdWUYAiABKA06AjgBIsUBCg5QbG90TWV0cmljRGF0YRINCgV2YWx1",
            "ZRgBIAEoARISCgpuYW1lX2luZGV4GAIgASgNEisKB2NyZWF0ZWQYAyABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjIKBHRhZ3MYBCADKAsyJC50",
            "b2l0Lm1vZGVsLlBsb3RNZXRyaWNEYXRhLlRhZ3NFbnRyeRorCglUYWdzRW50",
            "cnkSCwoDa2V5GAEgASgNEg0KBXZhbHVlGAIgASgNOgI4AToCGAEiqQIKE0hp",
            "c3RvZ3JhbU1ldHJpY0RhdGESEgoKbmFtZV9pbmRleBgBIAEoDRI7CgZ2YWx1",
            "ZXMYAiADKAsyKy50b2l0Lm1vZGVsLkhpc3RvZ3JhbU1ldHJpY0RhdGEuVmFs",
            "dWVzRW50cnkSNwoEdGFncxgDIAMoCzIpLnRvaXQubW9kZWwuSGlzdG9ncmFt",
            "TWV0cmljRGF0YS5UYWdzRW50cnkSLAoFbGV2ZWwYBCABKA4yHS50b2l0Lm1v",
            "ZGVsLk1ldHJpY3NEYXRhLkxldmVsGi0KC1ZhbHVlc0VudHJ5EgsKA2tleRgB",
            "IAEoDRINCgV2YWx1ZRgCIAEoAToCOAEaKwoJVGFnc0VudHJ5EgsKA2tleRgB",
            "IAEoDRINCgV2YWx1ZRgCIAEoDToCOAEiKAoJVG9waWNEYXRhEg0KBXRvcGlj",
            "GAEgASgJEgwKBGRhdGEYAiABKAwi1gMKB0xvZ0RhdGESJgoEdHlwZRgBIAEo",
            "DjIYLnRvaXQubW9kZWwuTG9nRGF0YS5UeXBlEgwKBGRhdGEYAiABKAwSDwoH",
            "bWVzc2FnZRgDIAEoCRIoCgVsZXZlbBgEIAEoDjIZLnRvaXQubW9kZWwuTG9n",
            "RGF0YS5MZXZlbBINCgVuYW1lcxgFIAMoCRIrCgR0YWdzGAYgAygLMh0udG9p",
            "dC5tb2RlbC5Mb2dEYXRhLlRhZ3NFbnRyeRpDCglUYWdzRW50cnkSCwoDa2V5",
            "GAEgASgJEiUKBXZhbHVlGAIgASgLMhYuZ29vZ2xlLnByb3RvYnVmLlZhbHVl",
            "OgI4ASJsCgRUeXBlEgsKB1VOS05PV04QABIJCgVQUklOVBABEhEKDVBST0NF",
            "U1NfU1RBUlQQAhIQCgxQUk9DRVNTX1NUT1AQAxIPCgtTVEFDS19UUkFDRRAE",
            "EggKBEJPT1QQBRIMCghTSFVURE9XThAGImsKBUxldmVsEg8KC1BSSU5UX0xF",
            "VkVMEAASDwoLREVCVUdfTEVWRUwQARIOCgpJTkZPX0xFVkVMEAISDgoKV0FS",
            "Tl9MRVZFTBADEg8KC0VSUk9SX0xFVkVMEAQSDwoLRkFUQUxfTEVWRUwQBUJj",
            "Chhpby50b2l0LnByb3RvLnRvaXQubW9kZWxCCURhdGFQcm90b1opZ2l0aHVi",
            "LmNvbS90b2l0d2FyZS9hcGkvZ29sYW5nL3RvaXQvbW9kZWyqAhBUb2l0LlBy",
            "b3RvLk1vZGVsYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.MetricsData), global::Toit.Proto.Model.MetricsData.Parser, new[]{ "Names", "Gauges", "Counters", "Plots", "Histograms" }, null, new[]{ typeof(global::Toit.Proto.Model.MetricsData.Types.Level) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.GuageMetricData), global::Toit.Proto.Model.GuageMetricData.Parser, new[]{ "Value", "NameIndex", "Created", "Tags", "Level" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.CounterMetricData), global::Toit.Proto.Model.CounterMetricData.Parser, new[]{ "NameIndex", "Count", "Mean", "Stdev", "Tags", "Level" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.PlotMetricData), global::Toit.Proto.Model.PlotMetricData.Parser, new[]{ "Value", "NameIndex", "Created", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.HistogramMetricData), global::Toit.Proto.Model.HistogramMetricData.Parser, new[]{ "NameIndex", "Values", "Tags", "Level" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.TopicData), global::Toit.Proto.Model.TopicData.Parser, new[]{ "Topic", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.Model.LogData), global::Toit.Proto.Model.LogData.Parser, new[]{ "Type", "Data", "Message", "Level", "Names", "Tags" }, null, new[]{ typeof(global::Toit.Proto.Model.LogData.Types.Type), typeof(global::Toit.Proto.Model.LogData.Types.Level) }, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MetricsData : pb::IMessage<MetricsData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetricsData> _parser = new pb::MessageParser<MetricsData>(() => new MetricsData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetricsData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricsData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricsData(MetricsData other) : this() {
      names_ = other.names_.Clone();
      gauges_ = other.gauges_.Clone();
      counters_ = other.counters_.Clone();
      plots_ = other.plots_.Clone();
      histograms_ = other.histograms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricsData Clone() {
      return new MetricsData(this);
    }

    /// <summary>Field number for the "names" field.</summary>
    public const int NamesFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_names_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> names_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Names {
      get { return names_; }
    }

    /// <summary>Field number for the "gauges" field.</summary>
    public const int GaugesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Toit.Proto.Model.GuageMetricData> _repeated_gauges_codec
        = pb::FieldCodec.ForMessage(18, global::Toit.Proto.Model.GuageMetricData.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.Model.GuageMetricData> gauges_ = new pbc::RepeatedField<global::Toit.Proto.Model.GuageMetricData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.Model.GuageMetricData> Gauges {
      get { return gauges_; }
    }

    /// <summary>Field number for the "counters" field.</summary>
    public const int CountersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Toit.Proto.Model.CounterMetricData> _repeated_counters_codec
        = pb::FieldCodec.ForMessage(26, global::Toit.Proto.Model.CounterMetricData.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.Model.CounterMetricData> counters_ = new pbc::RepeatedField<global::Toit.Proto.Model.CounterMetricData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.Model.CounterMetricData> Counters {
      get { return counters_; }
    }

    /// <summary>Field number for the "plots" field.</summary>
    public const int PlotsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Toit.Proto.Model.PlotMetricData> _repeated_plots_codec
        = pb::FieldCodec.ForMessage(34, global::Toit.Proto.Model.PlotMetricData.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.Model.PlotMetricData> plots_ = new pbc::RepeatedField<global::Toit.Proto.Model.PlotMetricData>();
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.Model.PlotMetricData> Plots {
      get { return plots_; }
    }

    /// <summary>Field number for the "histograms" field.</summary>
    public const int HistogramsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Toit.Proto.Model.HistogramMetricData> _repeated_histograms_codec
        = pb::FieldCodec.ForMessage(42, global::Toit.Proto.Model.HistogramMetricData.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.Model.HistogramMetricData> histograms_ = new pbc::RepeatedField<global::Toit.Proto.Model.HistogramMetricData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.Model.HistogramMetricData> Histograms {
      get { return histograms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetricsData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetricsData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!names_.Equals(other.names_)) return false;
      if(!gauges_.Equals(other.gauges_)) return false;
      if(!counters_.Equals(other.counters_)) return false;
      if(!plots_.Equals(other.plots_)) return false;
      if(!histograms_.Equals(other.histograms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= names_.GetHashCode();
      hash ^= gauges_.GetHashCode();
      hash ^= counters_.GetHashCode();
      hash ^= plots_.GetHashCode();
      hash ^= histograms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      names_.WriteTo(output, _repeated_names_codec);
      gauges_.WriteTo(output, _repeated_gauges_codec);
      counters_.WriteTo(output, _repeated_counters_codec);
      plots_.WriteTo(output, _repeated_plots_codec);
      histograms_.WriteTo(output, _repeated_histograms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      names_.WriteTo(ref output, _repeated_names_codec);
      gauges_.WriteTo(ref output, _repeated_gauges_codec);
      counters_.WriteTo(ref output, _repeated_counters_codec);
      plots_.WriteTo(ref output, _repeated_plots_codec);
      histograms_.WriteTo(ref output, _repeated_histograms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += names_.CalculateSize(_repeated_names_codec);
      size += gauges_.CalculateSize(_repeated_gauges_codec);
      size += counters_.CalculateSize(_repeated_counters_codec);
      size += plots_.CalculateSize(_repeated_plots_codec);
      size += histograms_.CalculateSize(_repeated_histograms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetricsData other) {
      if (other == null) {
        return;
      }
      names_.Add(other.names_);
      gauges_.Add(other.gauges_);
      counters_.Add(other.counters_);
      plots_.Add(other.plots_);
      histograms_.Add(other.histograms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
          case 18: {
            gauges_.AddEntriesFrom(input, _repeated_gauges_codec);
            break;
          }
          case 26: {
            counters_.AddEntriesFrom(input, _repeated_counters_codec);
            break;
          }
          case 34: {
            plots_.AddEntriesFrom(input, _repeated_plots_codec);
            break;
          }
          case 42: {
            histograms_.AddEntriesFrom(input, _repeated_histograms_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            names_.AddEntriesFrom(ref input, _repeated_names_codec);
            break;
          }
          case 18: {
            gauges_.AddEntriesFrom(ref input, _repeated_gauges_codec);
            break;
          }
          case 26: {
            counters_.AddEntriesFrom(ref input, _repeated_counters_codec);
            break;
          }
          case 34: {
            plots_.AddEntriesFrom(ref input, _repeated_plots_codec);
            break;
          }
          case 42: {
            histograms_.AddEntriesFrom(ref input, _repeated_histograms_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MetricsData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Level {
        [pbr::OriginalName("DEBUG_LEVEL")] DebugLevel = 0,
        [pbr::OriginalName("INFO_LEVEL")] InfoLevel = 5,
        [pbr::OriginalName("CRITICAL_LEVEL")] CriticalLevel = 10,
      }

    }
    #endregion

  }

  public sealed partial class GuageMetricData : pb::IMessage<GuageMetricData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuageMetricData> _parser = new pb::MessageParser<GuageMetricData>(() => new GuageMetricData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuageMetricData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuageMetricData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuageMetricData(GuageMetricData other) : this() {
      value_ = other.value_;
      nameIndex_ = other.nameIndex_;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      tags_ = other.tags_.Clone();
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuageMetricData Clone() {
      return new GuageMetricData(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "name_index" field.</summary>
    public const int NameIndexFieldNumber = 2;
    private uint nameIndex_;
    /// <summary>
    /// name_index references the name in the names list in MetricsData.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NameIndex {
      get { return nameIndex_; }
      set {
        nameIndex_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pbc::MapField<uint, uint>.Codec _map_tags_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 34);
    private readonly pbc::MapField<uint, uint> tags_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<uint, uint> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 5;
    private global::Toit.Proto.Model.MetricsData.Types.Level level_ = global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.MetricsData.Types.Level Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuageMetricData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuageMetricData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      if (NameIndex != other.NameIndex) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (NameIndex != 0) hash ^= NameIndex.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (NameIndex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NameIndex);
      }
      if (created_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Created);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (NameIndex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NameIndex);
      }
      if (created_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Created);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (NameIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NameIndex);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuageMetricData other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      if (other.NameIndex != 0) {
        NameIndex = other.NameIndex;
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      tags_.Add(other.tags_);
      if (other.Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
          case 16: {
            NameIndex = input.ReadUInt32();
            break;
          }
          case 26: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 40: {
            Level = (global::Toit.Proto.Model.MetricsData.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
          case 16: {
            NameIndex = input.ReadUInt32();
            break;
          }
          case 26: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 40: {
            Level = (global::Toit.Proto.Model.MetricsData.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CounterMetricData : pb::IMessage<CounterMetricData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CounterMetricData> _parser = new pb::MessageParser<CounterMetricData>(() => new CounterMetricData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CounterMetricData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterMetricData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterMetricData(CounterMetricData other) : this() {
      nameIndex_ = other.nameIndex_;
      count_ = other.count_;
      mean_ = other.mean_;
      stdev_ = other.stdev_;
      tags_ = other.tags_.Clone();
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterMetricData Clone() {
      return new CounterMetricData(this);
    }

    /// <summary>Field number for the "name_index" field.</summary>
    public const int NameIndexFieldNumber = 1;
    private uint nameIndex_;
    /// <summary>
    /// name_index references the name in the names list in MetricsData.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NameIndex {
      get { return nameIndex_; }
      set {
        nameIndex_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "mean" field.</summary>
    public const int MeanFieldNumber = 3;
    private double mean_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Mean {
      get { return mean_; }
      set {
        mean_ = value;
      }
    }

    /// <summary>Field number for the "stdev" field.</summary>
    public const int StdevFieldNumber = 4;
    private double stdev_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Stdev {
      get { return stdev_; }
      set {
        stdev_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 5;
    private static readonly pbc::MapField<uint, uint>.Codec _map_tags_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 42);
    private readonly pbc::MapField<uint, uint> tags_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<uint, uint> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 6;
    private global::Toit.Proto.Model.MetricsData.Types.Level level_ = global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.MetricsData.Types.Level Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CounterMetricData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CounterMetricData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NameIndex != other.NameIndex) return false;
      if (Count != other.Count) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mean, other.Mean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Stdev, other.Stdev)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NameIndex != 0) hash ^= NameIndex.GetHashCode();
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (Mean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mean);
      if (Stdev != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Stdev);
      hash ^= Tags.GetHashCode();
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NameIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NameIndex);
      }
      if (Count != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (Mean != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mean);
      }
      if (Stdev != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Stdev);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NameIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NameIndex);
      }
      if (Count != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (Mean != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mean);
      }
      if (Stdev != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Stdev);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NameIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NameIndex);
      }
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (Mean != 0D) {
        size += 1 + 8;
      }
      if (Stdev != 0D) {
        size += 1 + 8;
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CounterMetricData other) {
      if (other == null) {
        return;
      }
      if (other.NameIndex != 0) {
        NameIndex = other.NameIndex;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      if (other.Mean != 0D) {
        Mean = other.Mean;
      }
      if (other.Stdev != 0D) {
        Stdev = other.Stdev;
      }
      tags_.Add(other.tags_);
      if (other.Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NameIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
          case 25: {
            Mean = input.ReadDouble();
            break;
          }
          case 33: {
            Stdev = input.ReadDouble();
            break;
          }
          case 42: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 48: {
            Level = (global::Toit.Proto.Model.MetricsData.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NameIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
          case 25: {
            Mean = input.ReadDouble();
            break;
          }
          case 33: {
            Stdev = input.ReadDouble();
            break;
          }
          case 42: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 48: {
            Level = (global::Toit.Proto.Model.MetricsData.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class PlotMetricData : pb::IMessage<PlotMetricData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlotMetricData> _parser = new pb::MessageParser<PlotMetricData>(() => new PlotMetricData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlotMetricData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlotMetricData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlotMetricData(PlotMetricData other) : this() {
      value_ = other.value_;
      nameIndex_ = other.nameIndex_;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlotMetricData Clone() {
      return new PlotMetricData(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "name_index" field.</summary>
    public const int NameIndexFieldNumber = 2;
    private uint nameIndex_;
    /// <summary>
    /// name_index references the name in the names list in MetricsData.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NameIndex {
      get { return nameIndex_; }
      set {
        nameIndex_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pbc::MapField<uint, uint>.Codec _map_tags_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 34);
    private readonly pbc::MapField<uint, uint> tags_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<uint, uint> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlotMetricData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlotMetricData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      if (NameIndex != other.NameIndex) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (NameIndex != 0) hash ^= NameIndex.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (NameIndex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NameIndex);
      }
      if (created_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Created);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (NameIndex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NameIndex);
      }
      if (created_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Created);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (NameIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NameIndex);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlotMetricData other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      if (other.NameIndex != 0) {
        NameIndex = other.NameIndex;
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
          case 16: {
            NameIndex = input.ReadUInt32();
            break;
          }
          case 26: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
          case 16: {
            NameIndex = input.ReadUInt32();
            break;
          }
          case 26: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HistogramMetricData : pb::IMessage<HistogramMetricData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HistogramMetricData> _parser = new pb::MessageParser<HistogramMetricData>(() => new HistogramMetricData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistogramMetricData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistogramMetricData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistogramMetricData(HistogramMetricData other) : this() {
      nameIndex_ = other.nameIndex_;
      values_ = other.values_.Clone();
      tags_ = other.tags_.Clone();
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistogramMetricData Clone() {
      return new HistogramMetricData(this);
    }

    /// <summary>Field number for the "name_index" field.</summary>
    public const int NameIndexFieldNumber = 1;
    private uint nameIndex_;
    /// <summary>
    /// name_index references the name in the names list in MetricsData.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NameIndex {
      get { return nameIndex_; }
      set {
        nameIndex_ = value;
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private static readonly pbc::MapField<uint, double>.Codec _map_values_codec
        = new pbc::MapField<uint, double>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForDouble(17, 0D), 18);
    private readonly pbc::MapField<uint, double> values_ = new pbc::MapField<uint, double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<uint, double> Values {
      get { return values_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pbc::MapField<uint, uint>.Codec _map_tags_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 26);
    private readonly pbc::MapField<uint, uint> tags_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<uint, uint> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private global::Toit.Proto.Model.MetricsData.Types.Level level_ = global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.MetricsData.Types.Level Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistogramMetricData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistogramMetricData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NameIndex != other.NameIndex) return false;
      if (!Values.Equals(other.Values)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NameIndex != 0) hash ^= NameIndex.GetHashCode();
      hash ^= Values.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NameIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NameIndex);
      }
      values_.WriteTo(output, _map_values_codec);
      tags_.WriteTo(output, _map_tags_codec);
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NameIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NameIndex);
      }
      values_.WriteTo(ref output, _map_values_codec);
      tags_.WriteTo(ref output, _map_tags_codec);
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NameIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NameIndex);
      }
      size += values_.CalculateSize(_map_values_codec);
      size += tags_.CalculateSize(_map_tags_codec);
      if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistogramMetricData other) {
      if (other == null) {
        return;
      }
      if (other.NameIndex != 0) {
        NameIndex = other.NameIndex;
      }
      values_.Add(other.values_);
      tags_.Add(other.tags_);
      if (other.Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NameIndex = input.ReadUInt32();
            break;
          }
          case 18: {
            values_.AddEntriesFrom(input, _map_values_codec);
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 32: {
            Level = (global::Toit.Proto.Model.MetricsData.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NameIndex = input.ReadUInt32();
            break;
          }
          case 18: {
            values_.AddEntriesFrom(ref input, _map_values_codec);
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 32: {
            Level = (global::Toit.Proto.Model.MetricsData.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TopicData : pb::IMessage<TopicData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopicData> _parser = new pb::MessageParser<TopicData>(() => new TopicData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopicData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicData(TopicData other) : this() {
      topic_ = other.topic_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicData Clone() {
      return new TopicData(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopicData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopicData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopicData other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LogData : pb::IMessage<LogData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogData> _parser = new pb::MessageParser<LogData>(() => new LogData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.Model.DataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogData(LogData other) : this() {
      type_ = other.type_;
      data_ = other.data_;
      message_ = other.message_;
      level_ = other.level_;
      names_ = other.names_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogData Clone() {
      return new LogData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Toit.Proto.Model.LogData.Types.Type type_ = global::Toit.Proto.Model.LogData.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.LogData.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private global::Toit.Proto.Model.LogData.Types.Level level_ = global::Toit.Proto.Model.LogData.Types.Level.PrintLevel;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.LogData.Types.Level Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "names" field.</summary>
    public const int NamesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_names_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Names {
      get { return names_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 6;
    private static readonly pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Value>.Codec _map_tags_codec
        = new pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Value>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Protobuf.WellKnownTypes.Value.Parser), 50);
    private readonly pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Value> tags_ = new pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Value>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Value> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Data != other.Data) return false;
      if (Message != other.Message) return false;
      if (Level != other.Level) return false;
      if(!names_.Equals(other.names_)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Toit.Proto.Model.LogData.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) hash ^= Level.GetHashCode();
      hash ^= names_.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Toit.Proto.Model.LogData.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Level);
      }
      names_.WriteTo(output, _repeated_names_codec);
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Toit.Proto.Model.LogData.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Level);
      }
      names_.WriteTo(ref output, _repeated_names_codec);
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Toit.Proto.Model.LogData.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      size += names_.CalculateSize(_repeated_names_codec);
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogData other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Toit.Proto.Model.LogData.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
        Level = other.Level;
      }
      names_.Add(other.names_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Toit.Proto.Model.LogData.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            Level = (global::Toit.Proto.Model.LogData.Types.Level) input.ReadEnum();
            break;
          }
          case 42: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
          case 50: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Toit.Proto.Model.LogData.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            Level = (global::Toit.Proto.Model.LogData.Types.Level) input.ReadEnum();
            break;
          }
          case 42: {
            names_.AddEntriesFrom(ref input, _repeated_names_codec);
            break;
          }
          case 50: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LogData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("PRINT")] Print = 1,
        [pbr::OriginalName("PROCESS_START")] ProcessStart = 2,
        [pbr::OriginalName("PROCESS_STOP")] ProcessStop = 3,
        [pbr::OriginalName("STACK_TRACE")] StackTrace = 4,
        [pbr::OriginalName("BOOT")] Boot = 5,
        [pbr::OriginalName("SHUTDOWN")] Shutdown = 6,
      }

      public enum Level {
        [pbr::OriginalName("PRINT_LEVEL")] PrintLevel = 0,
        [pbr::OriginalName("DEBUG_LEVEL")] DebugLevel = 1,
        [pbr::OriginalName("INFO_LEVEL")] InfoLevel = 2,
        [pbr::OriginalName("WARN_LEVEL")] WarnLevel = 3,
        [pbr::OriginalName("ERROR_LEVEL")] ErrorLevel = 4,
        [pbr::OriginalName("FATAL_LEVEL")] FatalLevel = 5,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
