// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: toit/api/device.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Toit.Proto.API {

  /// <summary>Holder for reflection information generated from toit/api/device.proto</summary>
  public static partial class DeviceReflection {

    #region Descriptor
    /// <summary>File descriptor for toit/api/device.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChV0b2l0L2FwaS9kZXZpY2UucHJvdG8SCHRvaXQuYXBpGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRp",
            "b24ucHJvdG8aFHRvaXQvbW9kZWwvam9iLnByb3RvGhd0b2l0L21vZGVsL2Rl",
            "dmljZS5wcm90bxoVdG9pdC9tb2RlbC9kYXRhLnByb3RvItkBCgZEZXZpY2US",
            "CgoCaWQYASABKAwSEwoLaGFyZHdhcmVfaWQYBSABKAwSFQoNaGFyZHdhcmVf",
            "ZnFkbhgGIAEoCRIoCgZjb25maWcYByABKAsyGC50b2l0Lm1vZGVsLkRldmlj",
            "ZUNvbmZpZxIoCgZzdGF0dXMYCCABKAsyGC50b2l0Lm1vZGVsLkRldmljZVN0",
            "YXR1cxIUCgxpc19zaW11bGF0b3IYCSABKAgSLQoLbmV4dF9hY3Rpb24YCiAB",
            "KA4yGC50b2l0Lm1vZGVsLkRldmljZUFjdGlvbiJfCgNKb2ISCgoCaWQYASAB",
            "KAwSJQoGY29uZmlnGAIgASgLMhUudG9pdC5tb2RlbC5Kb2JDb25maWcSJQoG",
            "c3RhdHVzGAMgASgLMhUudG9pdC5tb2RlbC5Kb2JTdGF0dXMizgIKCURldmlj",
            "ZUxvZxIRCglkZXZpY2VfaWQYASABKAwSEAoIZXZlbnRfaWQYAiABKAwSDgoG",
            "am9iX2lkGAMgASgMEiwKCHJlY2VpdmVkGAQgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBImCgR0eXBlGAUgASgOMhgudG9pdC5hcGkuRGV2aWNl",
            "TG9nLlR5cGUSCwoDbXNnGAYgASgJEgwKBGRhdGEYByABKAwSKwoHY3JlYXRl",
            "ZBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAibgoEVHlwZRIL",
            "CgdVTktOT1dOEAASCwoHTUVTU0FHRRABEhEKDVBST0NFU1NfU1RBUlQQAhIQ",
            "CgxQUk9DRVNTX1NUT1AQAxIPCgtTVEFDS19UUkFDRRAEEggKBEJPT1QQBRIM",
            "CghTSFVURE9XThAGIjoKEEdldERldmljZVJlcXVlc3QSEQoJZGV2aWNlX2lk",
            "GAEgASgMEhMKC2hhcmR3YXJlX2lkGAIgASgMIlYKEUdldERldmljZVJlc3Bv",
            "bnNlEiAKBmRldmljZRgBIAEoCzIQLnRvaXQuYXBpLkRldmljZRIfCgRqb2Jz",
            "GAIgAygLMg0udG9pdC5hcGkuSm9iQgIYASK6CgoMQ29uZmlnQ2hhbmdlEikK",
            "A3NkaxgBIAEoCzIaLnRvaXQuYXBpLkNvbmZpZ0NoYW5nZS5TREtIABIrCgRu",
            "YW1lGAIgASgLMhsudG9pdC5hcGkuQ29uZmlnQ2hhbmdlLk5hbWVIABI0Cglz",
            "ZGtfbW9kZWwYAyABKAsyHy50b2l0LmFwaS5Db25maWdDaGFuZ2UuU0RLTW9k",
            "ZWxIABIvCgZicm9rZXIYBCABKAsyHS50b2l0LmFwaS5Db25maWdDaGFuZ2Uu",
            "QnJva2VySAASOAoLbWF4X29mZmxpbmUYBSABKAsyIS50b2l0LmFwaS5Db25m",
            "aWdDaGFuZ2UuTWF4T2ZmbGluZUgAEjkKC2Nvbm5lY3Rpb25zGAYgASgLMiIu",
            "dG9pdC5hcGkuQ29uZmlnQ2hhbmdlLkNvbm5lY3Rpb25zSAASLwoGcmVib290",
            "GAkgASgLMh0udG9pdC5hcGkuQ29uZmlnQ2hhbmdlLlJlYm9vdEgAEjwKDWZh",
            "Y3RvcnlfcmVzZXQYCiABKAsyIy50b2l0LmFwaS5Db25maWdDaGFuZ2UuRmFj",
            "dG9yeVJlc2V0SAASSwoVZXZlbnRfcXVldWVfdGhyZXNob2xkGAsgASgLMiou",
            "dG9pdC5hcGkuQ29uZmlnQ2hhbmdlLkV2ZW50UXVldWVUaHJlc2hvbGRIABI8",
            "Cg1sb2dnaW5nX2xldmVsGAwgASgLMiMudG9pdC5hcGkuQ29uZmlnQ2hhbmdl",
            "LkxvZ2dpbmdMZXZlbEgAEjwKDW1ldHJpY3NfbGV2ZWwYDSABKAsyIy50b2l0",
            "LmFwaS5Db25maWdDaGFuZ2UuTWV0cmljc0xldmVsSAASPgoOcmVwb3J0X21v",
            "ZHVsZXMYDiABKAsyJC50b2l0LmFwaS5Db25maWdDaGFuZ2UuUmVwb3J0TW9k",
            "dWxlc0gAEjwKDXVwZGF0ZV9tb2R1bGUYDyABKAsyIy50b2l0LmFwaS5Db25m",
            "aWdDaGFuZ2UuVXBkYXRlTW9kdWxlSAAaFgoDU0RLEg8KB3ZlcnNpb24YASAB",
            "KAkaFAoETmFtZRIMCgRuYW1lGAEgASgJGhkKCFNES01vZGVsEg0KBW1vZGVs",
            "GAEgASgJGkMKBkJyb2tlchI5Cg9icm9rZXJfc2V0dGluZ3MYASABKAsyIC50",
            "b2l0Lm1vZGVsLkRldmljZUJyb2tlclNldHRpbmdzGjwKCk1heE9mZmxpbmUS",
            "LgoLbWF4X29mZmxpbmUYASABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRp",
            "b24aQQoLQ29ubmVjdGlvbnMSMgoLY29ubmVjdGlvbnMYASADKAsyHS50b2l0",
            "Lm1vZGVsLkNvbm5lY3Rpb25TZXR0aW5nGggKBlJlYm9vdBoOCgxGYWN0b3J5",
            "UmVzZXQaKAoTRXZlbnRRdWV1ZVRocmVzaG9sZBIRCgl0aHJlc2hvbGQYASAB",
            "KA0aOAoMTG9nZ2luZ0xldmVsEigKBWxldmVsGAEgASgOMhkudG9pdC5tb2Rl",
            "bC5Mb2dEYXRhLkxldmVsGjwKDE1ldHJpY3NMZXZlbBIsCgVsZXZlbBgBIAEo",
            "DjIdLnRvaXQubW9kZWwuTWV0cmljc0RhdGEuTGV2ZWwaDwoNUmVwb3J0TW9k",
            "dWxlcxpaCgxVcGRhdGVNb2R1bGUSKgoEdHlwZRgBIAEoDjIcLnRvaXQubW9k",
            "ZWwuRGV2aWNlTW9kdWxlVHlwZRINCgVtb2RlbBgCIAEoCRIPCgd2ZXJzaW9u",
            "GAMgASgJQggKBmNvbmZpZyJhChZDb25maWd1cmVEZXZpY2VSZXF1ZXN0EhEK",
            "CWRldmljZV9pZBgBIAEoDBIuCg5jb25maWdfY2hhbmdlcxgIIAMoCzIWLnRv",
            "aXQuYXBpLkNvbmZpZ0NoYW5nZUoECAIQCCIZChdDb25maWd1cmVEZXZpY2VS",
            "ZXNwb25zZSJIChJDb25uZWN0aW9uU2V0dGluZ3MSMgoLY29ubmVjdGlvbnMY",
            "ASADKAsyHS50b2l0Lm1vZGVsLkNvbm5lY3Rpb25TZXR0aW5nIisKFExvb2t1",
            "cERldmljZXNSZXF1ZXN0EhMKC2RldmljZV9uYW1lGAEgASgJIisKFUxvb2t1",
            "cERldmljZXNSZXNwb25zZRISCgpkZXZpY2VfaWRzGAEgAygMIoYBChJMaXN0",
            "RGV2aWNlc1JlcXVlc3QSDgoGb2Zmc2V0GAEgASgMEg0KBWxpbWl0GAIgASgD",
            "EhAKCG9yZGVyX2J5GAMgASgJEhIKCm9yZGVyX2Rlc2MYBCABKAgSKwoGZmls",
            "dGVyGAUgASgLMhsudG9pdC5hcGkuTGlzdERldmljZXNGaWx0ZXIicgoRTGlz",
            "dERldmljZXNGaWx0ZXISLwoMbGFzdF91cGRhdGVkGAEgASgLMhkuZ29vZ2xl",
            "LnByb3RvYnVmLkR1cmF0aW9uEhcKD29ubHlfc2ltdWxhdG9ycxgCIAEoCBIT",
            "CgtuYW1lX3ByZWZpeBgDIAEoCSJIChNMaXN0RGV2aWNlc1Jlc3BvbnNlEiEK",
            "B2RldmljZXMYASADKAsyEC50b2l0LmFwaS5EZXZpY2USDgoGb2Zmc2V0GAIg",
            "ASgMIoABCg9MaXN0Sm9ic1JlcXVlc3QSDgoGb2Zmc2V0GAEgASgMEg0KBWxp",
            "bWl0GAIgASgDEhAKCG9yZGVyX2J5GAMgASgJEhIKCm9yZGVyX2Rlc2MYBCAB",
            "KAgSKAoGZmlsdGVyGAUgASgLMhgudG9pdC5hcGkuTGlzdEpvYnNGaWx0ZXIi",
            "hwEKDkxpc3RKb2JzRmlsdGVyEhEKCWRldmljZV9pZBgBIAEoDBIkCgZzdGF0",
            "ZXMYAiADKA4yFC50b2l0Lm1vZGVsLkpvYlN0YXRlEiwKCmdvYWxzdGF0ZXMY",
            "AyADKA4yGC50b2l0Lm1vZGVsLkpvYkdvYWxTdGF0ZRIOCgZqb2JfaWQYBCAB",
            "KAwiPwoQTGlzdEpvYnNSZXNwb25zZRIbCgRqb2JzGAEgAygLMg0udG9pdC5h",
            "cGkuSm9iEg4KBm9mZnNldBgCIAEoDCJNChFJbnN0YWxsSm9iUmVxdWVzdBIR",
            "CglkZXZpY2VfaWQYASABKAwSJQoGY29uZmlnGAIgASgLMhUudG9pdC5tb2Rl",
            "bC5Kb2JDb25maWciJAoSSW5zdGFsbEpvYlJlc3BvbnNlEg4KBmpvYl9pZBgB",
            "IAEoDCJmChNDb25maWd1cmVKb2JSZXF1ZXN0EhEKCWRldmljZV9pZBgBIAEo",
            "DBIOCgZqb2JfaWQYAiABKAwSLAoKZ29hbF9zdGF0ZRgDIAEoDjIYLnRvaXQu",
            "bW9kZWwuSm9iR29hbFN0YXRlIhYKFENvbmZpZ3VyZUpvYlJlc3BvbnNlIigK",
            "E1JlYm9vdERldmljZVJlcXVlc3QSEQoJZGV2aWNlX2lkGAEgASgMIhYKFFJl",
            "Ym9vdERldmljZVJlc3BvbnNlIqQBChVSZWFkRGV2aWNlTG9nc1JlcXVlc3QS",
            "EQoJZGV2aWNlX2lkGAEgASgMEgwKAmlkGAIgASgMSAASKAoCdHMYAyABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAASDQoFbGltaXQYBCABKAQS",
            "DwoHcmV2ZXJzZRgFIAEoCBIWCg5maWx0ZXJfam9iX2lkcxgGIAMoDEIICgZv",
            "ZmZzZXQiOwoWUmVhZERldmljZUxvZ3NSZXNwb25zZRIhCgRsb2dzGAEgAygL",
            "MhMudG9pdC5hcGkuRGV2aWNlTG9nIo4BChdSZWFkRGV2aWNlRXZlbnRzUmVx",
            "dWVzdBIRCglkZXZpY2VfaWQYASABKAwSDAoCaWQYAiABKAxIABIoCgJ0cxgD",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIABINCgVsaW1pdBgE",
            "IAEoBBIPCgdyZXZlcnNlGAUgASgIQggKBm9mZnNldCJDChhSZWFkRGV2aWNl",
            "RXZlbnRzUmVzcG9uc2USJwoGZXZlbnRzGAEgAygLMhcudG9pdC5tb2RlbC5E",
            "ZXZpY2VFdmVudCL7AgoaR2V0RGV2aWNlUGFydGl0aW9uc1JlcXVlc3QSEAoI",
            "c2RrX25hbWUYASABKAkSNwoEbW9kZRgCIAEoDjIpLnRvaXQuYXBpLkdldERl",
            "dmljZVBhcnRpdGlvbnNSZXF1ZXN0Lk1vZGUSSAoKcHJvcGVydGllcxgDIAMo",
            "CzI0LnRvaXQuYXBpLkdldERldmljZVBhcnRpdGlvbnNSZXF1ZXN0LlByb3Bl",
            "cnRpZXNFbnRyeRI3ChFoYXJkd2FyZV9pZGVudGl0eRgEIAEoCzIcLnRvaXQu",
            "bW9kZWwuSGFyZHdhcmVJZGVudGl0eRINCgVtb2RlbBgFIAEoCRIOCgZxcmNv",
            "ZGUYBiABKAwaMQoPUHJvcGVydGllc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoCToCOAEiPQoETW9kZRILCgdVTktOT1dOEAASCgoGU1lTVEVN",
            "EAISCwoHSU5JVElBTBADEg8KC1JFUEFSVElUSU9OEAQirgEKG0dldERldmlj",
            "ZVBhcnRpdGlvbnNSZXNwb25zZRJDCgpwYXJ0aXRpb25zGAEgAygLMi8udG9p",
            "dC5hcGkuR2V0RGV2aWNlUGFydGl0aW9uc1Jlc3BvbnNlLlBhcnRpdGlvbhIR",
            "CglkZXZpY2VfaWQYAiABKAwaNwoJUGFydGl0aW9uEgwKBG5hbWUYASABKAkS",
            "DgoGb2Zmc2V0GAIgASgDEgwKBGRhdGEYAyABKAwiRgoZV2F0Y2hEZXZpY2VD",
            "aGFuZ2VzUmVxdWVzdBIRCglkZXZpY2VfaWQYASABKAwSFgoOd2F0Y2hfcmV2",
            "aXNpb24YAiABKAMipwEKGldhdGNoRGV2aWNlQ2hhbmdlc1Jlc3BvbnNlEioK",
            "BHR5cGUYASABKA4yHC50b2l0Lm1vZGVsLkRldmljZUNoYW5nZVR5cGUSEQoJ",
            "ZGV2aWNlX2lkGAIgASgMEhYKDndhdGNoX3JldmlzaW9uGAMgASgDEjIKDmxh",
            "c3RfY29ubmVjdGVkGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cCJTChZXYXRjaEpvYkNoYW5nZXNSZXF1ZXN0EhEKCWRldmljZV9pZBgBIAEo",
            "DBIOCgZqb2JfaWQYAiABKAwSFgoOd2F0Y2hfcmV2aXNpb24YAyABKAMifQoX",
            "V2F0Y2hKb2JDaGFuZ2VzUmVzcG9uc2USJwoEdHlwZRgBIAEoDjIZLnRvaXQu",
            "bW9kZWwuSm9iQ2hhbmdlVHlwZRIOCgZqb2JfaWQYAiABKAwSFgoOd2F0Y2hf",
            "cmV2aXNpb24YAyABKAMSEQoJZGV2aWNlX2lkGAQgASgMIkcKGldhdGNoU2Vz",
            "c2lvbkNoYW5nZXNSZXF1ZXN0EhEKCWRldmljZV9pZBgBIAEoDBIWCg53YXRj",
            "aF9yZXZpc2lvbhgCIAEoAyKvAQobV2F0Y2hTZXNzaW9uQ2hhbmdlc1Jlc3Bv",
            "bnNlEjEKBHR5cGUYASABKA4yIy50b2l0Lm1vZGVsLkRldmljZVNlc3Npb25D",
            "aGFuZ2VUeXBlEhEKCWRldmljZV9pZBgCIAEoDBIWCg53YXRjaF9yZXZpc2lv",
            "bhgDIAEoAxIyCg5sYXN0X2Nvbm5lY3RlZBgEIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXAiFwoVR2V0Q3VycmVudFRpbWVSZXF1ZXN0IkoKFkdl",
            "dEN1cnJlbnRUaW1lUmVzcG9uc2USMAoMY3VycmVudF90aW1lGAEgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCIpChRVbmNsYWltRGV2aWNlUmVx",
            "dWVzdBIRCglkZXZpY2VfaWQYASABKAwiFwoVVW5jbGFpbURldmljZVJlc3Bv",
            "bnNlKmYKDVByb2Nlc3NTdGF0dXMSGgoWUFJPQ0VTU19TVEFUVVNfVU5LTk9X",
            "ThAAEhoKFlBST0NFU1NfU1RBVFVTX1JVTk5JTkcQARIdChlQUk9DRVNTX1NU",
            "QVRVU19URVJNSU5BVEVEEAIqeQoRUHJvY2Vzc0dvYWxTdGF0dXMSHwobUFJP",
            "Q0VTU19HT0FMX1NUQVRVU19VTktOT1dOEAASHwobUFJPQ0VTU19HT0FMX1NU",
            "QVRVU19SVU5OSU5HEAESIgoeUFJPQ0VTU19HT0FMX1NUQVRVU19URVJNSU5B",
            "VEVEEAIy9goKDURldmljZVNlcnZpY2USRgoJR2V0RGV2aWNlEhoudG9pdC5h",
            "cGkuR2V0RGV2aWNlUmVxdWVzdBobLnRvaXQuYXBpLkdldERldmljZVJlc3Bv",
            "bnNlIgASWAoPQ29uZmlndXJlRGV2aWNlEiAudG9pdC5hcGkuQ29uZmlndXJl",
            "RGV2aWNlUmVxdWVzdBohLnRvaXQuYXBpLkNvbmZpZ3VyZURldmljZVJlc3Bv",
            "bnNlIgASUgoNTG9va3VwRGV2aWNlcxIeLnRvaXQuYXBpLkxvb2t1cERldmlj",
            "ZXNSZXF1ZXN0Gh8udG9pdC5hcGkuTG9va3VwRGV2aWNlc1Jlc3BvbnNlIgAS",
            "TAoLTGlzdERldmljZXMSHC50b2l0LmFwaS5MaXN0RGV2aWNlc1JlcXVlc3Qa",
            "HS50b2l0LmFwaS5MaXN0RGV2aWNlc1Jlc3BvbnNlIgASQwoITGlzdEpvYnMS",
            "GS50b2l0LmFwaS5MaXN0Sm9ic1JlcXVlc3QaGi50b2l0LmFwaS5MaXN0Sm9i",
            "c1Jlc3BvbnNlIgASSQoKSW5zdGFsbEpvYhIbLnRvaXQuYXBpLkluc3RhbGxK",
            "b2JSZXF1ZXN0GhwudG9pdC5hcGkuSW5zdGFsbEpvYlJlc3BvbnNlIgASTwoM",
            "Q29uZmlndXJlSm9iEh0udG9pdC5hcGkuQ29uZmlndXJlSm9iUmVxdWVzdBoe",
            "LnRvaXQuYXBpLkNvbmZpZ3VyZUpvYlJlc3BvbnNlIgASUgoMUmVib290RGV2",
            "aWNlEh0udG9pdC5hcGkuUmVib290RGV2aWNlUmVxdWVzdBoeLnRvaXQuYXBp",
            "LlJlYm9vdERldmljZVJlc3BvbnNlIgOIAgESVQoOUmVhZERldmljZUxvZ3MS",
            "Hy50b2l0LmFwaS5SZWFkRGV2aWNlTG9nc1JlcXVlc3QaIC50b2l0LmFwaS5S",
            "ZWFkRGV2aWNlTG9nc1Jlc3BvbnNlIgASWwoQUmVhZERldmljZUV2ZW50cxIh",
            "LnRvaXQuYXBpLlJlYWREZXZpY2VFdmVudHNSZXF1ZXN0GiIudG9pdC5hcGku",
            "UmVhZERldmljZUV2ZW50c1Jlc3BvbnNlIgASZAoTR2V0RGV2aWNlUGFydGl0",
            "aW9ucxIkLnRvaXQuYXBpLkdldERldmljZVBhcnRpdGlvbnNSZXF1ZXN0GiUu",
            "dG9pdC5hcGkuR2V0RGV2aWNlUGFydGl0aW9uc1Jlc3BvbnNlIgASYwoSV2F0",
            "Y2hEZXZpY2VDaGFuZ2VzEiMudG9pdC5hcGkuV2F0Y2hEZXZpY2VDaGFuZ2Vz",
            "UmVxdWVzdBokLnRvaXQuYXBpLldhdGNoRGV2aWNlQ2hhbmdlc1Jlc3BvbnNl",
            "IgAwARJaCg9XYXRjaEpvYkNoYW5nZXMSIC50b2l0LmFwaS5XYXRjaEpvYkNo",
            "YW5nZXNSZXF1ZXN0GiEudG9pdC5hcGkuV2F0Y2hKb2JDaGFuZ2VzUmVzcG9u",
            "c2UiADABEmYKE1dhdGNoU2Vzc2lvbkNoYW5nZXMSJC50b2l0LmFwaS5XYXRj",
            "aFNlc3Npb25DaGFuZ2VzUmVxdWVzdBolLnRvaXQuYXBpLldhdGNoU2Vzc2lv",
            "bkNoYW5nZXNSZXNwb25zZSIAMAESVQoOR2V0Q3VycmVudFRpbWUSHy50b2l0",
            "LmFwaS5HZXRDdXJyZW50VGltZVJlcXVlc3QaIC50b2l0LmFwaS5HZXRDdXJy",
            "ZW50VGltZVJlc3BvbnNlIgASUgoNVW5jbGFpbURldmljZRIeLnRvaXQuYXBp",
            "LlVuY2xhaW1EZXZpY2VSZXF1ZXN0Gh8udG9pdC5hcGkuVW5jbGFpbURldmlj",
            "ZVJlc3BvbnNlIgBCXwoWaW8udG9pdC5wcm90by50b2l0LmFwaUILRGV2aWNl",
            "UHJvdG9aJ2dpdGh1Yi5jb20vdG9pdHdhcmUvYXBpL2dvbGFuZy90b2l0L2Fw",
            "aaoCDlRvaXQuUHJvdG8uQVBJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Toit.Proto.Model.JobReflection.Descriptor, global::Toit.Proto.Model.DeviceReflection.Descriptor, global::Toit.Proto.Model.DataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Toit.Proto.API.ProcessStatus), typeof(global::Toit.Proto.API.ProcessGoalStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.Device), global::Toit.Proto.API.Device.Parser, new[]{ "Id", "HardwareId", "HardwareFqdn", "Config", "Status", "IsSimulator", "NextAction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.Job), global::Toit.Proto.API.Job.Parser, new[]{ "Id", "Config", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.DeviceLog), global::Toit.Proto.API.DeviceLog.Parser, new[]{ "DeviceId", "EventId", "JobId", "Received", "Type", "Msg", "Data", "Created" }, null, new[]{ typeof(global::Toit.Proto.API.DeviceLog.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.GetDeviceRequest), global::Toit.Proto.API.GetDeviceRequest.Parser, new[]{ "DeviceId", "HardwareId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.GetDeviceResponse), global::Toit.Proto.API.GetDeviceResponse.Parser, new[]{ "Device", "Jobs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange), global::Toit.Proto.API.ConfigChange.Parser, new[]{ "Sdk", "Name", "SdkModel", "Broker", "MaxOffline", "Connections", "Reboot", "FactoryReset", "EventQueueThreshold", "LoggingLevel", "MetricsLevel", "ReportModules", "UpdateModule" }, new[]{ "Config" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.SDK), global::Toit.Proto.API.ConfigChange.Types.SDK.Parser, new[]{ "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.Name), global::Toit.Proto.API.ConfigChange.Types.Name.Parser, new[]{ "Name_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.SDKModel), global::Toit.Proto.API.ConfigChange.Types.SDKModel.Parser, new[]{ "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.Broker), global::Toit.Proto.API.ConfigChange.Types.Broker.Parser, new[]{ "BrokerSettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.MaxOffline), global::Toit.Proto.API.ConfigChange.Types.MaxOffline.Parser, new[]{ "MaxOffline_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.Connections), global::Toit.Proto.API.ConfigChange.Types.Connections.Parser, new[]{ "Connections_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.Reboot), global::Toit.Proto.API.ConfigChange.Types.Reboot.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.FactoryReset), global::Toit.Proto.API.ConfigChange.Types.FactoryReset.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.EventQueueThreshold), global::Toit.Proto.API.ConfigChange.Types.EventQueueThreshold.Parser, new[]{ "Threshold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.LoggingLevel), global::Toit.Proto.API.ConfigChange.Types.LoggingLevel.Parser, new[]{ "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.MetricsLevel), global::Toit.Proto.API.ConfigChange.Types.MetricsLevel.Parser, new[]{ "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.ReportModules), global::Toit.Proto.API.ConfigChange.Types.ReportModules.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigChange.Types.UpdateModule), global::Toit.Proto.API.ConfigChange.Types.UpdateModule.Parser, new[]{ "Type", "Model", "Version" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigureDeviceRequest), global::Toit.Proto.API.ConfigureDeviceRequest.Parser, new[]{ "DeviceId", "ConfigChanges" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigureDeviceResponse), global::Toit.Proto.API.ConfigureDeviceResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConnectionSettings), global::Toit.Proto.API.ConnectionSettings.Parser, new[]{ "Connections" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.LookupDevicesRequest), global::Toit.Proto.API.LookupDevicesRequest.Parser, new[]{ "DeviceName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.LookupDevicesResponse), global::Toit.Proto.API.LookupDevicesResponse.Parser, new[]{ "DeviceIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ListDevicesRequest), global::Toit.Proto.API.ListDevicesRequest.Parser, new[]{ "Offset", "Limit", "OrderBy", "OrderDesc", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ListDevicesFilter), global::Toit.Proto.API.ListDevicesFilter.Parser, new[]{ "LastUpdated", "OnlySimulators", "NamePrefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ListDevicesResponse), global::Toit.Proto.API.ListDevicesResponse.Parser, new[]{ "Devices", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ListJobsRequest), global::Toit.Proto.API.ListJobsRequest.Parser, new[]{ "Offset", "Limit", "OrderBy", "OrderDesc", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ListJobsFilter), global::Toit.Proto.API.ListJobsFilter.Parser, new[]{ "DeviceId", "States", "Goalstates", "JobId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ListJobsResponse), global::Toit.Proto.API.ListJobsResponse.Parser, new[]{ "Jobs", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.InstallJobRequest), global::Toit.Proto.API.InstallJobRequest.Parser, new[]{ "DeviceId", "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.InstallJobResponse), global::Toit.Proto.API.InstallJobResponse.Parser, new[]{ "JobId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigureJobRequest), global::Toit.Proto.API.ConfigureJobRequest.Parser, new[]{ "DeviceId", "JobId", "GoalState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ConfigureJobResponse), global::Toit.Proto.API.ConfigureJobResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.RebootDeviceRequest), global::Toit.Proto.API.RebootDeviceRequest.Parser, new[]{ "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.RebootDeviceResponse), global::Toit.Proto.API.RebootDeviceResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ReadDeviceLogsRequest), global::Toit.Proto.API.ReadDeviceLogsRequest.Parser, new[]{ "DeviceId", "Id", "Ts", "Limit", "Reverse", "FilterJobIds" }, new[]{ "Offset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ReadDeviceLogsResponse), global::Toit.Proto.API.ReadDeviceLogsResponse.Parser, new[]{ "Logs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ReadDeviceEventsRequest), global::Toit.Proto.API.ReadDeviceEventsRequest.Parser, new[]{ "DeviceId", "Id", "Ts", "Limit", "Reverse" }, new[]{ "Offset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.ReadDeviceEventsResponse), global::Toit.Proto.API.ReadDeviceEventsResponse.Parser, new[]{ "Events" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.GetDevicePartitionsRequest), global::Toit.Proto.API.GetDevicePartitionsRequest.Parser, new[]{ "SdkName", "Mode", "Properties", "HardwareIdentity", "Model", "Qrcode" }, null, new[]{ typeof(global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.GetDevicePartitionsResponse), global::Toit.Proto.API.GetDevicePartitionsResponse.Parser, new[]{ "Partitions", "DeviceId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.GetDevicePartitionsResponse.Types.Partition), global::Toit.Proto.API.GetDevicePartitionsResponse.Types.Partition.Parser, new[]{ "Name", "Offset", "Data" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.WatchDeviceChangesRequest), global::Toit.Proto.API.WatchDeviceChangesRequest.Parser, new[]{ "DeviceId", "WatchRevision" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.WatchDeviceChangesResponse), global::Toit.Proto.API.WatchDeviceChangesResponse.Parser, new[]{ "Type", "DeviceId", "WatchRevision", "LastConnected" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.WatchJobChangesRequest), global::Toit.Proto.API.WatchJobChangesRequest.Parser, new[]{ "DeviceId", "JobId", "WatchRevision" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.WatchJobChangesResponse), global::Toit.Proto.API.WatchJobChangesResponse.Parser, new[]{ "Type", "JobId", "WatchRevision", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.WatchSessionChangesRequest), global::Toit.Proto.API.WatchSessionChangesRequest.Parser, new[]{ "DeviceId", "WatchRevision" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.WatchSessionChangesResponse), global::Toit.Proto.API.WatchSessionChangesResponse.Parser, new[]{ "Type", "DeviceId", "WatchRevision", "LastConnected" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.GetCurrentTimeRequest), global::Toit.Proto.API.GetCurrentTimeRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.GetCurrentTimeResponse), global::Toit.Proto.API.GetCurrentTimeResponse.Parser, new[]{ "CurrentTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.UnclaimDeviceRequest), global::Toit.Proto.API.UnclaimDeviceRequest.Parser, new[]{ "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Toit.Proto.API.UnclaimDeviceResponse), global::Toit.Proto.API.UnclaimDeviceResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ProcessStatus {
    [pbr::OriginalName("PROCESS_STATUS_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("PROCESS_STATUS_RUNNING")] Running = 1,
    [pbr::OriginalName("PROCESS_STATUS_TERMINATED")] Terminated = 2,
  }

  public enum ProcessGoalStatus {
    [pbr::OriginalName("PROCESS_GOAL_STATUS_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("PROCESS_GOAL_STATUS_RUNNING")] Running = 1,
    [pbr::OriginalName("PROCESS_GOAL_STATUS_TERMINATED")] Terminated = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Device : pb::IMessage<Device>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Device> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device(Device other) : this() {
      id_ = other.id_;
      hardwareId_ = other.hardwareId_;
      hardwareFqdn_ = other.hardwareFqdn_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      isSimulator_ = other.isSimulator_;
      nextAction_ = other.nextAction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device Clone() {
      return new Device(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private pb::ByteString id_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hardware_id" field.</summary>
    public const int HardwareIdFieldNumber = 5;
    private pb::ByteString hardwareId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString HardwareId {
      get { return hardwareId_; }
      set {
        hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hardware_fqdn" field.</summary>
    public const int HardwareFqdnFieldNumber = 6;
    private string hardwareFqdn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HardwareFqdn {
      get { return hardwareFqdn_; }
      set {
        hardwareFqdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 7;
    private global::Toit.Proto.Model.DeviceConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 8;
    private global::Toit.Proto.Model.DeviceStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "is_simulator" field.</summary>
    public const int IsSimulatorFieldNumber = 9;
    private bool isSimulator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSimulator {
      get { return isSimulator_; }
      set {
        isSimulator_ = value;
      }
    }

    /// <summary>Field number for the "next_action" field.</summary>
    public const int NextActionFieldNumber = 10;
    private global::Toit.Proto.Model.DeviceAction nextAction_ = global::Toit.Proto.Model.DeviceAction.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceAction NextAction {
      get { return nextAction_; }
      set {
        nextAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Device);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Device other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (HardwareId != other.HardwareId) return false;
      if (HardwareFqdn != other.HardwareFqdn) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (IsSimulator != other.IsSimulator) return false;
      if (NextAction != other.NextAction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
      if (HardwareFqdn.Length != 0) hash ^= HardwareFqdn.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (IsSimulator != false) hash ^= IsSimulator.GetHashCode();
      if (NextAction != global::Toit.Proto.Model.DeviceAction.Unknown) hash ^= NextAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (HardwareId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(HardwareId);
      }
      if (HardwareFqdn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(HardwareFqdn);
      }
      if (config_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Config);
      }
      if (status_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Status);
      }
      if (IsSimulator != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsSimulator);
      }
      if (NextAction != global::Toit.Proto.Model.DeviceAction.Unknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) NextAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (HardwareId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(HardwareId);
      }
      if (HardwareFqdn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(HardwareFqdn);
      }
      if (config_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Config);
      }
      if (status_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Status);
      }
      if (IsSimulator != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsSimulator);
      }
      if (NextAction != global::Toit.Proto.Model.DeviceAction.Unknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) NextAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (HardwareId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(HardwareId);
      }
      if (HardwareFqdn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareFqdn);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (IsSimulator != false) {
        size += 1 + 1;
      }
      if (NextAction != global::Toit.Proto.Model.DeviceAction.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NextAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Device other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.HardwareId.Length != 0) {
        HardwareId = other.HardwareId;
      }
      if (other.HardwareFqdn.Length != 0) {
        HardwareFqdn = other.HardwareFqdn;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Toit.Proto.Model.DeviceConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Toit.Proto.Model.DeviceStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.IsSimulator != false) {
        IsSimulator = other.IsSimulator;
      }
      if (other.NextAction != global::Toit.Proto.Model.DeviceAction.Unknown) {
        NextAction = other.NextAction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 42: {
            HardwareId = input.ReadBytes();
            break;
          }
          case 50: {
            HardwareFqdn = input.ReadString();
            break;
          }
          case 58: {
            if (config_ == null) {
              Config = new global::Toit.Proto.Model.DeviceConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 66: {
            if (status_ == null) {
              Status = new global::Toit.Proto.Model.DeviceStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 72: {
            IsSimulator = input.ReadBool();
            break;
          }
          case 80: {
            NextAction = (global::Toit.Proto.Model.DeviceAction) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 42: {
            HardwareId = input.ReadBytes();
            break;
          }
          case 50: {
            HardwareFqdn = input.ReadString();
            break;
          }
          case 58: {
            if (config_ == null) {
              Config = new global::Toit.Proto.Model.DeviceConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 66: {
            if (status_ == null) {
              Status = new global::Toit.Proto.Model.DeviceStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 72: {
            IsSimulator = input.ReadBool();
            break;
          }
          case 80: {
            NextAction = (global::Toit.Proto.Model.DeviceAction) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Job : pb::IMessage<Job>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Job> _parser = new pb::MessageParser<Job>(() => new Job());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Job> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job(Job other) : this() {
      id_ = other.id_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job Clone() {
      return new Job(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private pb::ByteString id_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Toit.Proto.Model.JobConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.JobConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Toit.Proto.Model.JobStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.JobStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Job);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Job other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Job other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Toit.Proto.Model.JobConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Toit.Proto.Model.JobStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Toit.Proto.Model.JobConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Toit.Proto.Model.JobStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Toit.Proto.Model.JobConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Toit.Proto.Model.JobStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceLog : pb::IMessage<DeviceLog>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceLog> _parser = new pb::MessageParser<DeviceLog>(() => new DeviceLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceLog(DeviceLog other) : this() {
      deviceId_ = other.deviceId_;
      eventId_ = other.eventId_;
      jobId_ = other.jobId_;
      received_ = other.received_ != null ? other.received_.Clone() : null;
      type_ = other.type_;
      msg_ = other.msg_;
      data_ = other.data_;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceLog Clone() {
      return new DeviceLog(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 2;
    private pb::ByteString eventId_ = pb::ByteString.Empty;
    /// <summary>
    /// Together with the device_id, it globally identifies the event. Events
    /// can be sorted, and will always be returned in increasing order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "job_id" field.</summary>
    public const int JobIdFieldNumber = 3;
    private pb::ByteString jobId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "received" field.</summary>
    public const int ReceivedFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp received_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Received {
      get { return received_; }
      set {
        received_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Toit.Proto.API.DeviceLog.Types.Type type_ = global::Toit.Proto.API.DeviceLog.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.DeviceLog.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 6;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 7;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (EventId != other.EventId) return false;
      if (JobId != other.JobId) return false;
      if (!object.Equals(Received, other.Received)) return false;
      if (Type != other.Type) return false;
      if (Msg != other.Msg) return false;
      if (Data != other.Data) return false;
      if (!object.Equals(Created, other.Created)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (received_ != null) hash ^= Received.GetHashCode();
      if (Type != global::Toit.Proto.API.DeviceLog.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(EventId);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(JobId);
      }
      if (received_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Received);
      }
      if (Type != global::Toit.Proto.API.DeviceLog.Types.Type.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Msg);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Data);
      }
      if (created_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Created);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(EventId);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(JobId);
      }
      if (received_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Received);
      }
      if (Type != global::Toit.Proto.API.DeviceLog.Types.Type.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Msg);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Data);
      }
      if (created_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Created);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EventId);
      }
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(JobId);
      }
      if (received_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Received);
      }
      if (Type != global::Toit.Proto.API.DeviceLog.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceLog other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.received_ != null) {
        if (received_ == null) {
          Received = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Received.MergeFrom(other.Received);
      }
      if (other.Type != global::Toit.Proto.API.DeviceLog.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            EventId = input.ReadBytes();
            break;
          }
          case 26: {
            JobId = input.ReadBytes();
            break;
          }
          case 34: {
            if (received_ == null) {
              Received = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Received);
            break;
          }
          case 40: {
            Type = (global::Toit.Proto.API.DeviceLog.Types.Type) input.ReadEnum();
            break;
          }
          case 50: {
            Msg = input.ReadString();
            break;
          }
          case 58: {
            Data = input.ReadBytes();
            break;
          }
          case 66: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            EventId = input.ReadBytes();
            break;
          }
          case 26: {
            JobId = input.ReadBytes();
            break;
          }
          case 34: {
            if (received_ == null) {
              Received = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Received);
            break;
          }
          case 40: {
            Type = (global::Toit.Proto.API.DeviceLog.Types.Type) input.ReadEnum();
            break;
          }
          case 50: {
            Msg = input.ReadString();
            break;
          }
          case 58: {
            Data = input.ReadBytes();
            break;
          }
          case 66: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DeviceLog message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("MESSAGE")] Message = 1,
        [pbr::OriginalName("PROCESS_START")] ProcessStart = 2,
        [pbr::OriginalName("PROCESS_STOP")] ProcessStop = 3,
        [pbr::OriginalName("STACK_TRACE")] StackTrace = 4,
        [pbr::OriginalName("BOOT")] Boot = 5,
        [pbr::OriginalName("SHUTDOWN")] Shutdown = 6,
      }

    }
    #endregion

  }

  public sealed partial class GetDeviceRequest : pb::IMessage<GetDeviceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDeviceRequest> _parser = new pb::MessageParser<GetDeviceRequest>(() => new GetDeviceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDeviceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceRequest(GetDeviceRequest other) : this() {
      deviceId_ = other.deviceId_;
      hardwareId_ = other.hardwareId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceRequest Clone() {
      return new GetDeviceRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hardware_id" field.</summary>
    public const int HardwareIdFieldNumber = 2;
    private pb::ByteString hardwareId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString HardwareId {
      get { return hardwareId_; }
      set {
        hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDeviceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDeviceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (HardwareId != other.HardwareId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (HardwareId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(HardwareId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (HardwareId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(HardwareId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (HardwareId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(HardwareId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDeviceRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.HardwareId.Length != 0) {
        HardwareId = other.HardwareId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            HardwareId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            HardwareId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetDeviceResponse : pb::IMessage<GetDeviceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDeviceResponse> _parser = new pb::MessageParser<GetDeviceResponse>(() => new GetDeviceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDeviceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceResponse(GetDeviceResponse other) : this() {
      device_ = other.device_ != null ? other.device_.Clone() : null;
      jobs_ = other.jobs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceResponse Clone() {
      return new GetDeviceResponse(this);
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 1;
    private global::Toit.Proto.API.Device device_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.Device Device {
      get { return device_; }
      set {
        device_ = value;
      }
    }

    /// <summary>Field number for the "jobs" field.</summary>
    public const int JobsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Toit.Proto.API.Job> _repeated_jobs_codec
        = pb::FieldCodec.ForMessage(18, global::Toit.Proto.API.Job.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.API.Job> jobs_ = new pbc::RepeatedField<global::Toit.Proto.API.Job>();
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.API.Job> Jobs {
      get { return jobs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDeviceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDeviceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Device, other.Device)) return false;
      if(!jobs_.Equals(other.jobs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (device_ != null) hash ^= Device.GetHashCode();
      hash ^= jobs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (device_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Device);
      }
      jobs_.WriteTo(output, _repeated_jobs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (device_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Device);
      }
      jobs_.WriteTo(ref output, _repeated_jobs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (device_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Device);
      }
      size += jobs_.CalculateSize(_repeated_jobs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDeviceResponse other) {
      if (other == null) {
        return;
      }
      if (other.device_ != null) {
        if (device_ == null) {
          Device = new global::Toit.Proto.API.Device();
        }
        Device.MergeFrom(other.Device);
      }
      jobs_.Add(other.jobs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (device_ == null) {
              Device = new global::Toit.Proto.API.Device();
            }
            input.ReadMessage(Device);
            break;
          }
          case 18: {
            jobs_.AddEntriesFrom(input, _repeated_jobs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (device_ == null) {
              Device = new global::Toit.Proto.API.Device();
            }
            input.ReadMessage(Device);
            break;
          }
          case 18: {
            jobs_.AddEntriesFrom(ref input, _repeated_jobs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConfigChange : pb::IMessage<ConfigChange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigChange> _parser = new pb::MessageParser<ConfigChange>(() => new ConfigChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigChange(ConfigChange other) : this() {
      switch (other.ConfigCase) {
        case ConfigOneofCase.Sdk:
          Sdk = other.Sdk.Clone();
          break;
        case ConfigOneofCase.Name:
          Name = other.Name.Clone();
          break;
        case ConfigOneofCase.SdkModel:
          SdkModel = other.SdkModel.Clone();
          break;
        case ConfigOneofCase.Broker:
          Broker = other.Broker.Clone();
          break;
        case ConfigOneofCase.MaxOffline:
          MaxOffline = other.MaxOffline.Clone();
          break;
        case ConfigOneofCase.Connections:
          Connections = other.Connections.Clone();
          break;
        case ConfigOneofCase.Reboot:
          Reboot = other.Reboot.Clone();
          break;
        case ConfigOneofCase.FactoryReset:
          FactoryReset = other.FactoryReset.Clone();
          break;
        case ConfigOneofCase.EventQueueThreshold:
          EventQueueThreshold = other.EventQueueThreshold.Clone();
          break;
        case ConfigOneofCase.LoggingLevel:
          LoggingLevel = other.LoggingLevel.Clone();
          break;
        case ConfigOneofCase.MetricsLevel:
          MetricsLevel = other.MetricsLevel.Clone();
          break;
        case ConfigOneofCase.ReportModules:
          ReportModules = other.ReportModules.Clone();
          break;
        case ConfigOneofCase.UpdateModule:
          UpdateModule = other.UpdateModule.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigChange Clone() {
      return new ConfigChange(this);
    }

    /// <summary>Field number for the "sdk" field.</summary>
    public const int SdkFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.SDK Sdk {
      get { return configCase_ == ConfigOneofCase.Sdk ? (global::Toit.Proto.API.ConfigChange.Types.SDK) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Sdk;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.Name Name {
      get { return configCase_ == ConfigOneofCase.Name ? (global::Toit.Proto.API.ConfigChange.Types.Name) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Name;
      }
    }

    /// <summary>Field number for the "sdk_model" field.</summary>
    public const int SdkModelFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.SDKModel SdkModel {
      get { return configCase_ == ConfigOneofCase.SdkModel ? (global::Toit.Proto.API.ConfigChange.Types.SDKModel) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.SdkModel;
      }
    }

    /// <summary>Field number for the "broker" field.</summary>
    public const int BrokerFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.Broker Broker {
      get { return configCase_ == ConfigOneofCase.Broker ? (global::Toit.Proto.API.ConfigChange.Types.Broker) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Broker;
      }
    }

    /// <summary>Field number for the "max_offline" field.</summary>
    public const int MaxOfflineFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.MaxOffline MaxOffline {
      get { return configCase_ == ConfigOneofCase.MaxOffline ? (global::Toit.Proto.API.ConfigChange.Types.MaxOffline) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.MaxOffline;
      }
    }

    /// <summary>Field number for the "connections" field.</summary>
    public const int ConnectionsFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.Connections Connections {
      get { return configCase_ == ConfigOneofCase.Connections ? (global::Toit.Proto.API.ConfigChange.Types.Connections) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Connections;
      }
    }

    /// <summary>Field number for the "reboot" field.</summary>
    public const int RebootFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.Reboot Reboot {
      get { return configCase_ == ConfigOneofCase.Reboot ? (global::Toit.Proto.API.ConfigChange.Types.Reboot) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Reboot;
      }
    }

    /// <summary>Field number for the "factory_reset" field.</summary>
    public const int FactoryResetFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.FactoryReset FactoryReset {
      get { return configCase_ == ConfigOneofCase.FactoryReset ? (global::Toit.Proto.API.ConfigChange.Types.FactoryReset) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.FactoryReset;
      }
    }

    /// <summary>Field number for the "event_queue_threshold" field.</summary>
    public const int EventQueueThresholdFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.EventQueueThreshold EventQueueThreshold {
      get { return configCase_ == ConfigOneofCase.EventQueueThreshold ? (global::Toit.Proto.API.ConfigChange.Types.EventQueueThreshold) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.EventQueueThreshold;
      }
    }

    /// <summary>Field number for the "logging_level" field.</summary>
    public const int LoggingLevelFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.LoggingLevel LoggingLevel {
      get { return configCase_ == ConfigOneofCase.LoggingLevel ? (global::Toit.Proto.API.ConfigChange.Types.LoggingLevel) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.LoggingLevel;
      }
    }

    /// <summary>Field number for the "metrics_level" field.</summary>
    public const int MetricsLevelFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.MetricsLevel MetricsLevel {
      get { return configCase_ == ConfigOneofCase.MetricsLevel ? (global::Toit.Proto.API.ConfigChange.Types.MetricsLevel) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.MetricsLevel;
      }
    }

    /// <summary>Field number for the "report_modules" field.</summary>
    public const int ReportModulesFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.ReportModules ReportModules {
      get { return configCase_ == ConfigOneofCase.ReportModules ? (global::Toit.Proto.API.ConfigChange.Types.ReportModules) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.ReportModules;
      }
    }

    /// <summary>Field number for the "update_module" field.</summary>
    public const int UpdateModuleFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ConfigChange.Types.UpdateModule UpdateModule {
      get { return configCase_ == ConfigOneofCase.UpdateModule ? (global::Toit.Proto.API.ConfigChange.Types.UpdateModule) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.UpdateModule;
      }
    }

    private object config_;
    /// <summary>Enum of possible cases for the "config" oneof.</summary>
    public enum ConfigOneofCase {
      None = 0,
      Sdk = 1,
      Name = 2,
      SdkModel = 3,
      Broker = 4,
      MaxOffline = 5,
      Connections = 6,
      Reboot = 9,
      FactoryReset = 10,
      EventQueueThreshold = 11,
      LoggingLevel = 12,
      MetricsLevel = 13,
      ReportModules = 14,
      UpdateModule = 15,
    }
    private ConfigOneofCase configCase_ = ConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigOneofCase ConfigCase {
      get { return configCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConfig() {
      configCase_ = ConfigOneofCase.None;
      config_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Sdk, other.Sdk)) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (!object.Equals(SdkModel, other.SdkModel)) return false;
      if (!object.Equals(Broker, other.Broker)) return false;
      if (!object.Equals(MaxOffline, other.MaxOffline)) return false;
      if (!object.Equals(Connections, other.Connections)) return false;
      if (!object.Equals(Reboot, other.Reboot)) return false;
      if (!object.Equals(FactoryReset, other.FactoryReset)) return false;
      if (!object.Equals(EventQueueThreshold, other.EventQueueThreshold)) return false;
      if (!object.Equals(LoggingLevel, other.LoggingLevel)) return false;
      if (!object.Equals(MetricsLevel, other.MetricsLevel)) return false;
      if (!object.Equals(ReportModules, other.ReportModules)) return false;
      if (!object.Equals(UpdateModule, other.UpdateModule)) return false;
      if (ConfigCase != other.ConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (configCase_ == ConfigOneofCase.Sdk) hash ^= Sdk.GetHashCode();
      if (configCase_ == ConfigOneofCase.Name) hash ^= Name.GetHashCode();
      if (configCase_ == ConfigOneofCase.SdkModel) hash ^= SdkModel.GetHashCode();
      if (configCase_ == ConfigOneofCase.Broker) hash ^= Broker.GetHashCode();
      if (configCase_ == ConfigOneofCase.MaxOffline) hash ^= MaxOffline.GetHashCode();
      if (configCase_ == ConfigOneofCase.Connections) hash ^= Connections.GetHashCode();
      if (configCase_ == ConfigOneofCase.Reboot) hash ^= Reboot.GetHashCode();
      if (configCase_ == ConfigOneofCase.FactoryReset) hash ^= FactoryReset.GetHashCode();
      if (configCase_ == ConfigOneofCase.EventQueueThreshold) hash ^= EventQueueThreshold.GetHashCode();
      if (configCase_ == ConfigOneofCase.LoggingLevel) hash ^= LoggingLevel.GetHashCode();
      if (configCase_ == ConfigOneofCase.MetricsLevel) hash ^= MetricsLevel.GetHashCode();
      if (configCase_ == ConfigOneofCase.ReportModules) hash ^= ReportModules.GetHashCode();
      if (configCase_ == ConfigOneofCase.UpdateModule) hash ^= UpdateModule.GetHashCode();
      hash ^= (int) configCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (configCase_ == ConfigOneofCase.Sdk) {
        output.WriteRawTag(10);
        output.WriteMessage(Sdk);
      }
      if (configCase_ == ConfigOneofCase.Name) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (configCase_ == ConfigOneofCase.SdkModel) {
        output.WriteRawTag(26);
        output.WriteMessage(SdkModel);
      }
      if (configCase_ == ConfigOneofCase.Broker) {
        output.WriteRawTag(34);
        output.WriteMessage(Broker);
      }
      if (configCase_ == ConfigOneofCase.MaxOffline) {
        output.WriteRawTag(42);
        output.WriteMessage(MaxOffline);
      }
      if (configCase_ == ConfigOneofCase.Connections) {
        output.WriteRawTag(50);
        output.WriteMessage(Connections);
      }
      if (configCase_ == ConfigOneofCase.Reboot) {
        output.WriteRawTag(74);
        output.WriteMessage(Reboot);
      }
      if (configCase_ == ConfigOneofCase.FactoryReset) {
        output.WriteRawTag(82);
        output.WriteMessage(FactoryReset);
      }
      if (configCase_ == ConfigOneofCase.EventQueueThreshold) {
        output.WriteRawTag(90);
        output.WriteMessage(EventQueueThreshold);
      }
      if (configCase_ == ConfigOneofCase.LoggingLevel) {
        output.WriteRawTag(98);
        output.WriteMessage(LoggingLevel);
      }
      if (configCase_ == ConfigOneofCase.MetricsLevel) {
        output.WriteRawTag(106);
        output.WriteMessage(MetricsLevel);
      }
      if (configCase_ == ConfigOneofCase.ReportModules) {
        output.WriteRawTag(114);
        output.WriteMessage(ReportModules);
      }
      if (configCase_ == ConfigOneofCase.UpdateModule) {
        output.WriteRawTag(122);
        output.WriteMessage(UpdateModule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (configCase_ == ConfigOneofCase.Sdk) {
        output.WriteRawTag(10);
        output.WriteMessage(Sdk);
      }
      if (configCase_ == ConfigOneofCase.Name) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (configCase_ == ConfigOneofCase.SdkModel) {
        output.WriteRawTag(26);
        output.WriteMessage(SdkModel);
      }
      if (configCase_ == ConfigOneofCase.Broker) {
        output.WriteRawTag(34);
        output.WriteMessage(Broker);
      }
      if (configCase_ == ConfigOneofCase.MaxOffline) {
        output.WriteRawTag(42);
        output.WriteMessage(MaxOffline);
      }
      if (configCase_ == ConfigOneofCase.Connections) {
        output.WriteRawTag(50);
        output.WriteMessage(Connections);
      }
      if (configCase_ == ConfigOneofCase.Reboot) {
        output.WriteRawTag(74);
        output.WriteMessage(Reboot);
      }
      if (configCase_ == ConfigOneofCase.FactoryReset) {
        output.WriteRawTag(82);
        output.WriteMessage(FactoryReset);
      }
      if (configCase_ == ConfigOneofCase.EventQueueThreshold) {
        output.WriteRawTag(90);
        output.WriteMessage(EventQueueThreshold);
      }
      if (configCase_ == ConfigOneofCase.LoggingLevel) {
        output.WriteRawTag(98);
        output.WriteMessage(LoggingLevel);
      }
      if (configCase_ == ConfigOneofCase.MetricsLevel) {
        output.WriteRawTag(106);
        output.WriteMessage(MetricsLevel);
      }
      if (configCase_ == ConfigOneofCase.ReportModules) {
        output.WriteRawTag(114);
        output.WriteMessage(ReportModules);
      }
      if (configCase_ == ConfigOneofCase.UpdateModule) {
        output.WriteRawTag(122);
        output.WriteMessage(UpdateModule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (configCase_ == ConfigOneofCase.Sdk) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sdk);
      }
      if (configCase_ == ConfigOneofCase.Name) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (configCase_ == ConfigOneofCase.SdkModel) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SdkModel);
      }
      if (configCase_ == ConfigOneofCase.Broker) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Broker);
      }
      if (configCase_ == ConfigOneofCase.MaxOffline) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxOffline);
      }
      if (configCase_ == ConfigOneofCase.Connections) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connections);
      }
      if (configCase_ == ConfigOneofCase.Reboot) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reboot);
      }
      if (configCase_ == ConfigOneofCase.FactoryReset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FactoryReset);
      }
      if (configCase_ == ConfigOneofCase.EventQueueThreshold) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventQueueThreshold);
      }
      if (configCase_ == ConfigOneofCase.LoggingLevel) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoggingLevel);
      }
      if (configCase_ == ConfigOneofCase.MetricsLevel) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetricsLevel);
      }
      if (configCase_ == ConfigOneofCase.ReportModules) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportModules);
      }
      if (configCase_ == ConfigOneofCase.UpdateModule) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateModule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigChange other) {
      if (other == null) {
        return;
      }
      switch (other.ConfigCase) {
        case ConfigOneofCase.Sdk:
          if (Sdk == null) {
            Sdk = new global::Toit.Proto.API.ConfigChange.Types.SDK();
          }
          Sdk.MergeFrom(other.Sdk);
          break;
        case ConfigOneofCase.Name:
          if (Name == null) {
            Name = new global::Toit.Proto.API.ConfigChange.Types.Name();
          }
          Name.MergeFrom(other.Name);
          break;
        case ConfigOneofCase.SdkModel:
          if (SdkModel == null) {
            SdkModel = new global::Toit.Proto.API.ConfigChange.Types.SDKModel();
          }
          SdkModel.MergeFrom(other.SdkModel);
          break;
        case ConfigOneofCase.Broker:
          if (Broker == null) {
            Broker = new global::Toit.Proto.API.ConfigChange.Types.Broker();
          }
          Broker.MergeFrom(other.Broker);
          break;
        case ConfigOneofCase.MaxOffline:
          if (MaxOffline == null) {
            MaxOffline = new global::Toit.Proto.API.ConfigChange.Types.MaxOffline();
          }
          MaxOffline.MergeFrom(other.MaxOffline);
          break;
        case ConfigOneofCase.Connections:
          if (Connections == null) {
            Connections = new global::Toit.Proto.API.ConfigChange.Types.Connections();
          }
          Connections.MergeFrom(other.Connections);
          break;
        case ConfigOneofCase.Reboot:
          if (Reboot == null) {
            Reboot = new global::Toit.Proto.API.ConfigChange.Types.Reboot();
          }
          Reboot.MergeFrom(other.Reboot);
          break;
        case ConfigOneofCase.FactoryReset:
          if (FactoryReset == null) {
            FactoryReset = new global::Toit.Proto.API.ConfigChange.Types.FactoryReset();
          }
          FactoryReset.MergeFrom(other.FactoryReset);
          break;
        case ConfigOneofCase.EventQueueThreshold:
          if (EventQueueThreshold == null) {
            EventQueueThreshold = new global::Toit.Proto.API.ConfigChange.Types.EventQueueThreshold();
          }
          EventQueueThreshold.MergeFrom(other.EventQueueThreshold);
          break;
        case ConfigOneofCase.LoggingLevel:
          if (LoggingLevel == null) {
            LoggingLevel = new global::Toit.Proto.API.ConfigChange.Types.LoggingLevel();
          }
          LoggingLevel.MergeFrom(other.LoggingLevel);
          break;
        case ConfigOneofCase.MetricsLevel:
          if (MetricsLevel == null) {
            MetricsLevel = new global::Toit.Proto.API.ConfigChange.Types.MetricsLevel();
          }
          MetricsLevel.MergeFrom(other.MetricsLevel);
          break;
        case ConfigOneofCase.ReportModules:
          if (ReportModules == null) {
            ReportModules = new global::Toit.Proto.API.ConfigChange.Types.ReportModules();
          }
          ReportModules.MergeFrom(other.ReportModules);
          break;
        case ConfigOneofCase.UpdateModule:
          if (UpdateModule == null) {
            UpdateModule = new global::Toit.Proto.API.ConfigChange.Types.UpdateModule();
          }
          UpdateModule.MergeFrom(other.UpdateModule);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Toit.Proto.API.ConfigChange.Types.SDK subBuilder = new global::Toit.Proto.API.ConfigChange.Types.SDK();
            if (configCase_ == ConfigOneofCase.Sdk) {
              subBuilder.MergeFrom(Sdk);
            }
            input.ReadMessage(subBuilder);
            Sdk = subBuilder;
            break;
          }
          case 18: {
            global::Toit.Proto.API.ConfigChange.Types.Name subBuilder = new global::Toit.Proto.API.ConfigChange.Types.Name();
            if (configCase_ == ConfigOneofCase.Name) {
              subBuilder.MergeFrom(Name);
            }
            input.ReadMessage(subBuilder);
            Name = subBuilder;
            break;
          }
          case 26: {
            global::Toit.Proto.API.ConfigChange.Types.SDKModel subBuilder = new global::Toit.Proto.API.ConfigChange.Types.SDKModel();
            if (configCase_ == ConfigOneofCase.SdkModel) {
              subBuilder.MergeFrom(SdkModel);
            }
            input.ReadMessage(subBuilder);
            SdkModel = subBuilder;
            break;
          }
          case 34: {
            global::Toit.Proto.API.ConfigChange.Types.Broker subBuilder = new global::Toit.Proto.API.ConfigChange.Types.Broker();
            if (configCase_ == ConfigOneofCase.Broker) {
              subBuilder.MergeFrom(Broker);
            }
            input.ReadMessage(subBuilder);
            Broker = subBuilder;
            break;
          }
          case 42: {
            global::Toit.Proto.API.ConfigChange.Types.MaxOffline subBuilder = new global::Toit.Proto.API.ConfigChange.Types.MaxOffline();
            if (configCase_ == ConfigOneofCase.MaxOffline) {
              subBuilder.MergeFrom(MaxOffline);
            }
            input.ReadMessage(subBuilder);
            MaxOffline = subBuilder;
            break;
          }
          case 50: {
            global::Toit.Proto.API.ConfigChange.Types.Connections subBuilder = new global::Toit.Proto.API.ConfigChange.Types.Connections();
            if (configCase_ == ConfigOneofCase.Connections) {
              subBuilder.MergeFrom(Connections);
            }
            input.ReadMessage(subBuilder);
            Connections = subBuilder;
            break;
          }
          case 74: {
            global::Toit.Proto.API.ConfigChange.Types.Reboot subBuilder = new global::Toit.Proto.API.ConfigChange.Types.Reboot();
            if (configCase_ == ConfigOneofCase.Reboot) {
              subBuilder.MergeFrom(Reboot);
            }
            input.ReadMessage(subBuilder);
            Reboot = subBuilder;
            break;
          }
          case 82: {
            global::Toit.Proto.API.ConfigChange.Types.FactoryReset subBuilder = new global::Toit.Proto.API.ConfigChange.Types.FactoryReset();
            if (configCase_ == ConfigOneofCase.FactoryReset) {
              subBuilder.MergeFrom(FactoryReset);
            }
            input.ReadMessage(subBuilder);
            FactoryReset = subBuilder;
            break;
          }
          case 90: {
            global::Toit.Proto.API.ConfigChange.Types.EventQueueThreshold subBuilder = new global::Toit.Proto.API.ConfigChange.Types.EventQueueThreshold();
            if (configCase_ == ConfigOneofCase.EventQueueThreshold) {
              subBuilder.MergeFrom(EventQueueThreshold);
            }
            input.ReadMessage(subBuilder);
            EventQueueThreshold = subBuilder;
            break;
          }
          case 98: {
            global::Toit.Proto.API.ConfigChange.Types.LoggingLevel subBuilder = new global::Toit.Proto.API.ConfigChange.Types.LoggingLevel();
            if (configCase_ == ConfigOneofCase.LoggingLevel) {
              subBuilder.MergeFrom(LoggingLevel);
            }
            input.ReadMessage(subBuilder);
            LoggingLevel = subBuilder;
            break;
          }
          case 106: {
            global::Toit.Proto.API.ConfigChange.Types.MetricsLevel subBuilder = new global::Toit.Proto.API.ConfigChange.Types.MetricsLevel();
            if (configCase_ == ConfigOneofCase.MetricsLevel) {
              subBuilder.MergeFrom(MetricsLevel);
            }
            input.ReadMessage(subBuilder);
            MetricsLevel = subBuilder;
            break;
          }
          case 114: {
            global::Toit.Proto.API.ConfigChange.Types.ReportModules subBuilder = new global::Toit.Proto.API.ConfigChange.Types.ReportModules();
            if (configCase_ == ConfigOneofCase.ReportModules) {
              subBuilder.MergeFrom(ReportModules);
            }
            input.ReadMessage(subBuilder);
            ReportModules = subBuilder;
            break;
          }
          case 122: {
            global::Toit.Proto.API.ConfigChange.Types.UpdateModule subBuilder = new global::Toit.Proto.API.ConfigChange.Types.UpdateModule();
            if (configCase_ == ConfigOneofCase.UpdateModule) {
              subBuilder.MergeFrom(UpdateModule);
            }
            input.ReadMessage(subBuilder);
            UpdateModule = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Toit.Proto.API.ConfigChange.Types.SDK subBuilder = new global::Toit.Proto.API.ConfigChange.Types.SDK();
            if (configCase_ == ConfigOneofCase.Sdk) {
              subBuilder.MergeFrom(Sdk);
            }
            input.ReadMessage(subBuilder);
            Sdk = subBuilder;
            break;
          }
          case 18: {
            global::Toit.Proto.API.ConfigChange.Types.Name subBuilder = new global::Toit.Proto.API.ConfigChange.Types.Name();
            if (configCase_ == ConfigOneofCase.Name) {
              subBuilder.MergeFrom(Name);
            }
            input.ReadMessage(subBuilder);
            Name = subBuilder;
            break;
          }
          case 26: {
            global::Toit.Proto.API.ConfigChange.Types.SDKModel subBuilder = new global::Toit.Proto.API.ConfigChange.Types.SDKModel();
            if (configCase_ == ConfigOneofCase.SdkModel) {
              subBuilder.MergeFrom(SdkModel);
            }
            input.ReadMessage(subBuilder);
            SdkModel = subBuilder;
            break;
          }
          case 34: {
            global::Toit.Proto.API.ConfigChange.Types.Broker subBuilder = new global::Toit.Proto.API.ConfigChange.Types.Broker();
            if (configCase_ == ConfigOneofCase.Broker) {
              subBuilder.MergeFrom(Broker);
            }
            input.ReadMessage(subBuilder);
            Broker = subBuilder;
            break;
          }
          case 42: {
            global::Toit.Proto.API.ConfigChange.Types.MaxOffline subBuilder = new global::Toit.Proto.API.ConfigChange.Types.MaxOffline();
            if (configCase_ == ConfigOneofCase.MaxOffline) {
              subBuilder.MergeFrom(MaxOffline);
            }
            input.ReadMessage(subBuilder);
            MaxOffline = subBuilder;
            break;
          }
          case 50: {
            global::Toit.Proto.API.ConfigChange.Types.Connections subBuilder = new global::Toit.Proto.API.ConfigChange.Types.Connections();
            if (configCase_ == ConfigOneofCase.Connections) {
              subBuilder.MergeFrom(Connections);
            }
            input.ReadMessage(subBuilder);
            Connections = subBuilder;
            break;
          }
          case 74: {
            global::Toit.Proto.API.ConfigChange.Types.Reboot subBuilder = new global::Toit.Proto.API.ConfigChange.Types.Reboot();
            if (configCase_ == ConfigOneofCase.Reboot) {
              subBuilder.MergeFrom(Reboot);
            }
            input.ReadMessage(subBuilder);
            Reboot = subBuilder;
            break;
          }
          case 82: {
            global::Toit.Proto.API.ConfigChange.Types.FactoryReset subBuilder = new global::Toit.Proto.API.ConfigChange.Types.FactoryReset();
            if (configCase_ == ConfigOneofCase.FactoryReset) {
              subBuilder.MergeFrom(FactoryReset);
            }
            input.ReadMessage(subBuilder);
            FactoryReset = subBuilder;
            break;
          }
          case 90: {
            global::Toit.Proto.API.ConfigChange.Types.EventQueueThreshold subBuilder = new global::Toit.Proto.API.ConfigChange.Types.EventQueueThreshold();
            if (configCase_ == ConfigOneofCase.EventQueueThreshold) {
              subBuilder.MergeFrom(EventQueueThreshold);
            }
            input.ReadMessage(subBuilder);
            EventQueueThreshold = subBuilder;
            break;
          }
          case 98: {
            global::Toit.Proto.API.ConfigChange.Types.LoggingLevel subBuilder = new global::Toit.Proto.API.ConfigChange.Types.LoggingLevel();
            if (configCase_ == ConfigOneofCase.LoggingLevel) {
              subBuilder.MergeFrom(LoggingLevel);
            }
            input.ReadMessage(subBuilder);
            LoggingLevel = subBuilder;
            break;
          }
          case 106: {
            global::Toit.Proto.API.ConfigChange.Types.MetricsLevel subBuilder = new global::Toit.Proto.API.ConfigChange.Types.MetricsLevel();
            if (configCase_ == ConfigOneofCase.MetricsLevel) {
              subBuilder.MergeFrom(MetricsLevel);
            }
            input.ReadMessage(subBuilder);
            MetricsLevel = subBuilder;
            break;
          }
          case 114: {
            global::Toit.Proto.API.ConfigChange.Types.ReportModules subBuilder = new global::Toit.Proto.API.ConfigChange.Types.ReportModules();
            if (configCase_ == ConfigOneofCase.ReportModules) {
              subBuilder.MergeFrom(ReportModules);
            }
            input.ReadMessage(subBuilder);
            ReportModules = subBuilder;
            break;
          }
          case 122: {
            global::Toit.Proto.API.ConfigChange.Types.UpdateModule subBuilder = new global::Toit.Proto.API.ConfigChange.Types.UpdateModule();
            if (configCase_ == ConfigOneofCase.UpdateModule) {
              subBuilder.MergeFrom(UpdateModule);
            }
            input.ReadMessage(subBuilder);
            UpdateModule = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ConfigChange message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class SDK : pb::IMessage<SDK>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SDK> _parser = new pb::MessageParser<SDK>(() => new SDK());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SDK> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SDK() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SDK(SDK other) : this() {
          version_ = other.version_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SDK Clone() {
          return new SDK(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private string version_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Version {
          get { return version_; }
          set {
            version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SDK);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SDK other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Version != other.Version) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Version.Length != 0) hash ^= Version.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Version.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Version.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Version.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SDK other) {
          if (other == null) {
            return;
          }
          if (other.Version.Length != 0) {
            Version = other.Version;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Version = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Version = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Name : pb::IMessage<Name>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Name> _parser = new pb::MessageParser<Name>(() => new Name());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Name> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Name() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Name(Name other) : this() {
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Name Clone() {
          return new Name(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int Name_FieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name_ {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Name);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Name other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name_ != other.Name_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name_.Length != 0) hash ^= Name_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Name other) {
          if (other == null) {
            return;
          }
          if (other.Name_.Length != 0) {
            Name_ = other.Name_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name_ = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name_ = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SDKModel : pb::IMessage<SDKModel>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SDKModel> _parser = new pb::MessageParser<SDKModel>(() => new SDKModel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SDKModel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SDKModel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SDKModel(SDKModel other) : this() {
          model_ = other.model_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SDKModel Clone() {
          return new SDKModel(this);
        }

        /// <summary>Field number for the "model" field.</summary>
        public const int ModelFieldNumber = 1;
        private string model_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Model {
          get { return model_; }
          set {
            model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SDKModel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SDKModel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Model != other.Model) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Model.Length != 0) hash ^= Model.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Model.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Model);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Model.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Model);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Model.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SDKModel other) {
          if (other == null) {
            return;
          }
          if (other.Model.Length != 0) {
            Model = other.Model;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Model = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Model = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Broker : pb::IMessage<Broker>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Broker> _parser = new pb::MessageParser<Broker>(() => new Broker());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Broker> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Broker() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Broker(Broker other) : this() {
          brokerSettings_ = other.brokerSettings_ != null ? other.brokerSettings_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Broker Clone() {
          return new Broker(this);
        }

        /// <summary>Field number for the "broker_settings" field.</summary>
        public const int BrokerSettingsFieldNumber = 1;
        private global::Toit.Proto.Model.DeviceBrokerSettings brokerSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Toit.Proto.Model.DeviceBrokerSettings BrokerSettings {
          get { return brokerSettings_; }
          set {
            brokerSettings_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Broker);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Broker other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(BrokerSettings, other.BrokerSettings)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (brokerSettings_ != null) hash ^= BrokerSettings.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (brokerSettings_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(BrokerSettings);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (brokerSettings_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(BrokerSettings);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (brokerSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BrokerSettings);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Broker other) {
          if (other == null) {
            return;
          }
          if (other.brokerSettings_ != null) {
            if (brokerSettings_ == null) {
              BrokerSettings = new global::Toit.Proto.Model.DeviceBrokerSettings();
            }
            BrokerSettings.MergeFrom(other.BrokerSettings);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (brokerSettings_ == null) {
                  BrokerSettings = new global::Toit.Proto.Model.DeviceBrokerSettings();
                }
                input.ReadMessage(BrokerSettings);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (brokerSettings_ == null) {
                  BrokerSettings = new global::Toit.Proto.Model.DeviceBrokerSettings();
                }
                input.ReadMessage(BrokerSettings);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MaxOffline : pb::IMessage<MaxOffline>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MaxOffline> _parser = new pb::MessageParser<MaxOffline>(() => new MaxOffline());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MaxOffline> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MaxOffline() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MaxOffline(MaxOffline other) : this() {
          maxOffline_ = other.maxOffline_ != null ? other.maxOffline_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MaxOffline Clone() {
          return new MaxOffline(this);
        }

        /// <summary>Field number for the "max_offline" field.</summary>
        public const int MaxOffline_FieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Duration maxOffline_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Duration MaxOffline_ {
          get { return maxOffline_; }
          set {
            maxOffline_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MaxOffline);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MaxOffline other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(MaxOffline_, other.MaxOffline_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (maxOffline_ != null) hash ^= MaxOffline_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (maxOffline_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(MaxOffline_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (maxOffline_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(MaxOffline_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (maxOffline_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxOffline_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MaxOffline other) {
          if (other == null) {
            return;
          }
          if (other.maxOffline_ != null) {
            if (maxOffline_ == null) {
              MaxOffline_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            MaxOffline_.MergeFrom(other.MaxOffline_);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (maxOffline_ == null) {
                  MaxOffline_ = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(MaxOffline_);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (maxOffline_ == null) {
                  MaxOffline_ = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(MaxOffline_);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Connections : pb::IMessage<Connections>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Connections> _parser = new pb::MessageParser<Connections>(() => new Connections());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Connections> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Connections() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Connections(Connections other) : this() {
          connections_ = other.connections_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Connections Clone() {
          return new Connections(this);
        }

        /// <summary>Field number for the "connections" field.</summary>
        public const int Connections_FieldNumber = 1;
        private static readonly pb::FieldCodec<global::Toit.Proto.Model.ConnectionSetting> _repeated_connections_codec
            = pb::FieldCodec.ForMessage(10, global::Toit.Proto.Model.ConnectionSetting.Parser);
        private readonly pbc::RepeatedField<global::Toit.Proto.Model.ConnectionSetting> connections_ = new pbc::RepeatedField<global::Toit.Proto.Model.ConnectionSetting>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Toit.Proto.Model.ConnectionSetting> Connections_ {
          get { return connections_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Connections);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Connections other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!connections_.Equals(other.connections_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= connections_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          connections_.WriteTo(output, _repeated_connections_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          connections_.WriteTo(ref output, _repeated_connections_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += connections_.CalculateSize(_repeated_connections_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Connections other) {
          if (other == null) {
            return;
          }
          connections_.Add(other.connections_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                connections_.AddEntriesFrom(input, _repeated_connections_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                connections_.AddEntriesFrom(ref input, _repeated_connections_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Reboot : pb::IMessage<Reboot>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Reboot> _parser = new pb::MessageParser<Reboot>(() => new Reboot());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Reboot> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reboot() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reboot(Reboot other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reboot Clone() {
          return new Reboot(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Reboot);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Reboot other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Reboot other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class FactoryReset : pb::IMessage<FactoryReset>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FactoryReset> _parser = new pb::MessageParser<FactoryReset>(() => new FactoryReset());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FactoryReset> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FactoryReset() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FactoryReset(FactoryReset other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FactoryReset Clone() {
          return new FactoryReset(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FactoryReset);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FactoryReset other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FactoryReset other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class EventQueueThreshold : pb::IMessage<EventQueueThreshold>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EventQueueThreshold> _parser = new pb::MessageParser<EventQueueThreshold>(() => new EventQueueThreshold());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EventQueueThreshold> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EventQueueThreshold() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EventQueueThreshold(EventQueueThreshold other) : this() {
          threshold_ = other.threshold_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EventQueueThreshold Clone() {
          return new EventQueueThreshold(this);
        }

        /// <summary>Field number for the "threshold" field.</summary>
        public const int ThresholdFieldNumber = 1;
        private uint threshold_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Threshold {
          get { return threshold_; }
          set {
            threshold_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EventQueueThreshold);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EventQueueThreshold other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Threshold != other.Threshold) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Threshold != 0) hash ^= Threshold.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Threshold != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Threshold);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Threshold != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Threshold);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Threshold != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Threshold);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EventQueueThreshold other) {
          if (other == null) {
            return;
          }
          if (other.Threshold != 0) {
            Threshold = other.Threshold;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Threshold = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Threshold = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class LoggingLevel : pb::IMessage<LoggingLevel>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LoggingLevel> _parser = new pb::MessageParser<LoggingLevel>(() => new LoggingLevel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LoggingLevel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LoggingLevel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LoggingLevel(LoggingLevel other) : this() {
          level_ = other.level_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LoggingLevel Clone() {
          return new LoggingLevel(this);
        }

        /// <summary>Field number for the "level" field.</summary>
        public const int LevelFieldNumber = 1;
        private global::Toit.Proto.Model.LogData.Types.Level level_ = global::Toit.Proto.Model.LogData.Types.Level.PrintLevel;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Toit.Proto.Model.LogData.Types.Level Level {
          get { return level_; }
          set {
            level_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LoggingLevel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LoggingLevel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Level != other.Level) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) hash ^= Level.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LoggingLevel other) {
          if (other == null) {
            return;
          }
          if (other.Level != global::Toit.Proto.Model.LogData.Types.Level.PrintLevel) {
            Level = other.Level;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Level = (global::Toit.Proto.Model.LogData.Types.Level) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Level = (global::Toit.Proto.Model.LogData.Types.Level) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MetricsLevel : pb::IMessage<MetricsLevel>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MetricsLevel> _parser = new pb::MessageParser<MetricsLevel>(() => new MetricsLevel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MetricsLevel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetricsLevel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetricsLevel(MetricsLevel other) : this() {
          level_ = other.level_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetricsLevel Clone() {
          return new MetricsLevel(this);
        }

        /// <summary>Field number for the "level" field.</summary>
        public const int LevelFieldNumber = 1;
        private global::Toit.Proto.Model.MetricsData.Types.Level level_ = global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Toit.Proto.Model.MetricsData.Types.Level Level {
          get { return level_; }
          set {
            level_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MetricsLevel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MetricsLevel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Level != other.Level) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) hash ^= Level.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MetricsLevel other) {
          if (other == null) {
            return;
          }
          if (other.Level != global::Toit.Proto.Model.MetricsData.Types.Level.DebugLevel) {
            Level = other.Level;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Level = (global::Toit.Proto.Model.MetricsData.Types.Level) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Level = (global::Toit.Proto.Model.MetricsData.Types.Level) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ReportModules : pb::IMessage<ReportModules>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ReportModules> _parser = new pb::MessageParser<ReportModules>(() => new ReportModules());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ReportModules> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportModules() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportModules(ReportModules other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportModules Clone() {
          return new ReportModules(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ReportModules);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ReportModules other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ReportModules other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class UpdateModule : pb::IMessage<UpdateModule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UpdateModule> _parser = new pb::MessageParser<UpdateModule>(() => new UpdateModule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateModule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.ConfigChange.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateModule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateModule(UpdateModule other) : this() {
          type_ = other.type_;
          model_ = other.model_;
          version_ = other.version_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateModule Clone() {
          return new UpdateModule(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Toit.Proto.Model.DeviceModuleType type_ = global::Toit.Proto.Model.DeviceModuleType.Unknown;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Toit.Proto.Model.DeviceModuleType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "model" field.</summary>
        public const int ModelFieldNumber = 2;
        private string model_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Model {
          get { return model_; }
          set {
            model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 3;
        private string version_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Version {
          get { return version_; }
          set {
            version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateModule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateModule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Model != other.Model) return false;
          if (Version != other.Version) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::Toit.Proto.Model.DeviceModuleType.Unknown) hash ^= Type.GetHashCode();
          if (Model.Length != 0) hash ^= Model.GetHashCode();
          if (Version.Length != 0) hash ^= Version.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != global::Toit.Proto.Model.DeviceModuleType.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (Model.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Model);
          }
          if (Version.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != global::Toit.Proto.Model.DeviceModuleType.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (Model.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Model);
          }
          if (Version.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::Toit.Proto.Model.DeviceModuleType.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (Model.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
          }
          if (Version.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateModule other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::Toit.Proto.Model.DeviceModuleType.Unknown) {
            Type = other.Type;
          }
          if (other.Model.Length != 0) {
            Model = other.Model;
          }
          if (other.Version.Length != 0) {
            Version = other.Version;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = (global::Toit.Proto.Model.DeviceModuleType) input.ReadEnum();
                break;
              }
              case 18: {
                Model = input.ReadString();
                break;
              }
              case 26: {
                Version = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = (global::Toit.Proto.Model.DeviceModuleType) input.ReadEnum();
                break;
              }
              case 18: {
                Model = input.ReadString();
                break;
              }
              case 26: {
                Version = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class ConfigureDeviceRequest : pb::IMessage<ConfigureDeviceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigureDeviceRequest> _parser = new pb::MessageParser<ConfigureDeviceRequest>(() => new ConfigureDeviceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigureDeviceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureDeviceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureDeviceRequest(ConfigureDeviceRequest other) : this() {
      deviceId_ = other.deviceId_;
      configChanges_ = other.configChanges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureDeviceRequest Clone() {
      return new ConfigureDeviceRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config_changes" field.</summary>
    public const int ConfigChangesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Toit.Proto.API.ConfigChange> _repeated_configChanges_codec
        = pb::FieldCodec.ForMessage(66, global::Toit.Proto.API.ConfigChange.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.API.ConfigChange> configChanges_ = new pbc::RepeatedField<global::Toit.Proto.API.ConfigChange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.API.ConfigChange> ConfigChanges {
      get { return configChanges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigureDeviceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigureDeviceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if(!configChanges_.Equals(other.configChanges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      hash ^= configChanges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      configChanges_.WriteTo(output, _repeated_configChanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      configChanges_.WriteTo(ref output, _repeated_configChanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      size += configChanges_.CalculateSize(_repeated_configChanges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigureDeviceRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      configChanges_.Add(other.configChanges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 66: {
            configChanges_.AddEntriesFrom(input, _repeated_configChanges_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 66: {
            configChanges_.AddEntriesFrom(ref input, _repeated_configChanges_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConfigureDeviceResponse : pb::IMessage<ConfigureDeviceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigureDeviceResponse> _parser = new pb::MessageParser<ConfigureDeviceResponse>(() => new ConfigureDeviceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigureDeviceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureDeviceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureDeviceResponse(ConfigureDeviceResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureDeviceResponse Clone() {
      return new ConfigureDeviceResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigureDeviceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigureDeviceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigureDeviceResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class ConnectionSettings : pb::IMessage<ConnectionSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectionSettings> _parser = new pb::MessageParser<ConnectionSettings>(() => new ConnectionSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectionSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionSettings(ConnectionSettings other) : this() {
      connections_ = other.connections_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionSettings Clone() {
      return new ConnectionSettings(this);
    }

    /// <summary>Field number for the "connections" field.</summary>
    public const int ConnectionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Toit.Proto.Model.ConnectionSetting> _repeated_connections_codec
        = pb::FieldCodec.ForMessage(10, global::Toit.Proto.Model.ConnectionSetting.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.Model.ConnectionSetting> connections_ = new pbc::RepeatedField<global::Toit.Proto.Model.ConnectionSetting>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.Model.ConnectionSetting> Connections {
      get { return connections_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectionSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectionSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!connections_.Equals(other.connections_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= connections_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      connections_.WriteTo(output, _repeated_connections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      connections_.WriteTo(ref output, _repeated_connections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += connections_.CalculateSize(_repeated_connections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectionSettings other) {
      if (other == null) {
        return;
      }
      connections_.Add(other.connections_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            connections_.AddEntriesFrom(input, _repeated_connections_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            connections_.AddEntriesFrom(ref input, _repeated_connections_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LookupDevicesRequest : pb::IMessage<LookupDevicesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LookupDevicesRequest> _parser = new pb::MessageParser<LookupDevicesRequest>(() => new LookupDevicesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LookupDevicesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LookupDevicesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LookupDevicesRequest(LookupDevicesRequest other) : this() {
      deviceName_ = other.deviceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LookupDevicesRequest Clone() {
      return new LookupDevicesRequest(this);
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 1;
    private string deviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LookupDevicesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LookupDevicesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceName != other.DeviceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LookupDevicesRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LookupDevicesResponse : pb::IMessage<LookupDevicesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LookupDevicesResponse> _parser = new pb::MessageParser<LookupDevicesResponse>(() => new LookupDevicesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LookupDevicesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LookupDevicesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LookupDevicesResponse(LookupDevicesResponse other) : this() {
      deviceIds_ = other.deviceIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LookupDevicesResponse Clone() {
      return new LookupDevicesResponse(this);
    }

    /// <summary>Field number for the "device_ids" field.</summary>
    public const int DeviceIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_deviceIds_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> deviceIds_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> DeviceIds {
      get { return deviceIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LookupDevicesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LookupDevicesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!deviceIds_.Equals(other.deviceIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= deviceIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      deviceIds_.WriteTo(output, _repeated_deviceIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      deviceIds_.WriteTo(ref output, _repeated_deviceIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += deviceIds_.CalculateSize(_repeated_deviceIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LookupDevicesResponse other) {
      if (other == null) {
        return;
      }
      deviceIds_.Add(other.deviceIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            deviceIds_.AddEntriesFrom(input, _repeated_deviceIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            deviceIds_.AddEntriesFrom(ref input, _repeated_deviceIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListDevicesRequest : pb::IMessage<ListDevicesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDevicesRequest> _parser = new pb::MessageParser<ListDevicesRequest>(() => new ListDevicesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDevicesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesRequest(ListDevicesRequest other) : this() {
      offset_ = other.offset_;
      limit_ = other.limit_;
      orderBy_ = other.orderBy_;
      orderDesc_ = other.orderDesc_;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesRequest Clone() {
      return new ListDevicesRequest(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private pb::ByteString offset_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Offset {
      get { return offset_; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 3;
    private string orderBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_desc" field.</summary>
    public const int OrderDescFieldNumber = 4;
    private bool orderDesc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OrderDesc {
      get { return orderDesc_; }
      set {
        orderDesc_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 5;
    private global::Toit.Proto.API.ListDevicesFilter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ListDevicesFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDevicesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDevicesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (OrderBy != other.OrderBy) return false;
      if (OrderDesc != other.OrderDesc) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset.Length != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (OrderDesc != false) hash ^= OrderDesc.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Offset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrderBy);
      }
      if (OrderDesc != false) {
        output.WriteRawTag(32);
        output.WriteBool(OrderDesc);
      }
      if (filter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Offset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrderBy);
      }
      if (OrderDesc != false) {
        output.WriteRawTag(32);
        output.WriteBool(OrderDesc);
      }
      if (filter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (OrderDesc != false) {
        size += 1 + 1;
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDevicesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Offset.Length != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.OrderDesc != false) {
        OrderDesc = other.OrderDesc;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Toit.Proto.API.ListDevicesFilter();
        }
        Filter.MergeFrom(other.Filter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Offset = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
          case 26: {
            OrderBy = input.ReadString();
            break;
          }
          case 32: {
            OrderDesc = input.ReadBool();
            break;
          }
          case 42: {
            if (filter_ == null) {
              Filter = new global::Toit.Proto.API.ListDevicesFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Offset = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
          case 26: {
            OrderBy = input.ReadString();
            break;
          }
          case 32: {
            OrderDesc = input.ReadBool();
            break;
          }
          case 42: {
            if (filter_ == null) {
              Filter = new global::Toit.Proto.API.ListDevicesFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListDevicesFilter : pb::IMessage<ListDevicesFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDevicesFilter> _parser = new pb::MessageParser<ListDevicesFilter>(() => new ListDevicesFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDevicesFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesFilter(ListDevicesFilter other) : this() {
      lastUpdated_ = other.lastUpdated_ != null ? other.lastUpdated_.Clone() : null;
      onlySimulators_ = other.onlySimulators_;
      namePrefix_ = other.namePrefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesFilter Clone() {
      return new ListDevicesFilter(this);
    }

    /// <summary>Field number for the "last_updated" field.</summary>
    public const int LastUpdatedFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration lastUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration LastUpdated {
      get { return lastUpdated_; }
      set {
        lastUpdated_ = value;
      }
    }

    /// <summary>Field number for the "only_simulators" field.</summary>
    public const int OnlySimulatorsFieldNumber = 2;
    private bool onlySimulators_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OnlySimulators {
      get { return onlySimulators_; }
      set {
        onlySimulators_ = value;
      }
    }

    /// <summary>Field number for the "name_prefix" field.</summary>
    public const int NamePrefixFieldNumber = 3;
    private string namePrefix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NamePrefix {
      get { return namePrefix_; }
      set {
        namePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDevicesFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDevicesFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LastUpdated, other.LastUpdated)) return false;
      if (OnlySimulators != other.OnlySimulators) return false;
      if (NamePrefix != other.NamePrefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lastUpdated_ != null) hash ^= LastUpdated.GetHashCode();
      if (OnlySimulators != false) hash ^= OnlySimulators.GetHashCode();
      if (NamePrefix.Length != 0) hash ^= NamePrefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (lastUpdated_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastUpdated);
      }
      if (OnlySimulators != false) {
        output.WriteRawTag(16);
        output.WriteBool(OnlySimulators);
      }
      if (NamePrefix.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NamePrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (lastUpdated_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastUpdated);
      }
      if (OnlySimulators != false) {
        output.WriteRawTag(16);
        output.WriteBool(OnlySimulators);
      }
      if (NamePrefix.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NamePrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lastUpdated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdated);
      }
      if (OnlySimulators != false) {
        size += 1 + 1;
      }
      if (NamePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NamePrefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDevicesFilter other) {
      if (other == null) {
        return;
      }
      if (other.lastUpdated_ != null) {
        if (lastUpdated_ == null) {
          LastUpdated = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        LastUpdated.MergeFrom(other.LastUpdated);
      }
      if (other.OnlySimulators != false) {
        OnlySimulators = other.OnlySimulators;
      }
      if (other.NamePrefix.Length != 0) {
        NamePrefix = other.NamePrefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lastUpdated_ == null) {
              LastUpdated = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(LastUpdated);
            break;
          }
          case 16: {
            OnlySimulators = input.ReadBool();
            break;
          }
          case 26: {
            NamePrefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (lastUpdated_ == null) {
              LastUpdated = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(LastUpdated);
            break;
          }
          case 16: {
            OnlySimulators = input.ReadBool();
            break;
          }
          case 26: {
            NamePrefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListDevicesResponse : pb::IMessage<ListDevicesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDevicesResponse> _parser = new pb::MessageParser<ListDevicesResponse>(() => new ListDevicesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDevicesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesResponse(ListDevicesResponse other) : this() {
      devices_ = other.devices_.Clone();
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesResponse Clone() {
      return new ListDevicesResponse(this);
    }

    /// <summary>Field number for the "devices" field.</summary>
    public const int DevicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Toit.Proto.API.Device> _repeated_devices_codec
        = pb::FieldCodec.ForMessage(10, global::Toit.Proto.API.Device.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.API.Device> devices_ = new pbc::RepeatedField<global::Toit.Proto.API.Device>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.API.Device> Devices {
      get { return devices_; }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private pb::ByteString offset_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Offset {
      get { return offset_; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDevicesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDevicesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!devices_.Equals(other.devices_)) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= devices_.GetHashCode();
      if (Offset.Length != 0) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      devices_.WriteTo(output, _repeated_devices_codec);
      if (Offset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      devices_.WriteTo(ref output, _repeated_devices_codec);
      if (Offset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += devices_.CalculateSize(_repeated_devices_codec);
      if (Offset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDevicesResponse other) {
      if (other == null) {
        return;
      }
      devices_.Add(other.devices_);
      if (other.Offset.Length != 0) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            devices_.AddEntriesFrom(input, _repeated_devices_codec);
            break;
          }
          case 18: {
            Offset = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            devices_.AddEntriesFrom(ref input, _repeated_devices_codec);
            break;
          }
          case 18: {
            Offset = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListJobsRequest : pb::IMessage<ListJobsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListJobsRequest> _parser = new pb::MessageParser<ListJobsRequest>(() => new ListJobsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListJobsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsRequest(ListJobsRequest other) : this() {
      offset_ = other.offset_;
      limit_ = other.limit_;
      orderBy_ = other.orderBy_;
      orderDesc_ = other.orderDesc_;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsRequest Clone() {
      return new ListJobsRequest(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private pb::ByteString offset_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Offset {
      get { return offset_; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 3;
    private string orderBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_desc" field.</summary>
    public const int OrderDescFieldNumber = 4;
    private bool orderDesc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OrderDesc {
      get { return orderDesc_; }
      set {
        orderDesc_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 5;
    private global::Toit.Proto.API.ListJobsFilter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.ListJobsFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListJobsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListJobsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (OrderBy != other.OrderBy) return false;
      if (OrderDesc != other.OrderDesc) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset.Length != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (OrderDesc != false) hash ^= OrderDesc.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Offset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrderBy);
      }
      if (OrderDesc != false) {
        output.WriteRawTag(32);
        output.WriteBool(OrderDesc);
      }
      if (filter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Offset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrderBy);
      }
      if (OrderDesc != false) {
        output.WriteRawTag(32);
        output.WriteBool(OrderDesc);
      }
      if (filter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (OrderDesc != false) {
        size += 1 + 1;
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListJobsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Offset.Length != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.OrderDesc != false) {
        OrderDesc = other.OrderDesc;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Toit.Proto.API.ListJobsFilter();
        }
        Filter.MergeFrom(other.Filter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Offset = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
          case 26: {
            OrderBy = input.ReadString();
            break;
          }
          case 32: {
            OrderDesc = input.ReadBool();
            break;
          }
          case 42: {
            if (filter_ == null) {
              Filter = new global::Toit.Proto.API.ListJobsFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Offset = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
          case 26: {
            OrderBy = input.ReadString();
            break;
          }
          case 32: {
            OrderDesc = input.ReadBool();
            break;
          }
          case 42: {
            if (filter_ == null) {
              Filter = new global::Toit.Proto.API.ListJobsFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListJobsFilter : pb::IMessage<ListJobsFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListJobsFilter> _parser = new pb::MessageParser<ListJobsFilter>(() => new ListJobsFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListJobsFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsFilter(ListJobsFilter other) : this() {
      deviceId_ = other.deviceId_;
      states_ = other.states_.Clone();
      goalstates_ = other.goalstates_.Clone();
      jobId_ = other.jobId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsFilter Clone() {
      return new ListJobsFilter(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Toit.Proto.Model.JobState> _repeated_states_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Toit.Proto.Model.JobState) x);
    private readonly pbc::RepeatedField<global::Toit.Proto.Model.JobState> states_ = new pbc::RepeatedField<global::Toit.Proto.Model.JobState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.Model.JobState> States {
      get { return states_; }
    }

    /// <summary>Field number for the "goalstates" field.</summary>
    public const int GoalstatesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Toit.Proto.Model.JobGoalState> _repeated_goalstates_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Toit.Proto.Model.JobGoalState) x);
    private readonly pbc::RepeatedField<global::Toit.Proto.Model.JobGoalState> goalstates_ = new pbc::RepeatedField<global::Toit.Proto.Model.JobGoalState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.Model.JobGoalState> Goalstates {
      get { return goalstates_; }
    }

    /// <summary>Field number for the "job_id" field.</summary>
    public const int JobIdFieldNumber = 4;
    private pb::ByteString jobId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListJobsFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListJobsFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if(!states_.Equals(other.states_)) return false;
      if(!goalstates_.Equals(other.goalstates_)) return false;
      if (JobId != other.JobId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      hash ^= states_.GetHashCode();
      hash ^= goalstates_.GetHashCode();
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      states_.WriteTo(output, _repeated_states_codec);
      goalstates_.WriteTo(output, _repeated_goalstates_codec);
      if (JobId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(JobId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      states_.WriteTo(ref output, _repeated_states_codec);
      goalstates_.WriteTo(ref output, _repeated_goalstates_codec);
      if (JobId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(JobId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      size += states_.CalculateSize(_repeated_states_codec);
      size += goalstates_.CalculateSize(_repeated_goalstates_codec);
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(JobId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListJobsFilter other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      states_.Add(other.states_);
      goalstates_.Add(other.goalstates_);
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18:
          case 16: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
          case 26:
          case 24: {
            goalstates_.AddEntriesFrom(input, _repeated_goalstates_codec);
            break;
          }
          case 34: {
            JobId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18:
          case 16: {
            states_.AddEntriesFrom(ref input, _repeated_states_codec);
            break;
          }
          case 26:
          case 24: {
            goalstates_.AddEntriesFrom(ref input, _repeated_goalstates_codec);
            break;
          }
          case 34: {
            JobId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListJobsResponse : pb::IMessage<ListJobsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListJobsResponse> _parser = new pb::MessageParser<ListJobsResponse>(() => new ListJobsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListJobsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsResponse(ListJobsResponse other) : this() {
      jobs_ = other.jobs_.Clone();
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsResponse Clone() {
      return new ListJobsResponse(this);
    }

    /// <summary>Field number for the "jobs" field.</summary>
    public const int JobsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Toit.Proto.API.Job> _repeated_jobs_codec
        = pb::FieldCodec.ForMessage(10, global::Toit.Proto.API.Job.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.API.Job> jobs_ = new pbc::RepeatedField<global::Toit.Proto.API.Job>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.API.Job> Jobs {
      get { return jobs_; }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private pb::ByteString offset_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Offset {
      get { return offset_; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListJobsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListJobsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!jobs_.Equals(other.jobs_)) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= jobs_.GetHashCode();
      if (Offset.Length != 0) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      jobs_.WriteTo(output, _repeated_jobs_codec);
      if (Offset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      jobs_.WriteTo(ref output, _repeated_jobs_codec);
      if (Offset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += jobs_.CalculateSize(_repeated_jobs_codec);
      if (Offset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListJobsResponse other) {
      if (other == null) {
        return;
      }
      jobs_.Add(other.jobs_);
      if (other.Offset.Length != 0) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            jobs_.AddEntriesFrom(input, _repeated_jobs_codec);
            break;
          }
          case 18: {
            Offset = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            jobs_.AddEntriesFrom(ref input, _repeated_jobs_codec);
            break;
          }
          case 18: {
            Offset = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InstallJobRequest : pb::IMessage<InstallJobRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstallJobRequest> _parser = new pb::MessageParser<InstallJobRequest>(() => new InstallJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstallJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallJobRequest(InstallJobRequest other) : this() {
      deviceId_ = other.deviceId_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallJobRequest Clone() {
      return new InstallJobRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Toit.Proto.Model.JobConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.JobConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstallJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstallJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstallJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Toit.Proto.Model.JobConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Toit.Proto.Model.JobConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Toit.Proto.Model.JobConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InstallJobResponse : pb::IMessage<InstallJobResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstallJobResponse> _parser = new pb::MessageParser<InstallJobResponse>(() => new InstallJobResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstallJobResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallJobResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallJobResponse(InstallJobResponse other) : this() {
      jobId_ = other.jobId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallJobResponse Clone() {
      return new InstallJobResponse(this);
    }

    /// <summary>Field number for the "job_id" field.</summary>
    public const int JobIdFieldNumber = 1;
    private pb::ByteString jobId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstallJobResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstallJobResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobId != other.JobId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JobId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(JobId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JobId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(JobId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(JobId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstallJobResponse other) {
      if (other == null) {
        return;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JobId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            JobId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConfigureJobRequest : pb::IMessage<ConfigureJobRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigureJobRequest> _parser = new pb::MessageParser<ConfigureJobRequest>(() => new ConfigureJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigureJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureJobRequest(ConfigureJobRequest other) : this() {
      deviceId_ = other.deviceId_;
      jobId_ = other.jobId_;
      goalState_ = other.goalState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureJobRequest Clone() {
      return new ConfigureJobRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "job_id" field.</summary>
    public const int JobIdFieldNumber = 2;
    private pb::ByteString jobId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "goal_state" field.</summary>
    public const int GoalStateFieldNumber = 3;
    private global::Toit.Proto.Model.JobGoalState goalState_ = global::Toit.Proto.Model.JobGoalState.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.JobGoalState GoalState {
      get { return goalState_; }
      set {
        goalState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigureJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigureJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (JobId != other.JobId) return false;
      if (GoalState != other.GoalState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (GoalState != global::Toit.Proto.Model.JobGoalState.Unknown) hash ^= GoalState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(JobId);
      }
      if (GoalState != global::Toit.Proto.Model.JobGoalState.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GoalState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(JobId);
      }
      if (GoalState != global::Toit.Proto.Model.JobGoalState.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GoalState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(JobId);
      }
      if (GoalState != global::Toit.Proto.Model.JobGoalState.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GoalState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigureJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.GoalState != global::Toit.Proto.Model.JobGoalState.Unknown) {
        GoalState = other.GoalState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            JobId = input.ReadBytes();
            break;
          }
          case 24: {
            GoalState = (global::Toit.Proto.Model.JobGoalState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            JobId = input.ReadBytes();
            break;
          }
          case 24: {
            GoalState = (global::Toit.Proto.Model.JobGoalState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConfigureJobResponse : pb::IMessage<ConfigureJobResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigureJobResponse> _parser = new pb::MessageParser<ConfigureJobResponse>(() => new ConfigureJobResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigureJobResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureJobResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureJobResponse(ConfigureJobResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureJobResponse Clone() {
      return new ConfigureJobResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigureJobResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigureJobResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigureJobResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class RebootDeviceRequest : pb::IMessage<RebootDeviceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RebootDeviceRequest> _parser = new pb::MessageParser<RebootDeviceRequest>(() => new RebootDeviceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RebootDeviceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RebootDeviceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RebootDeviceRequest(RebootDeviceRequest other) : this() {
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RebootDeviceRequest Clone() {
      return new RebootDeviceRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RebootDeviceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RebootDeviceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RebootDeviceRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RebootDeviceResponse : pb::IMessage<RebootDeviceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RebootDeviceResponse> _parser = new pb::MessageParser<RebootDeviceResponse>(() => new RebootDeviceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RebootDeviceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RebootDeviceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RebootDeviceResponse(RebootDeviceResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RebootDeviceResponse Clone() {
      return new RebootDeviceResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RebootDeviceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RebootDeviceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RebootDeviceResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class ReadDeviceLogsRequest : pb::IMessage<ReadDeviceLogsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadDeviceLogsRequest> _parser = new pb::MessageParser<ReadDeviceLogsRequest>(() => new ReadDeviceLogsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadDeviceLogsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceLogsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceLogsRequest(ReadDeviceLogsRequest other) : this() {
      deviceId_ = other.deviceId_;
      limit_ = other.limit_;
      reverse_ = other.reverse_;
      filterJobIds_ = other.filterJobIds_.Clone();
      switch (other.OffsetCase) {
        case OffsetOneofCase.Id:
          Id = other.Id;
          break;
        case OffsetOneofCase.Ts:
          Ts = other.Ts.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceLogsRequest Clone() {
      return new ReadDeviceLogsRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Id {
      get { return offsetCase_ == OffsetOneofCase.Id ? (pb::ByteString) offset_ : pb::ByteString.Empty; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        offsetCase_ = OffsetOneofCase.Id;
      }
    }

    /// <summary>Field number for the "ts" field.</summary>
    public const int TsFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Ts {
      get { return offsetCase_ == OffsetOneofCase.Ts ? (global::Google.Protobuf.WellKnownTypes.Timestamp) offset_ : null; }
      set {
        offset_ = value;
        offsetCase_ = value == null ? OffsetOneofCase.None : OffsetOneofCase.Ts;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private ulong limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "reverse" field.</summary>
    public const int ReverseFieldNumber = 5;
    private bool reverse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reverse {
      get { return reverse_; }
      set {
        reverse_ = value;
      }
    }

    /// <summary>Field number for the "filter_job_ids" field.</summary>
    public const int FilterJobIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_filterJobIds_codec
        = pb::FieldCodec.ForBytes(50);
    private readonly pbc::RepeatedField<pb::ByteString> filterJobIds_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> FilterJobIds {
      get { return filterJobIds_; }
    }

    private object offset_;
    /// <summary>Enum of possible cases for the "offset" oneof.</summary>
    public enum OffsetOneofCase {
      None = 0,
      Id = 2,
      Ts = 3,
    }
    private OffsetOneofCase offsetCase_ = OffsetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetOneofCase OffsetCase {
      get { return offsetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOffset() {
      offsetCase_ = OffsetOneofCase.None;
      offset_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadDeviceLogsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadDeviceLogsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(Ts, other.Ts)) return false;
      if (Limit != other.Limit) return false;
      if (Reverse != other.Reverse) return false;
      if(!filterJobIds_.Equals(other.filterJobIds_)) return false;
      if (OffsetCase != other.OffsetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (offsetCase_ == OffsetOneofCase.Id) hash ^= Id.GetHashCode();
      if (offsetCase_ == OffsetOneofCase.Ts) hash ^= Ts.GetHashCode();
      if (Limit != 0UL) hash ^= Limit.GetHashCode();
      if (Reverse != false) hash ^= Reverse.GetHashCode();
      hash ^= filterJobIds_.GetHashCode();
      hash ^= (int) offsetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (offsetCase_ == OffsetOneofCase.Id) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (offsetCase_ == OffsetOneofCase.Ts) {
        output.WriteRawTag(26);
        output.WriteMessage(Ts);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Limit);
      }
      if (Reverse != false) {
        output.WriteRawTag(40);
        output.WriteBool(Reverse);
      }
      filterJobIds_.WriteTo(output, _repeated_filterJobIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (offsetCase_ == OffsetOneofCase.Id) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (offsetCase_ == OffsetOneofCase.Ts) {
        output.WriteRawTag(26);
        output.WriteMessage(Ts);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Limit);
      }
      if (Reverse != false) {
        output.WriteRawTag(40);
        output.WriteBool(Reverse);
      }
      filterJobIds_.WriteTo(ref output, _repeated_filterJobIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (offsetCase_ == OffsetOneofCase.Id) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (offsetCase_ == OffsetOneofCase.Ts) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ts);
      }
      if (Limit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (Reverse != false) {
        size += 1 + 1;
      }
      size += filterJobIds_.CalculateSize(_repeated_filterJobIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadDeviceLogsRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.Limit != 0UL) {
        Limit = other.Limit;
      }
      if (other.Reverse != false) {
        Reverse = other.Reverse;
      }
      filterJobIds_.Add(other.filterJobIds_);
      switch (other.OffsetCase) {
        case OffsetOneofCase.Id:
          Id = other.Id;
          break;
        case OffsetOneofCase.Ts:
          if (Ts == null) {
            Ts = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          Ts.MergeFrom(other.Ts);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (offsetCase_ == OffsetOneofCase.Ts) {
              subBuilder.MergeFrom(Ts);
            }
            input.ReadMessage(subBuilder);
            Ts = subBuilder;
            break;
          }
          case 32: {
            Limit = input.ReadUInt64();
            break;
          }
          case 40: {
            Reverse = input.ReadBool();
            break;
          }
          case 50: {
            filterJobIds_.AddEntriesFrom(input, _repeated_filterJobIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (offsetCase_ == OffsetOneofCase.Ts) {
              subBuilder.MergeFrom(Ts);
            }
            input.ReadMessage(subBuilder);
            Ts = subBuilder;
            break;
          }
          case 32: {
            Limit = input.ReadUInt64();
            break;
          }
          case 40: {
            Reverse = input.ReadBool();
            break;
          }
          case 50: {
            filterJobIds_.AddEntriesFrom(ref input, _repeated_filterJobIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReadDeviceLogsResponse : pb::IMessage<ReadDeviceLogsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadDeviceLogsResponse> _parser = new pb::MessageParser<ReadDeviceLogsResponse>(() => new ReadDeviceLogsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadDeviceLogsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceLogsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceLogsResponse(ReadDeviceLogsResponse other) : this() {
      logs_ = other.logs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceLogsResponse Clone() {
      return new ReadDeviceLogsResponse(this);
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Toit.Proto.API.DeviceLog> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(10, global::Toit.Proto.API.DeviceLog.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.API.DeviceLog> logs_ = new pbc::RepeatedField<global::Toit.Proto.API.DeviceLog>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.API.DeviceLog> Logs {
      get { return logs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadDeviceLogsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadDeviceLogsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!logs_.Equals(other.logs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= logs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      logs_.WriteTo(output, _repeated_logs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      logs_.WriteTo(ref output, _repeated_logs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += logs_.CalculateSize(_repeated_logs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadDeviceLogsResponse other) {
      if (other == null) {
        return;
      }
      logs_.Add(other.logs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            logs_.AddEntriesFrom(ref input, _repeated_logs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReadDeviceEventsRequest : pb::IMessage<ReadDeviceEventsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadDeviceEventsRequest> _parser = new pb::MessageParser<ReadDeviceEventsRequest>(() => new ReadDeviceEventsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadDeviceEventsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceEventsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceEventsRequest(ReadDeviceEventsRequest other) : this() {
      deviceId_ = other.deviceId_;
      limit_ = other.limit_;
      reverse_ = other.reverse_;
      switch (other.OffsetCase) {
        case OffsetOneofCase.Id:
          Id = other.Id;
          break;
        case OffsetOneofCase.Ts:
          Ts = other.Ts.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceEventsRequest Clone() {
      return new ReadDeviceEventsRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Id {
      get { return offsetCase_ == OffsetOneofCase.Id ? (pb::ByteString) offset_ : pb::ByteString.Empty; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        offsetCase_ = OffsetOneofCase.Id;
      }
    }

    /// <summary>Field number for the "ts" field.</summary>
    public const int TsFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Ts {
      get { return offsetCase_ == OffsetOneofCase.Ts ? (global::Google.Protobuf.WellKnownTypes.Timestamp) offset_ : null; }
      set {
        offset_ = value;
        offsetCase_ = value == null ? OffsetOneofCase.None : OffsetOneofCase.Ts;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private ulong limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "reverse" field.</summary>
    public const int ReverseFieldNumber = 5;
    private bool reverse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reverse {
      get { return reverse_; }
      set {
        reverse_ = value;
      }
    }

    private object offset_;
    /// <summary>Enum of possible cases for the "offset" oneof.</summary>
    public enum OffsetOneofCase {
      None = 0,
      Id = 2,
      Ts = 3,
    }
    private OffsetOneofCase offsetCase_ = OffsetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetOneofCase OffsetCase {
      get { return offsetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOffset() {
      offsetCase_ = OffsetOneofCase.None;
      offset_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadDeviceEventsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadDeviceEventsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(Ts, other.Ts)) return false;
      if (Limit != other.Limit) return false;
      if (Reverse != other.Reverse) return false;
      if (OffsetCase != other.OffsetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (offsetCase_ == OffsetOneofCase.Id) hash ^= Id.GetHashCode();
      if (offsetCase_ == OffsetOneofCase.Ts) hash ^= Ts.GetHashCode();
      if (Limit != 0UL) hash ^= Limit.GetHashCode();
      if (Reverse != false) hash ^= Reverse.GetHashCode();
      hash ^= (int) offsetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (offsetCase_ == OffsetOneofCase.Id) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (offsetCase_ == OffsetOneofCase.Ts) {
        output.WriteRawTag(26);
        output.WriteMessage(Ts);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Limit);
      }
      if (Reverse != false) {
        output.WriteRawTag(40);
        output.WriteBool(Reverse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (offsetCase_ == OffsetOneofCase.Id) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (offsetCase_ == OffsetOneofCase.Ts) {
        output.WriteRawTag(26);
        output.WriteMessage(Ts);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Limit);
      }
      if (Reverse != false) {
        output.WriteRawTag(40);
        output.WriteBool(Reverse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (offsetCase_ == OffsetOneofCase.Id) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (offsetCase_ == OffsetOneofCase.Ts) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ts);
      }
      if (Limit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (Reverse != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadDeviceEventsRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.Limit != 0UL) {
        Limit = other.Limit;
      }
      if (other.Reverse != false) {
        Reverse = other.Reverse;
      }
      switch (other.OffsetCase) {
        case OffsetOneofCase.Id:
          Id = other.Id;
          break;
        case OffsetOneofCase.Ts:
          if (Ts == null) {
            Ts = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          Ts.MergeFrom(other.Ts);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (offsetCase_ == OffsetOneofCase.Ts) {
              subBuilder.MergeFrom(Ts);
            }
            input.ReadMessage(subBuilder);
            Ts = subBuilder;
            break;
          }
          case 32: {
            Limit = input.ReadUInt64();
            break;
          }
          case 40: {
            Reverse = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (offsetCase_ == OffsetOneofCase.Ts) {
              subBuilder.MergeFrom(Ts);
            }
            input.ReadMessage(subBuilder);
            Ts = subBuilder;
            break;
          }
          case 32: {
            Limit = input.ReadUInt64();
            break;
          }
          case 40: {
            Reverse = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReadDeviceEventsResponse : pb::IMessage<ReadDeviceEventsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadDeviceEventsResponse> _parser = new pb::MessageParser<ReadDeviceEventsResponse>(() => new ReadDeviceEventsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadDeviceEventsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceEventsResponse(ReadDeviceEventsResponse other) : this() {
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDeviceEventsResponse Clone() {
      return new ReadDeviceEventsResponse(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Toit.Proto.Model.DeviceEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::Toit.Proto.Model.DeviceEvent.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.Model.DeviceEvent> events_ = new pbc::RepeatedField<global::Toit.Proto.Model.DeviceEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.Model.DeviceEvent> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadDeviceEventsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadDeviceEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      events_.WriteTo(ref output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadDeviceEventsResponse other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetDevicePartitionsRequest : pb::IMessage<GetDevicePartitionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDevicePartitionsRequest> _parser = new pb::MessageParser<GetDevicePartitionsRequest>(() => new GetDevicePartitionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDevicePartitionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDevicePartitionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDevicePartitionsRequest(GetDevicePartitionsRequest other) : this() {
      sdkName_ = other.sdkName_;
      mode_ = other.mode_;
      properties_ = other.properties_.Clone();
      hardwareIdentity_ = other.hardwareIdentity_ != null ? other.hardwareIdentity_.Clone() : null;
      model_ = other.model_;
      qrcode_ = other.qrcode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDevicePartitionsRequest Clone() {
      return new GetDevicePartitionsRequest(this);
    }

    /// <summary>Field number for the "sdk_name" field.</summary>
    public const int SdkNameFieldNumber = 1;
    private string sdkName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SdkName {
      get { return sdkName_; }
      set {
        sdkName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode mode_ = global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "hardware_identity" field.</summary>
    public const int HardwareIdentityFieldNumber = 4;
    private global::Toit.Proto.Model.HardwareIdentity hardwareIdentity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.HardwareIdentity HardwareIdentity {
      get { return hardwareIdentity_; }
      set {
        hardwareIdentity_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 5;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qrcode" field.</summary>
    public const int QrcodeFieldNumber = 6;
    private pb::ByteString qrcode_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Qrcode {
      get { return qrcode_; }
      set {
        qrcode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDevicePartitionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDevicePartitionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SdkName != other.SdkName) return false;
      if (Mode != other.Mode) return false;
      if (!Properties.Equals(other.Properties)) return false;
      if (!object.Equals(HardwareIdentity, other.HardwareIdentity)) return false;
      if (Model != other.Model) return false;
      if (Qrcode != other.Qrcode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SdkName.Length != 0) hash ^= SdkName.GetHashCode();
      if (Mode != global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode.Unknown) hash ^= Mode.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (hardwareIdentity_ != null) hash ^= HardwareIdentity.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (Qrcode.Length != 0) hash ^= Qrcode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SdkName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SdkName);
      }
      if (Mode != global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Mode);
      }
      properties_.WriteTo(output, _map_properties_codec);
      if (hardwareIdentity_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HardwareIdentity);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Model);
      }
      if (Qrcode.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Qrcode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SdkName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SdkName);
      }
      if (Mode != global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Mode);
      }
      properties_.WriteTo(ref output, _map_properties_codec);
      if (hardwareIdentity_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HardwareIdentity);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Model);
      }
      if (Qrcode.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Qrcode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SdkName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SdkName);
      }
      if (Mode != global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      if (hardwareIdentity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HardwareIdentity);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (Qrcode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Qrcode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDevicePartitionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.SdkName.Length != 0) {
        SdkName = other.SdkName;
      }
      if (other.Mode != global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode.Unknown) {
        Mode = other.Mode;
      }
      properties_.Add(other.properties_);
      if (other.hardwareIdentity_ != null) {
        if (hardwareIdentity_ == null) {
          HardwareIdentity = new global::Toit.Proto.Model.HardwareIdentity();
        }
        HardwareIdentity.MergeFrom(other.HardwareIdentity);
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.Qrcode.Length != 0) {
        Qrcode = other.Qrcode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SdkName = input.ReadString();
            break;
          }
          case 16: {
            Mode = (global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode) input.ReadEnum();
            break;
          }
          case 26: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
          case 34: {
            if (hardwareIdentity_ == null) {
              HardwareIdentity = new global::Toit.Proto.Model.HardwareIdentity();
            }
            input.ReadMessage(HardwareIdentity);
            break;
          }
          case 42: {
            Model = input.ReadString();
            break;
          }
          case 50: {
            Qrcode = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SdkName = input.ReadString();
            break;
          }
          case 16: {
            Mode = (global::Toit.Proto.API.GetDevicePartitionsRequest.Types.Mode) input.ReadEnum();
            break;
          }
          case 26: {
            properties_.AddEntriesFrom(ref input, _map_properties_codec);
            break;
          }
          case 34: {
            if (hardwareIdentity_ == null) {
              HardwareIdentity = new global::Toit.Proto.Model.HardwareIdentity();
            }
            input.ReadMessage(HardwareIdentity);
            break;
          }
          case 42: {
            Model = input.ReadString();
            break;
          }
          case 50: {
            Qrcode = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetDevicePartitionsRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Mode {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("SYSTEM")] System = 2,
        [pbr::OriginalName("INITIAL")] Initial = 3,
        [pbr::OriginalName("REPARTITION")] Repartition = 4,
      }

    }
    #endregion

  }

  public sealed partial class GetDevicePartitionsResponse : pb::IMessage<GetDevicePartitionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDevicePartitionsResponse> _parser = new pb::MessageParser<GetDevicePartitionsResponse>(() => new GetDevicePartitionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDevicePartitionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDevicePartitionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDevicePartitionsResponse(GetDevicePartitionsResponse other) : this() {
      partitions_ = other.partitions_.Clone();
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDevicePartitionsResponse Clone() {
      return new GetDevicePartitionsResponse(this);
    }

    /// <summary>Field number for the "partitions" field.</summary>
    public const int PartitionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Toit.Proto.API.GetDevicePartitionsResponse.Types.Partition> _repeated_partitions_codec
        = pb::FieldCodec.ForMessage(10, global::Toit.Proto.API.GetDevicePartitionsResponse.Types.Partition.Parser);
    private readonly pbc::RepeatedField<global::Toit.Proto.API.GetDevicePartitionsResponse.Types.Partition> partitions_ = new pbc::RepeatedField<global::Toit.Proto.API.GetDevicePartitionsResponse.Types.Partition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Toit.Proto.API.GetDevicePartitionsResponse.Types.Partition> Partitions {
      get { return partitions_; }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDevicePartitionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDevicePartitionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!partitions_.Equals(other.partitions_)) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= partitions_.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      partitions_.WriteTo(output, _repeated_partitions_codec);
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      partitions_.WriteTo(ref output, _repeated_partitions_codec);
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += partitions_.CalculateSize(_repeated_partitions_codec);
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDevicePartitionsResponse other) {
      if (other == null) {
        return;
      }
      partitions_.Add(other.partitions_);
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            partitions_.AddEntriesFrom(input, _repeated_partitions_codec);
            break;
          }
          case 18: {
            DeviceId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            partitions_.AddEntriesFrom(ref input, _repeated_partitions_codec);
            break;
          }
          case 18: {
            DeviceId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetDevicePartitionsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Partition : pb::IMessage<Partition>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Partition> _parser = new pb::MessageParser<Partition>(() => new Partition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Partition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Toit.Proto.API.GetDevicePartitionsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Partition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Partition(Partition other) : this() {
          name_ = other.name_;
          offset_ = other.offset_;
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Partition Clone() {
          return new Partition(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "offset" field.</summary>
        public const int OffsetFieldNumber = 2;
        private long offset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Offset {
          get { return offset_; }
          set {
            offset_ = value;
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 3;
        private pb::ByteString data_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Partition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Partition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Offset != other.Offset) return false;
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Offset != 0L) hash ^= Offset.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Offset != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Offset);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Offset != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Offset);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Offset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Partition other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Offset != 0L) {
            Offset = other.Offset;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Offset = input.ReadInt64();
                break;
              }
              case 26: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Offset = input.ReadInt64();
                break;
              }
              case 26: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class WatchDeviceChangesRequest : pb::IMessage<WatchDeviceChangesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WatchDeviceChangesRequest> _parser = new pb::MessageParser<WatchDeviceChangesRequest>(() => new WatchDeviceChangesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchDeviceChangesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchDeviceChangesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchDeviceChangesRequest(WatchDeviceChangesRequest other) : this() {
      deviceId_ = other.deviceId_;
      watchRevision_ = other.watchRevision_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchDeviceChangesRequest Clone() {
      return new WatchDeviceChangesRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    /// <summary>
    /// Optional to listen on changes for a single device.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "watch_revision" field.</summary>
    public const int WatchRevisionFieldNumber = 2;
    private long watchRevision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WatchRevision {
      get { return watchRevision_; }
      set {
        watchRevision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchDeviceChangesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchDeviceChangesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (WatchRevision != other.WatchRevision) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (WatchRevision != 0L) hash ^= WatchRevision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(WatchRevision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(WatchRevision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (WatchRevision != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WatchRevision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchDeviceChangesRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.WatchRevision != 0L) {
        WatchRevision = other.WatchRevision;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 16: {
            WatchRevision = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 16: {
            WatchRevision = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WatchDeviceChangesResponse : pb::IMessage<WatchDeviceChangesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WatchDeviceChangesResponse> _parser = new pb::MessageParser<WatchDeviceChangesResponse>(() => new WatchDeviceChangesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchDeviceChangesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchDeviceChangesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchDeviceChangesResponse(WatchDeviceChangesResponse other) : this() {
      type_ = other.type_;
      deviceId_ = other.deviceId_;
      watchRevision_ = other.watchRevision_;
      lastConnected_ = other.lastConnected_ != null ? other.lastConnected_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchDeviceChangesResponse Clone() {
      return new WatchDeviceChangesResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Toit.Proto.Model.DeviceChangeType type_ = global::Toit.Proto.Model.DeviceChangeType.DeviceChangeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceChangeType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "watch_revision" field.</summary>
    public const int WatchRevisionFieldNumber = 3;
    private long watchRevision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WatchRevision {
      get { return watchRevision_; }
      set {
        watchRevision_ = value;
      }
    }

    /// <summary>Field number for the "last_connected" field.</summary>
    public const int LastConnectedFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastConnected_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastConnected {
      get { return lastConnected_; }
      set {
        lastConnected_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchDeviceChangesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchDeviceChangesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (DeviceId != other.DeviceId) return false;
      if (WatchRevision != other.WatchRevision) return false;
      if (!object.Equals(LastConnected, other.LastConnected)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Toit.Proto.Model.DeviceChangeType.DeviceChangeUnknown) hash ^= Type.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (WatchRevision != 0L) hash ^= WatchRevision.GetHashCode();
      if (lastConnected_ != null) hash ^= LastConnected.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Toit.Proto.Model.DeviceChangeType.DeviceChangeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DeviceId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WatchRevision);
      }
      if (lastConnected_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastConnected);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Toit.Proto.Model.DeviceChangeType.DeviceChangeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DeviceId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WatchRevision);
      }
      if (lastConnected_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastConnected);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Toit.Proto.Model.DeviceChangeType.DeviceChangeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (WatchRevision != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WatchRevision);
      }
      if (lastConnected_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastConnected);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchDeviceChangesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Toit.Proto.Model.DeviceChangeType.DeviceChangeUnknown) {
        Type = other.Type;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.WatchRevision != 0L) {
        WatchRevision = other.WatchRevision;
      }
      if (other.lastConnected_ != null) {
        if (lastConnected_ == null) {
          LastConnected = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastConnected.MergeFrom(other.LastConnected);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Toit.Proto.Model.DeviceChangeType) input.ReadEnum();
            break;
          }
          case 18: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 24: {
            WatchRevision = input.ReadInt64();
            break;
          }
          case 34: {
            if (lastConnected_ == null) {
              LastConnected = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastConnected);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Toit.Proto.Model.DeviceChangeType) input.ReadEnum();
            break;
          }
          case 18: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 24: {
            WatchRevision = input.ReadInt64();
            break;
          }
          case 34: {
            if (lastConnected_ == null) {
              LastConnected = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastConnected);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WatchJobChangesRequest : pb::IMessage<WatchJobChangesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WatchJobChangesRequest> _parser = new pb::MessageParser<WatchJobChangesRequest>(() => new WatchJobChangesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchJobChangesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchJobChangesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchJobChangesRequest(WatchJobChangesRequest other) : this() {
      deviceId_ = other.deviceId_;
      jobId_ = other.jobId_;
      watchRevision_ = other.watchRevision_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchJobChangesRequest Clone() {
      return new WatchJobChangesRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    /// <summary>
    /// Optional to listen on changes for a single device.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "job_id" field.</summary>
    public const int JobIdFieldNumber = 2;
    private pb::ByteString jobId_ = pb::ByteString.Empty;
    /// <summary>
    /// Optional to listen on changes for a single job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "watch_revision" field.</summary>
    public const int WatchRevisionFieldNumber = 3;
    private long watchRevision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WatchRevision {
      get { return watchRevision_; }
      set {
        watchRevision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchJobChangesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchJobChangesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (JobId != other.JobId) return false;
      if (WatchRevision != other.WatchRevision) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (WatchRevision != 0L) hash ^= WatchRevision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(JobId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WatchRevision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(JobId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WatchRevision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(JobId);
      }
      if (WatchRevision != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WatchRevision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchJobChangesRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.WatchRevision != 0L) {
        WatchRevision = other.WatchRevision;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            JobId = input.ReadBytes();
            break;
          }
          case 24: {
            WatchRevision = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 18: {
            JobId = input.ReadBytes();
            break;
          }
          case 24: {
            WatchRevision = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WatchJobChangesResponse : pb::IMessage<WatchJobChangesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WatchJobChangesResponse> _parser = new pb::MessageParser<WatchJobChangesResponse>(() => new WatchJobChangesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchJobChangesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchJobChangesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchJobChangesResponse(WatchJobChangesResponse other) : this() {
      type_ = other.type_;
      jobId_ = other.jobId_;
      watchRevision_ = other.watchRevision_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchJobChangesResponse Clone() {
      return new WatchJobChangesResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Toit.Proto.Model.JobChangeType type_ = global::Toit.Proto.Model.JobChangeType.JobChangeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.JobChangeType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "job_id" field.</summary>
    public const int JobIdFieldNumber = 2;
    private pb::ByteString jobId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "watch_revision" field.</summary>
    public const int WatchRevisionFieldNumber = 3;
    private long watchRevision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WatchRevision {
      get { return watchRevision_; }
      set {
        watchRevision_ = value;
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 4;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchJobChangesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchJobChangesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (JobId != other.JobId) return false;
      if (WatchRevision != other.WatchRevision) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Toit.Proto.Model.JobChangeType.JobChangeUnknown) hash ^= Type.GetHashCode();
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (WatchRevision != 0L) hash ^= WatchRevision.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Toit.Proto.Model.JobChangeType.JobChangeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(JobId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WatchRevision);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Toit.Proto.Model.JobChangeType.JobChangeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(JobId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WatchRevision);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Toit.Proto.Model.JobChangeType.JobChangeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(JobId);
      }
      if (WatchRevision != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WatchRevision);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchJobChangesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Toit.Proto.Model.JobChangeType.JobChangeUnknown) {
        Type = other.Type;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.WatchRevision != 0L) {
        WatchRevision = other.WatchRevision;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Toit.Proto.Model.JobChangeType) input.ReadEnum();
            break;
          }
          case 18: {
            JobId = input.ReadBytes();
            break;
          }
          case 24: {
            WatchRevision = input.ReadInt64();
            break;
          }
          case 34: {
            DeviceId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Toit.Proto.Model.JobChangeType) input.ReadEnum();
            break;
          }
          case 18: {
            JobId = input.ReadBytes();
            break;
          }
          case 24: {
            WatchRevision = input.ReadInt64();
            break;
          }
          case 34: {
            DeviceId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WatchSessionChangesRequest : pb::IMessage<WatchSessionChangesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WatchSessionChangesRequest> _parser = new pb::MessageParser<WatchSessionChangesRequest>(() => new WatchSessionChangesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchSessionChangesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchSessionChangesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchSessionChangesRequest(WatchSessionChangesRequest other) : this() {
      deviceId_ = other.deviceId_;
      watchRevision_ = other.watchRevision_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchSessionChangesRequest Clone() {
      return new WatchSessionChangesRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    /// <summary>
    /// Optional to listen on session changes for a single device.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "watch_revision" field.</summary>
    public const int WatchRevisionFieldNumber = 2;
    private long watchRevision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WatchRevision {
      get { return watchRevision_; }
      set {
        watchRevision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchSessionChangesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchSessionChangesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (WatchRevision != other.WatchRevision) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (WatchRevision != 0L) hash ^= WatchRevision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(WatchRevision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(WatchRevision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (WatchRevision != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WatchRevision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchSessionChangesRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.WatchRevision != 0L) {
        WatchRevision = other.WatchRevision;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 16: {
            WatchRevision = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 16: {
            WatchRevision = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WatchSessionChangesResponse : pb::IMessage<WatchSessionChangesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WatchSessionChangesResponse> _parser = new pb::MessageParser<WatchSessionChangesResponse>(() => new WatchSessionChangesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchSessionChangesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchSessionChangesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchSessionChangesResponse(WatchSessionChangesResponse other) : this() {
      type_ = other.type_;
      deviceId_ = other.deviceId_;
      watchRevision_ = other.watchRevision_;
      lastConnected_ = other.lastConnected_ != null ? other.lastConnected_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchSessionChangesResponse Clone() {
      return new WatchSessionChangesResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Toit.Proto.Model.DeviceSessionChangeType type_ = global::Toit.Proto.Model.DeviceSessionChangeType.UnknownType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Toit.Proto.Model.DeviceSessionChangeType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "watch_revision" field.</summary>
    public const int WatchRevisionFieldNumber = 3;
    private long watchRevision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WatchRevision {
      get { return watchRevision_; }
      set {
        watchRevision_ = value;
      }
    }

    /// <summary>Field number for the "last_connected" field.</summary>
    public const int LastConnectedFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastConnected_;
    /// <summary>
    /// Will be set if the type is DeviceSessionChangeTypeConnected
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastConnected {
      get { return lastConnected_; }
      set {
        lastConnected_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchSessionChangesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchSessionChangesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (DeviceId != other.DeviceId) return false;
      if (WatchRevision != other.WatchRevision) return false;
      if (!object.Equals(LastConnected, other.LastConnected)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Toit.Proto.Model.DeviceSessionChangeType.UnknownType) hash ^= Type.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (WatchRevision != 0L) hash ^= WatchRevision.GetHashCode();
      if (lastConnected_ != null) hash ^= LastConnected.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Toit.Proto.Model.DeviceSessionChangeType.UnknownType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DeviceId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WatchRevision);
      }
      if (lastConnected_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastConnected);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Toit.Proto.Model.DeviceSessionChangeType.UnknownType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DeviceId);
      }
      if (WatchRevision != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WatchRevision);
      }
      if (lastConnected_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastConnected);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Toit.Proto.Model.DeviceSessionChangeType.UnknownType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (WatchRevision != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WatchRevision);
      }
      if (lastConnected_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastConnected);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchSessionChangesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Toit.Proto.Model.DeviceSessionChangeType.UnknownType) {
        Type = other.Type;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.WatchRevision != 0L) {
        WatchRevision = other.WatchRevision;
      }
      if (other.lastConnected_ != null) {
        if (lastConnected_ == null) {
          LastConnected = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastConnected.MergeFrom(other.LastConnected);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Toit.Proto.Model.DeviceSessionChangeType) input.ReadEnum();
            break;
          }
          case 18: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 24: {
            WatchRevision = input.ReadInt64();
            break;
          }
          case 34: {
            if (lastConnected_ == null) {
              LastConnected = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastConnected);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Toit.Proto.Model.DeviceSessionChangeType) input.ReadEnum();
            break;
          }
          case 18: {
            DeviceId = input.ReadBytes();
            break;
          }
          case 24: {
            WatchRevision = input.ReadInt64();
            break;
          }
          case 34: {
            if (lastConnected_ == null) {
              LastConnected = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastConnected);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetCurrentTimeRequest : pb::IMessage<GetCurrentTimeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCurrentTimeRequest> _parser = new pb::MessageParser<GetCurrentTimeRequest>(() => new GetCurrentTimeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCurrentTimeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentTimeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentTimeRequest(GetCurrentTimeRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentTimeRequest Clone() {
      return new GetCurrentTimeRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCurrentTimeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCurrentTimeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCurrentTimeRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class GetCurrentTimeResponse : pb::IMessage<GetCurrentTimeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCurrentTimeResponse> _parser = new pb::MessageParser<GetCurrentTimeResponse>(() => new GetCurrentTimeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCurrentTimeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentTimeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentTimeResponse(GetCurrentTimeResponse other) : this() {
      currentTime_ = other.currentTime_ != null ? other.currentTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentTimeResponse Clone() {
      return new GetCurrentTimeResponse(this);
    }

    /// <summary>Field number for the "current_time" field.</summary>
    public const int CurrentTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp currentTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CurrentTime {
      get { return currentTime_; }
      set {
        currentTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCurrentTimeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCurrentTimeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentTime, other.CurrentTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentTime_ != null) hash ^= CurrentTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (currentTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (currentTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCurrentTimeResponse other) {
      if (other == null) {
        return;
      }
      if (other.currentTime_ != null) {
        if (currentTime_ == null) {
          CurrentTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CurrentTime.MergeFrom(other.CurrentTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentTime_ == null) {
              CurrentTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (currentTime_ == null) {
              CurrentTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentTime);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnclaimDeviceRequest : pb::IMessage<UnclaimDeviceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnclaimDeviceRequest> _parser = new pb::MessageParser<UnclaimDeviceRequest>(() => new UnclaimDeviceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnclaimDeviceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnclaimDeviceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnclaimDeviceRequest(UnclaimDeviceRequest other) : this() {
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnclaimDeviceRequest Clone() {
      return new UnclaimDeviceRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private pb::ByteString deviceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnclaimDeviceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnclaimDeviceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnclaimDeviceRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnclaimDeviceResponse : pb::IMessage<UnclaimDeviceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnclaimDeviceResponse> _parser = new pb::MessageParser<UnclaimDeviceResponse>(() => new UnclaimDeviceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnclaimDeviceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Toit.Proto.API.DeviceReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnclaimDeviceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnclaimDeviceResponse(UnclaimDeviceResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnclaimDeviceResponse Clone() {
      return new UnclaimDeviceResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnclaimDeviceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnclaimDeviceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnclaimDeviceResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
