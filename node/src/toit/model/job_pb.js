// source: toit/model/job.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var toit_model_pubsub_topic_pb = require('../../toit/model/pubsub/topic_pb.js');
goog.object.extend(proto, toit_model_pubsub_topic_pb);
goog.exportSymbol('proto.toit.model.ButtonTrigger', null, global);
goog.exportSymbol('proto.toit.model.CompilationInfo', null, global);
goog.exportSymbol('proto.toit.model.CronSchedule', null, global);
goog.exportSymbol('proto.toit.model.CronSpec', null, global);
goog.exportSymbol('proto.toit.model.CronTrigger', null, global);
goog.exportSymbol('proto.toit.model.GPIOTrigger', null, global);
goog.exportSymbol('proto.toit.model.GPIOTrigger.Pin', null, global);
goog.exportSymbol('proto.toit.model.GPIOTrigger.Pin.Level', null, global);
goog.exportSymbol('proto.toit.model.GPSFeature', null, global);
goog.exportSymbol('proto.toit.model.IntervalTrigger', null, global);
goog.exportSymbol('proto.toit.model.JobChangeType', null, global);
goog.exportSymbol('proto.toit.model.JobConfig', null, global);
goog.exportSymbol('proto.toit.model.JobFeatures', null, global);
goog.exportSymbol('proto.toit.model.JobFile', null, global);
goog.exportSymbol('proto.toit.model.JobFileType', null, global);
goog.exportSymbol('proto.toit.model.JobGoalState', null, global);
goog.exportSymbol('proto.toit.model.JobInfo', null, global);
goog.exportSymbol('proto.toit.model.JobPubSub', null, global);
goog.exportSymbol('proto.toit.model.JobPubSub.Subscription', null, global);
goog.exportSymbol('proto.toit.model.JobResources', null, global);
goog.exportSymbol('proto.toit.model.JobState', null, global);
goog.exportSymbol('proto.toit.model.JobStatus', null, global);
goog.exportSymbol('proto.toit.model.JobTriggers', null, global);
goog.exportSymbol('proto.toit.model.MemoryResource', null, global);
goog.exportSymbol('proto.toit.model.MovementTrigger', null, global);
goog.exportSymbol('proto.toit.model.NetworkTrigger', null, global);
goog.exportSymbol('proto.toit.model.OnBootTrigger', null, global);
goog.exportSymbol('proto.toit.model.OnInstallTrigger', null, global);
goog.exportSymbol('proto.toit.model.PubSubTrigger', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.JobConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.toit.model.JobConfig.repeatedFields_, null);
};
goog.inherits(proto.toit.model.JobConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.JobConfig.displayName = 'proto.toit.model.JobConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.CompilationInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.CompilationInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.CompilationInfo.displayName = 'proto.toit.model.CompilationInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.JobResources = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.JobResources, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.JobResources.displayName = 'proto.toit.model.JobResources';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.JobFeatures = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.JobFeatures, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.JobFeatures.displayName = 'proto.toit.model.JobFeatures';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.JobFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.JobFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.JobFile.displayName = 'proto.toit.model.JobFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.GPSFeature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.GPSFeature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.GPSFeature.displayName = 'proto.toit.model.GPSFeature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.MemoryResource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.MemoryResource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.MemoryResource.displayName = 'proto.toit.model.MemoryResource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.JobTriggers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.JobTriggers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.JobTriggers.displayName = 'proto.toit.model.JobTriggers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.GPIOTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.toit.model.GPIOTrigger.repeatedFields_, null);
};
goog.inherits(proto.toit.model.GPIOTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.GPIOTrigger.displayName = 'proto.toit.model.GPIOTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.GPIOTrigger.Pin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.GPIOTrigger.Pin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.GPIOTrigger.Pin.displayName = 'proto.toit.model.GPIOTrigger.Pin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.OnInstallTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.OnInstallTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.OnInstallTrigger.displayName = 'proto.toit.model.OnInstallTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.OnBootTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.OnBootTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.OnBootTrigger.displayName = 'proto.toit.model.OnBootTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.IntervalTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.IntervalTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.IntervalTrigger.displayName = 'proto.toit.model.IntervalTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.CronTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.toit.model.CronTrigger.repeatedFields_, null);
};
goog.inherits(proto.toit.model.CronTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.CronTrigger.displayName = 'proto.toit.model.CronTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.MovementTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.MovementTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.MovementTrigger.displayName = 'proto.toit.model.MovementTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.ButtonTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.toit.model.ButtonTrigger.repeatedFields_, null);
};
goog.inherits(proto.toit.model.ButtonTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.ButtonTrigger.displayName = 'proto.toit.model.ButtonTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.NetworkTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.NetworkTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.NetworkTrigger.displayName = 'proto.toit.model.NetworkTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.PubSubTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.toit.model.PubSubTrigger.repeatedFields_, null);
};
goog.inherits(proto.toit.model.PubSubTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.PubSubTrigger.displayName = 'proto.toit.model.PubSubTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.CronSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.toit.model.CronSpec.repeatedFields_, null);
};
goog.inherits(proto.toit.model.CronSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.CronSpec.displayName = 'proto.toit.model.CronSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.CronSchedule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.CronSchedule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.CronSchedule.displayName = 'proto.toit.model.CronSchedule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.JobPubSub = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.toit.model.JobPubSub.repeatedFields_, null);
};
goog.inherits(proto.toit.model.JobPubSub, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.JobPubSub.displayName = 'proto.toit.model.JobPubSub';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.JobPubSub.Subscription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.JobPubSub.Subscription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.JobPubSub.Subscription.displayName = 'proto.toit.model.JobPubSub.Subscription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.JobStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.JobStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.JobStatus.displayName = 'proto.toit.model.JobStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.toit.model.JobInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.toit.model.JobInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.toit.model.JobInfo.displayName = 'proto.toit.model.JobInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.toit.model.JobConfig.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.JobConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.JobConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.JobConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobId: msg.getJobId_asB64(),
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    compilationId: msg.getCompilationId_asB64(),
    goalState: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resources: (f = msg.getResources()) && proto.toit.model.JobResources.toObject(includeInstance, f),
    triggers: (f = msg.getTriggers()) && proto.toit.model.JobTriggers.toObject(includeInstance, f),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    compilationInfo: (f = msg.getCompilationInfo()) && proto.toit.model.CompilationInfo.toObject(includeInstance, f),
    pubsub: (f = msg.getPubsub()) && proto.toit.model.JobPubSub.toObject(includeInstance, f),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    proto.toit.model.JobFile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.JobConfig}
 */
proto.toit.model.JobConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.JobConfig;
  return proto.toit.model.JobConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.JobConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.JobConfig}
 */
proto.toit.model.JobConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setJobId(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCompilationId(value);
      break;
    case 3:
      var value = /** @type {!proto.toit.model.JobGoalState} */ (reader.readEnum());
      msg.setGoalState(value);
      break;
    case 4:
      var value = new proto.toit.model.JobResources;
      reader.readMessage(value,proto.toit.model.JobResources.deserializeBinaryFromReader);
      msg.setResources(value);
      break;
    case 5:
      var value = new proto.toit.model.JobTriggers;
      reader.readMessage(value,proto.toit.model.JobTriggers.deserializeBinaryFromReader);
      msg.setTriggers(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    case 10:
      var value = new proto.toit.model.CompilationInfo;
      reader.readMessage(value,proto.toit.model.CompilationInfo.deserializeBinaryFromReader);
      msg.setCompilationInfo(value);
      break;
    case 11:
      var value = new proto.toit.model.JobPubSub;
      reader.readMessage(value,proto.toit.model.JobPubSub.deserializeBinaryFromReader);
      msg.setPubsub(value);
      break;
    case 12:
      var value = new proto.toit.model.JobFile;
      reader.readMessage(value,proto.toit.model.JobFile.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.JobConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.JobConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.JobConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCompilationId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getGoalState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getResources();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.toit.model.JobResources.serializeBinaryToWriter
    );
  }
  f = message.getTriggers();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.toit.model.JobTriggers.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCompilationInfo();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.toit.model.CompilationInfo.serializeBinaryToWriter
    );
  }
  f = message.getPubsub();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.toit.model.JobPubSub.serializeBinaryToWriter
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.toit.model.JobFile.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes job_id = 8;
 * @return {!(string|Uint8Array)}
 */
proto.toit.model.JobConfig.prototype.getJobId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes job_id = 8;
 * This is a type-conversion wrapper around `getJobId()`
 * @return {string}
 */
proto.toit.model.JobConfig.prototype.getJobId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getJobId()));
};


/**
 * optional bytes job_id = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getJobId()`
 * @return {!Uint8Array}
 */
proto.toit.model.JobConfig.prototype.getJobId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getJobId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.setJobId = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.toit.model.JobConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes compilation_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.toit.model.JobConfig.prototype.getCompilationId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes compilation_id = 2;
 * This is a type-conversion wrapper around `getCompilationId()`
 * @return {string}
 */
proto.toit.model.JobConfig.prototype.getCompilationId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCompilationId()));
};


/**
 * optional bytes compilation_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCompilationId()`
 * @return {!Uint8Array}
 */
proto.toit.model.JobConfig.prototype.getCompilationId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCompilationId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.setCompilationId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional JobGoalState goal_state = 3;
 * @return {!proto.toit.model.JobGoalState}
 */
proto.toit.model.JobConfig.prototype.getGoalState = function() {
  return /** @type {!proto.toit.model.JobGoalState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.toit.model.JobGoalState} value
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.setGoalState = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional JobResources resources = 4;
 * @return {?proto.toit.model.JobResources}
 */
proto.toit.model.JobConfig.prototype.getResources = function() {
  return /** @type{?proto.toit.model.JobResources} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.JobResources, 4));
};


/**
 * @param {?proto.toit.model.JobResources|undefined} value
 * @return {!proto.toit.model.JobConfig} returns this
*/
proto.toit.model.JobConfig.prototype.setResources = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.clearResources = function() {
  return this.setResources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobConfig.prototype.hasResources = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional JobTriggers triggers = 5;
 * @return {?proto.toit.model.JobTriggers}
 */
proto.toit.model.JobConfig.prototype.getTriggers = function() {
  return /** @type{?proto.toit.model.JobTriggers} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.JobTriggers, 5));
};


/**
 * @param {?proto.toit.model.JobTriggers|undefined} value
 * @return {!proto.toit.model.JobConfig} returns this
*/
proto.toit.model.JobConfig.prototype.setTriggers = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.clearTriggers = function() {
  return this.setTriggers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobConfig.prototype.hasTriggers = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp created = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.toit.model.JobConfig.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.toit.model.JobConfig} returns this
*/
proto.toit.model.JobConfig.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobConfig.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp updated = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.toit.model.JobConfig.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.toit.model.JobConfig} returns this
*/
proto.toit.model.JobConfig.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobConfig.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional CompilationInfo compilation_info = 10;
 * @return {?proto.toit.model.CompilationInfo}
 */
proto.toit.model.JobConfig.prototype.getCompilationInfo = function() {
  return /** @type{?proto.toit.model.CompilationInfo} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.CompilationInfo, 10));
};


/**
 * @param {?proto.toit.model.CompilationInfo|undefined} value
 * @return {!proto.toit.model.JobConfig} returns this
*/
proto.toit.model.JobConfig.prototype.setCompilationInfo = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.clearCompilationInfo = function() {
  return this.setCompilationInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobConfig.prototype.hasCompilationInfo = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional JobPubSub pubsub = 11;
 * @return {?proto.toit.model.JobPubSub}
 */
proto.toit.model.JobConfig.prototype.getPubsub = function() {
  return /** @type{?proto.toit.model.JobPubSub} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.JobPubSub, 11));
};


/**
 * @param {?proto.toit.model.JobPubSub|undefined} value
 * @return {!proto.toit.model.JobConfig} returns this
*/
proto.toit.model.JobConfig.prototype.setPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.clearPubsub = function() {
  return this.setPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobConfig.prototype.hasPubsub = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated JobFile files = 12;
 * @return {!Array<!proto.toit.model.JobFile>}
 */
proto.toit.model.JobConfig.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.toit.model.JobFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.toit.model.JobFile, 12));
};


/**
 * @param {!Array<!proto.toit.model.JobFile>} value
 * @return {!proto.toit.model.JobConfig} returns this
*/
proto.toit.model.JobConfig.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.toit.model.JobFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.toit.model.JobFile}
 */
proto.toit.model.JobConfig.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.toit.model.JobFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.toit.model.JobConfig} returns this
 */
proto.toit.model.JobConfig.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.CompilationInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.CompilationInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.CompilationInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.CompilationInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    programId: msg.getProgramId_asB64(),
    sdk: jspb.Message.getFieldWithDefault(msg, 2, ""),
    creatorId: msg.getCreatorId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.CompilationInfo}
 */
proto.toit.model.CompilationInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.CompilationInfo;
  return proto.toit.model.CompilationInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.CompilationInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.CompilationInfo}
 */
proto.toit.model.CompilationInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProgramId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdk(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCreatorId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.CompilationInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.CompilationInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.CompilationInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.CompilationInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProgramId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSdk();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreatorId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional bytes program_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.toit.model.CompilationInfo.prototype.getProgramId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes program_id = 1;
 * This is a type-conversion wrapper around `getProgramId()`
 * @return {string}
 */
proto.toit.model.CompilationInfo.prototype.getProgramId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProgramId()));
};


/**
 * optional bytes program_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProgramId()`
 * @return {!Uint8Array}
 */
proto.toit.model.CompilationInfo.prototype.getProgramId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProgramId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.toit.model.CompilationInfo} returns this
 */
proto.toit.model.CompilationInfo.prototype.setProgramId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string sdk = 2;
 * @return {string}
 */
proto.toit.model.CompilationInfo.prototype.getSdk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.toit.model.CompilationInfo} returns this
 */
proto.toit.model.CompilationInfo.prototype.setSdk = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes creator_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.toit.model.CompilationInfo.prototype.getCreatorId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes creator_id = 3;
 * This is a type-conversion wrapper around `getCreatorId()`
 * @return {string}
 */
proto.toit.model.CompilationInfo.prototype.getCreatorId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCreatorId()));
};


/**
 * optional bytes creator_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCreatorId()`
 * @return {!Uint8Array}
 */
proto.toit.model.CompilationInfo.prototype.getCreatorId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCreatorId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.toit.model.CompilationInfo} returns this
 */
proto.toit.model.CompilationInfo.prototype.setCreatorId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.JobResources.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.JobResources.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.JobResources} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobResources.toObject = function(includeInstance, msg) {
  var f, obj = {
    memory: (f = msg.getMemory()) && proto.toit.model.MemoryResource.toObject(includeInstance, f),
    features: (f = msg.getFeatures()) && proto.toit.model.JobFeatures.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.JobResources}
 */
proto.toit.model.JobResources.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.JobResources;
  return proto.toit.model.JobResources.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.JobResources} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.JobResources}
 */
proto.toit.model.JobResources.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.toit.model.MemoryResource;
      reader.readMessage(value,proto.toit.model.MemoryResource.deserializeBinaryFromReader);
      msg.setMemory(value);
      break;
    case 2:
      var value = new proto.toit.model.JobFeatures;
      reader.readMessage(value,proto.toit.model.JobFeatures.deserializeBinaryFromReader);
      msg.setFeatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.JobResources.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.JobResources.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.JobResources} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobResources.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMemory();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.toit.model.MemoryResource.serializeBinaryToWriter
    );
  }
  f = message.getFeatures();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.toit.model.JobFeatures.serializeBinaryToWriter
    );
  }
};


/**
 * optional MemoryResource memory = 1;
 * @return {?proto.toit.model.MemoryResource}
 */
proto.toit.model.JobResources.prototype.getMemory = function() {
  return /** @type{?proto.toit.model.MemoryResource} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.MemoryResource, 1));
};


/**
 * @param {?proto.toit.model.MemoryResource|undefined} value
 * @return {!proto.toit.model.JobResources} returns this
*/
proto.toit.model.JobResources.prototype.setMemory = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobResources} returns this
 */
proto.toit.model.JobResources.prototype.clearMemory = function() {
  return this.setMemory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobResources.prototype.hasMemory = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional JobFeatures features = 2;
 * @return {?proto.toit.model.JobFeatures}
 */
proto.toit.model.JobResources.prototype.getFeatures = function() {
  return /** @type{?proto.toit.model.JobFeatures} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.JobFeatures, 2));
};


/**
 * @param {?proto.toit.model.JobFeatures|undefined} value
 * @return {!proto.toit.model.JobResources} returns this
*/
proto.toit.model.JobResources.prototype.setFeatures = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobResources} returns this
 */
proto.toit.model.JobResources.prototype.clearFeatures = function() {
  return this.setFeatures(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobResources.prototype.hasFeatures = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.JobFeatures.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.JobFeatures.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.JobFeatures} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobFeatures.toObject = function(includeInstance, msg) {
  var f, obj = {
    gps: (f = msg.getGps()) && proto.toit.model.GPSFeature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.JobFeatures}
 */
proto.toit.model.JobFeatures.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.JobFeatures;
  return proto.toit.model.JobFeatures.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.JobFeatures} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.JobFeatures}
 */
proto.toit.model.JobFeatures.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.toit.model.GPSFeature;
      reader.readMessage(value,proto.toit.model.GPSFeature.deserializeBinaryFromReader);
      msg.setGps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.JobFeatures.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.JobFeatures.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.JobFeatures} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobFeatures.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGps();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.toit.model.GPSFeature.serializeBinaryToWriter
    );
  }
};


/**
 * optional GPSFeature gps = 1;
 * @return {?proto.toit.model.GPSFeature}
 */
proto.toit.model.JobFeatures.prototype.getGps = function() {
  return /** @type{?proto.toit.model.GPSFeature} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.GPSFeature, 1));
};


/**
 * @param {?proto.toit.model.GPSFeature|undefined} value
 * @return {!proto.toit.model.JobFeatures} returns this
*/
proto.toit.model.JobFeatures.prototype.setGps = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobFeatures} returns this
 */
proto.toit.model.JobFeatures.prototype.clearGps = function() {
  return this.setGps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobFeatures.prototype.hasGps = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.JobFile.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.JobFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.JobFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    path: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.JobFile}
 */
proto.toit.model.JobFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.JobFile;
  return proto.toit.model.JobFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.JobFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.JobFile}
 */
proto.toit.model.JobFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.toit.model.JobFileType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.JobFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.JobFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.JobFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional JobFileType type = 1;
 * @return {!proto.toit.model.JobFileType}
 */
proto.toit.model.JobFile.prototype.getType = function() {
  return /** @type {!proto.toit.model.JobFileType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.toit.model.JobFileType} value
 * @return {!proto.toit.model.JobFile} returns this
 */
proto.toit.model.JobFile.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.toit.model.JobFile.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.toit.model.JobFile} returns this
 */
proto.toit.model.JobFile.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.GPSFeature.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.GPSFeature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.GPSFeature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.GPSFeature.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.GPSFeature}
 */
proto.toit.model.GPSFeature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.GPSFeature;
  return proto.toit.model.GPSFeature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.GPSFeature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.GPSFeature}
 */
proto.toit.model.GPSFeature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.GPSFeature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.GPSFeature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.GPSFeature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.GPSFeature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.toit.model.GPSFeature.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.toit.model.GPSFeature} returns this
 */
proto.toit.model.GPSFeature.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.MemoryResource.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.MemoryResource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.MemoryResource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.MemoryResource.toObject = function(includeInstance, msg) {
  var f, obj = {
    memory: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.MemoryResource}
 */
proto.toit.model.MemoryResource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.MemoryResource;
  return proto.toit.model.MemoryResource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.MemoryResource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.MemoryResource}
 */
proto.toit.model.MemoryResource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMemory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.MemoryResource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.MemoryResource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.MemoryResource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.MemoryResource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMemory();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 memory = 1;
 * @return {number}
 */
proto.toit.model.MemoryResource.prototype.getMemory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.toit.model.MemoryResource} returns this
 */
proto.toit.model.MemoryResource.prototype.setMemory = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.JobTriggers.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.JobTriggers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.JobTriggers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobTriggers.toObject = function(includeInstance, msg) {
  var f, obj = {
    onInstall: (f = msg.getOnInstall()) && proto.toit.model.OnInstallTrigger.toObject(includeInstance, f),
    onBoot: (f = msg.getOnBoot()) && proto.toit.model.OnBootTrigger.toObject(includeInstance, f),
    interval: (f = msg.getInterval()) && proto.toit.model.IntervalTrigger.toObject(includeInstance, f),
    cron: (f = msg.getCron()) && proto.toit.model.CronTrigger.toObject(includeInstance, f),
    movement: (f = msg.getMovement()) && proto.toit.model.MovementTrigger.toObject(includeInstance, f),
    button: (f = msg.getButton()) && proto.toit.model.ButtonTrigger.toObject(includeInstance, f),
    network: (f = msg.getNetwork()) && proto.toit.model.NetworkTrigger.toObject(includeInstance, f),
    pubsub: (f = msg.getPubsub()) && proto.toit.model.PubSubTrigger.toObject(includeInstance, f),
    gpio: (f = msg.getGpio()) && proto.toit.model.GPIOTrigger.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.JobTriggers}
 */
proto.toit.model.JobTriggers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.JobTriggers;
  return proto.toit.model.JobTriggers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.JobTriggers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.JobTriggers}
 */
proto.toit.model.JobTriggers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.toit.model.OnInstallTrigger;
      reader.readMessage(value,proto.toit.model.OnInstallTrigger.deserializeBinaryFromReader);
      msg.setOnInstall(value);
      break;
    case 2:
      var value = new proto.toit.model.OnBootTrigger;
      reader.readMessage(value,proto.toit.model.OnBootTrigger.deserializeBinaryFromReader);
      msg.setOnBoot(value);
      break;
    case 3:
      var value = new proto.toit.model.IntervalTrigger;
      reader.readMessage(value,proto.toit.model.IntervalTrigger.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    case 4:
      var value = new proto.toit.model.CronTrigger;
      reader.readMessage(value,proto.toit.model.CronTrigger.deserializeBinaryFromReader);
      msg.setCron(value);
      break;
    case 5:
      var value = new proto.toit.model.MovementTrigger;
      reader.readMessage(value,proto.toit.model.MovementTrigger.deserializeBinaryFromReader);
      msg.setMovement(value);
      break;
    case 6:
      var value = new proto.toit.model.ButtonTrigger;
      reader.readMessage(value,proto.toit.model.ButtonTrigger.deserializeBinaryFromReader);
      msg.setButton(value);
      break;
    case 7:
      var value = new proto.toit.model.NetworkTrigger;
      reader.readMessage(value,proto.toit.model.NetworkTrigger.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 8:
      var value = new proto.toit.model.PubSubTrigger;
      reader.readMessage(value,proto.toit.model.PubSubTrigger.deserializeBinaryFromReader);
      msg.setPubsub(value);
      break;
    case 9:
      var value = new proto.toit.model.GPIOTrigger;
      reader.readMessage(value,proto.toit.model.GPIOTrigger.deserializeBinaryFromReader);
      msg.setGpio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.JobTriggers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.JobTriggers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.JobTriggers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobTriggers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnInstall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.toit.model.OnInstallTrigger.serializeBinaryToWriter
    );
  }
  f = message.getOnBoot();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.toit.model.OnBootTrigger.serializeBinaryToWriter
    );
  }
  f = message.getInterval();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.toit.model.IntervalTrigger.serializeBinaryToWriter
    );
  }
  f = message.getCron();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.toit.model.CronTrigger.serializeBinaryToWriter
    );
  }
  f = message.getMovement();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.toit.model.MovementTrigger.serializeBinaryToWriter
    );
  }
  f = message.getButton();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.toit.model.ButtonTrigger.serializeBinaryToWriter
    );
  }
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.toit.model.NetworkTrigger.serializeBinaryToWriter
    );
  }
  f = message.getPubsub();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.toit.model.PubSubTrigger.serializeBinaryToWriter
    );
  }
  f = message.getGpio();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.toit.model.GPIOTrigger.serializeBinaryToWriter
    );
  }
};


/**
 * optional OnInstallTrigger on_install = 1;
 * @return {?proto.toit.model.OnInstallTrigger}
 */
proto.toit.model.JobTriggers.prototype.getOnInstall = function() {
  return /** @type{?proto.toit.model.OnInstallTrigger} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.OnInstallTrigger, 1));
};


/**
 * @param {?proto.toit.model.OnInstallTrigger|undefined} value
 * @return {!proto.toit.model.JobTriggers} returns this
*/
proto.toit.model.JobTriggers.prototype.setOnInstall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobTriggers} returns this
 */
proto.toit.model.JobTriggers.prototype.clearOnInstall = function() {
  return this.setOnInstall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobTriggers.prototype.hasOnInstall = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional OnBootTrigger on_boot = 2;
 * @return {?proto.toit.model.OnBootTrigger}
 */
proto.toit.model.JobTriggers.prototype.getOnBoot = function() {
  return /** @type{?proto.toit.model.OnBootTrigger} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.OnBootTrigger, 2));
};


/**
 * @param {?proto.toit.model.OnBootTrigger|undefined} value
 * @return {!proto.toit.model.JobTriggers} returns this
*/
proto.toit.model.JobTriggers.prototype.setOnBoot = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobTriggers} returns this
 */
proto.toit.model.JobTriggers.prototype.clearOnBoot = function() {
  return this.setOnBoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobTriggers.prototype.hasOnBoot = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional IntervalTrigger interval = 3;
 * @return {?proto.toit.model.IntervalTrigger}
 */
proto.toit.model.JobTriggers.prototype.getInterval = function() {
  return /** @type{?proto.toit.model.IntervalTrigger} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.IntervalTrigger, 3));
};


/**
 * @param {?proto.toit.model.IntervalTrigger|undefined} value
 * @return {!proto.toit.model.JobTriggers} returns this
*/
proto.toit.model.JobTriggers.prototype.setInterval = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobTriggers} returns this
 */
proto.toit.model.JobTriggers.prototype.clearInterval = function() {
  return this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobTriggers.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CronTrigger cron = 4;
 * @return {?proto.toit.model.CronTrigger}
 */
proto.toit.model.JobTriggers.prototype.getCron = function() {
  return /** @type{?proto.toit.model.CronTrigger} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.CronTrigger, 4));
};


/**
 * @param {?proto.toit.model.CronTrigger|undefined} value
 * @return {!proto.toit.model.JobTriggers} returns this
*/
proto.toit.model.JobTriggers.prototype.setCron = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobTriggers} returns this
 */
proto.toit.model.JobTriggers.prototype.clearCron = function() {
  return this.setCron(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobTriggers.prototype.hasCron = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MovementTrigger movement = 5;
 * @return {?proto.toit.model.MovementTrigger}
 */
proto.toit.model.JobTriggers.prototype.getMovement = function() {
  return /** @type{?proto.toit.model.MovementTrigger} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.MovementTrigger, 5));
};


/**
 * @param {?proto.toit.model.MovementTrigger|undefined} value
 * @return {!proto.toit.model.JobTriggers} returns this
*/
proto.toit.model.JobTriggers.prototype.setMovement = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobTriggers} returns this
 */
proto.toit.model.JobTriggers.prototype.clearMovement = function() {
  return this.setMovement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobTriggers.prototype.hasMovement = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ButtonTrigger button = 6;
 * @return {?proto.toit.model.ButtonTrigger}
 */
proto.toit.model.JobTriggers.prototype.getButton = function() {
  return /** @type{?proto.toit.model.ButtonTrigger} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.ButtonTrigger, 6));
};


/**
 * @param {?proto.toit.model.ButtonTrigger|undefined} value
 * @return {!proto.toit.model.JobTriggers} returns this
*/
proto.toit.model.JobTriggers.prototype.setButton = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobTriggers} returns this
 */
proto.toit.model.JobTriggers.prototype.clearButton = function() {
  return this.setButton(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobTriggers.prototype.hasButton = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional NetworkTrigger network = 7;
 * @return {?proto.toit.model.NetworkTrigger}
 */
proto.toit.model.JobTriggers.prototype.getNetwork = function() {
  return /** @type{?proto.toit.model.NetworkTrigger} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.NetworkTrigger, 7));
};


/**
 * @param {?proto.toit.model.NetworkTrigger|undefined} value
 * @return {!proto.toit.model.JobTriggers} returns this
*/
proto.toit.model.JobTriggers.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobTriggers} returns this
 */
proto.toit.model.JobTriggers.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobTriggers.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional PubSubTrigger pubsub = 8;
 * @return {?proto.toit.model.PubSubTrigger}
 */
proto.toit.model.JobTriggers.prototype.getPubsub = function() {
  return /** @type{?proto.toit.model.PubSubTrigger} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.PubSubTrigger, 8));
};


/**
 * @param {?proto.toit.model.PubSubTrigger|undefined} value
 * @return {!proto.toit.model.JobTriggers} returns this
*/
proto.toit.model.JobTriggers.prototype.setPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobTriggers} returns this
 */
proto.toit.model.JobTriggers.prototype.clearPubsub = function() {
  return this.setPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobTriggers.prototype.hasPubsub = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional GPIOTrigger gpio = 9;
 * @return {?proto.toit.model.GPIOTrigger}
 */
proto.toit.model.JobTriggers.prototype.getGpio = function() {
  return /** @type{?proto.toit.model.GPIOTrigger} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.GPIOTrigger, 9));
};


/**
 * @param {?proto.toit.model.GPIOTrigger|undefined} value
 * @return {!proto.toit.model.JobTriggers} returns this
*/
proto.toit.model.JobTriggers.prototype.setGpio = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobTriggers} returns this
 */
proto.toit.model.JobTriggers.prototype.clearGpio = function() {
  return this.setGpio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobTriggers.prototype.hasGpio = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.toit.model.GPIOTrigger.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.GPIOTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.GPIOTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.GPIOTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.GPIOTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    pinsList: jspb.Message.toObjectList(msg.getPinsList(),
    proto.toit.model.GPIOTrigger.Pin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.GPIOTrigger}
 */
proto.toit.model.GPIOTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.GPIOTrigger;
  return proto.toit.model.GPIOTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.GPIOTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.GPIOTrigger}
 */
proto.toit.model.GPIOTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.toit.model.GPIOTrigger.Pin;
      reader.readMessage(value,proto.toit.model.GPIOTrigger.Pin.deserializeBinaryFromReader);
      msg.addPins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.GPIOTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.GPIOTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.GPIOTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.GPIOTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPinsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.toit.model.GPIOTrigger.Pin.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.GPIOTrigger.Pin.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.GPIOTrigger.Pin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.GPIOTrigger.Pin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.GPIOTrigger.Pin.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pin: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.GPIOTrigger.Pin}
 */
proto.toit.model.GPIOTrigger.Pin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.GPIOTrigger.Pin;
  return proto.toit.model.GPIOTrigger.Pin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.GPIOTrigger.Pin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.GPIOTrigger.Pin}
 */
proto.toit.model.GPIOTrigger.Pin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.toit.model.GPIOTrigger.Pin.Level} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.GPIOTrigger.Pin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.GPIOTrigger.Pin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.GPIOTrigger.Pin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.GPIOTrigger.Pin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPin();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.toit.model.GPIOTrigger.Pin.Level = {
  HIGH: 0,
  LOW: 1
};

/**
 * optional Level level = 1;
 * @return {!proto.toit.model.GPIOTrigger.Pin.Level}
 */
proto.toit.model.GPIOTrigger.Pin.prototype.getLevel = function() {
  return /** @type {!proto.toit.model.GPIOTrigger.Pin.Level} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.toit.model.GPIOTrigger.Pin.Level} value
 * @return {!proto.toit.model.GPIOTrigger.Pin} returns this
 */
proto.toit.model.GPIOTrigger.Pin.prototype.setLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 pin = 2;
 * @return {number}
 */
proto.toit.model.GPIOTrigger.Pin.prototype.getPin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.toit.model.GPIOTrigger.Pin} returns this
 */
proto.toit.model.GPIOTrigger.Pin.prototype.setPin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Pin pins = 1;
 * @return {!Array<!proto.toit.model.GPIOTrigger.Pin>}
 */
proto.toit.model.GPIOTrigger.prototype.getPinsList = function() {
  return /** @type{!Array<!proto.toit.model.GPIOTrigger.Pin>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.toit.model.GPIOTrigger.Pin, 1));
};


/**
 * @param {!Array<!proto.toit.model.GPIOTrigger.Pin>} value
 * @return {!proto.toit.model.GPIOTrigger} returns this
*/
proto.toit.model.GPIOTrigger.prototype.setPinsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.toit.model.GPIOTrigger.Pin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.toit.model.GPIOTrigger.Pin}
 */
proto.toit.model.GPIOTrigger.prototype.addPins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.toit.model.GPIOTrigger.Pin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.toit.model.GPIOTrigger} returns this
 */
proto.toit.model.GPIOTrigger.prototype.clearPinsList = function() {
  return this.setPinsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.OnInstallTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.OnInstallTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.OnInstallTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.OnInstallTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.OnInstallTrigger}
 */
proto.toit.model.OnInstallTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.OnInstallTrigger;
  return proto.toit.model.OnInstallTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.OnInstallTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.OnInstallTrigger}
 */
proto.toit.model.OnInstallTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.OnInstallTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.OnInstallTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.OnInstallTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.OnInstallTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.toit.model.OnInstallTrigger.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.toit.model.OnInstallTrigger} returns this
 */
proto.toit.model.OnInstallTrigger.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.OnBootTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.OnBootTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.OnBootTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.OnBootTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.OnBootTrigger}
 */
proto.toit.model.OnBootTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.OnBootTrigger;
  return proto.toit.model.OnBootTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.OnBootTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.OnBootTrigger}
 */
proto.toit.model.OnBootTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.OnBootTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.OnBootTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.OnBootTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.OnBootTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.toit.model.OnBootTrigger.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.toit.model.OnBootTrigger} returns this
 */
proto.toit.model.OnBootTrigger.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.IntervalTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.IntervalTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.IntervalTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.IntervalTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    interval: (f = msg.getInterval()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.IntervalTrigger}
 */
proto.toit.model.IntervalTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.IntervalTrigger;
  return proto.toit.model.IntervalTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.IntervalTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.IntervalTrigger}
 */
proto.toit.model.IntervalTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.IntervalTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.IntervalTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.IntervalTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.IntervalTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterval();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration interval = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.toit.model.IntervalTrigger.prototype.getInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.toit.model.IntervalTrigger} returns this
*/
proto.toit.model.IntervalTrigger.prototype.setInterval = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.IntervalTrigger} returns this
 */
proto.toit.model.IntervalTrigger.prototype.clearInterval = function() {
  return this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.IntervalTrigger.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.toit.model.CronTrigger.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.CronTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.CronTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.CronTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.CronTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    specsList: jspb.Message.toObjectList(msg.getSpecsList(),
    proto.toit.model.CronSpec.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.CronTrigger}
 */
proto.toit.model.CronTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.CronTrigger;
  return proto.toit.model.CronTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.CronTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.CronTrigger}
 */
proto.toit.model.CronTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.toit.model.CronSpec;
      reader.readMessage(value,proto.toit.model.CronSpec.deserializeBinaryFromReader);
      msg.addSpecs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.CronTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.CronTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.CronTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.CronTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpecsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.toit.model.CronSpec.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CronSpec specs = 1;
 * @return {!Array<!proto.toit.model.CronSpec>}
 */
proto.toit.model.CronTrigger.prototype.getSpecsList = function() {
  return /** @type{!Array<!proto.toit.model.CronSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.toit.model.CronSpec, 1));
};


/**
 * @param {!Array<!proto.toit.model.CronSpec>} value
 * @return {!proto.toit.model.CronTrigger} returns this
*/
proto.toit.model.CronTrigger.prototype.setSpecsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.toit.model.CronSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.toit.model.CronSpec}
 */
proto.toit.model.CronTrigger.prototype.addSpecs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.toit.model.CronSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.toit.model.CronTrigger} returns this
 */
proto.toit.model.CronTrigger.prototype.clearSpecsList = function() {
  return this.setSpecsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.MovementTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.MovementTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.MovementTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.MovementTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    shaken: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.MovementTrigger}
 */
proto.toit.model.MovementTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.MovementTrigger;
  return proto.toit.model.MovementTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.MovementTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.MovementTrigger}
 */
proto.toit.model.MovementTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShaken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.MovementTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.MovementTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.MovementTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.MovementTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShaken();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool shaken = 1;
 * @return {boolean}
 */
proto.toit.model.MovementTrigger.prototype.getShaken = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.toit.model.MovementTrigger} returns this
 */
proto.toit.model.MovementTrigger.prototype.setShaken = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.toit.model.ButtonTrigger.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.ButtonTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.ButtonTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.ButtonTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.ButtonTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    buttonsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.ButtonTrigger}
 */
proto.toit.model.ButtonTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.ButtonTrigger;
  return proto.toit.model.ButtonTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.ButtonTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.ButtonTrigger}
 */
proto.toit.model.ButtonTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addButtons(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.ButtonTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.ButtonTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.ButtonTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.ButtonTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getButtonsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string buttons = 1;
 * @return {!Array<string>}
 */
proto.toit.model.ButtonTrigger.prototype.getButtonsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.toit.model.ButtonTrigger} returns this
 */
proto.toit.model.ButtonTrigger.prototype.setButtonsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.toit.model.ButtonTrigger} returns this
 */
proto.toit.model.ButtonTrigger.prototype.addButtons = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.toit.model.ButtonTrigger} returns this
 */
proto.toit.model.ButtonTrigger.prototype.clearButtonsList = function() {
  return this.setButtonsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.NetworkTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.NetworkTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.NetworkTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.NetworkTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    connected: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.NetworkTrigger}
 */
proto.toit.model.NetworkTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.NetworkTrigger;
  return proto.toit.model.NetworkTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.NetworkTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.NetworkTrigger}
 */
proto.toit.model.NetworkTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConnected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.NetworkTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.NetworkTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.NetworkTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.NetworkTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnected();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool connected = 1;
 * @return {boolean}
 */
proto.toit.model.NetworkTrigger.prototype.getConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.toit.model.NetworkTrigger} returns this
 */
proto.toit.model.NetworkTrigger.prototype.setConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.toit.model.PubSubTrigger.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.PubSubTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.PubSubTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.PubSubTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.PubSubTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    topicsList: jspb.Message.toObjectList(msg.getTopicsList(),
    toit_model_pubsub_topic_pb.Topic.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.PubSubTrigger}
 */
proto.toit.model.PubSubTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.PubSubTrigger;
  return proto.toit.model.PubSubTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.PubSubTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.PubSubTrigger}
 */
proto.toit.model.PubSubTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new toit_model_pubsub_topic_pb.Topic;
      reader.readMessage(value,toit_model_pubsub_topic_pb.Topic.deserializeBinaryFromReader);
      msg.addTopics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.PubSubTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.PubSubTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.PubSubTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.PubSubTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopicsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      toit_model_pubsub_topic_pb.Topic.serializeBinaryToWriter
    );
  }
};


/**
 * repeated pubsub.Topic topics = 1;
 * @return {!Array<!proto.toit.model.pubsub.Topic>}
 */
proto.toit.model.PubSubTrigger.prototype.getTopicsList = function() {
  return /** @type{!Array<!proto.toit.model.pubsub.Topic>} */ (
    jspb.Message.getRepeatedWrapperField(this, toit_model_pubsub_topic_pb.Topic, 1));
};


/**
 * @param {!Array<!proto.toit.model.pubsub.Topic>} value
 * @return {!proto.toit.model.PubSubTrigger} returns this
*/
proto.toit.model.PubSubTrigger.prototype.setTopicsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.toit.model.pubsub.Topic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.toit.model.pubsub.Topic}
 */
proto.toit.model.PubSubTrigger.prototype.addTopics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.toit.model.pubsub.Topic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.toit.model.PubSubTrigger} returns this
 */
proto.toit.model.PubSubTrigger.prototype.clearTopicsList = function() {
  return this.setTopicsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.toit.model.CronSpec.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.CronSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.CronSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.CronSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.CronSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    cronString: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schedulesList: jspb.Message.toObjectList(msg.getSchedulesList(),
    proto.toit.model.CronSchedule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.CronSpec}
 */
proto.toit.model.CronSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.CronSpec;
  return proto.toit.model.CronSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.CronSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.CronSpec}
 */
proto.toit.model.CronSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCronString(value);
      break;
    case 2:
      var value = new proto.toit.model.CronSchedule;
      reader.readMessage(value,proto.toit.model.CronSchedule.deserializeBinaryFromReader);
      msg.addSchedules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.CronSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.CronSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.CronSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.CronSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCronString();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchedulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.toit.model.CronSchedule.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cron_string = 1;
 * @return {string}
 */
proto.toit.model.CronSpec.prototype.getCronString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.toit.model.CronSpec} returns this
 */
proto.toit.model.CronSpec.prototype.setCronString = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CronSchedule schedules = 2;
 * @return {!Array<!proto.toit.model.CronSchedule>}
 */
proto.toit.model.CronSpec.prototype.getSchedulesList = function() {
  return /** @type{!Array<!proto.toit.model.CronSchedule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.toit.model.CronSchedule, 2));
};


/**
 * @param {!Array<!proto.toit.model.CronSchedule>} value
 * @return {!proto.toit.model.CronSpec} returns this
*/
proto.toit.model.CronSpec.prototype.setSchedulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.toit.model.CronSchedule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.toit.model.CronSchedule}
 */
proto.toit.model.CronSpec.prototype.addSchedules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.toit.model.CronSchedule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.toit.model.CronSpec} returns this
 */
proto.toit.model.CronSpec.prototype.clearSchedulesList = function() {
  return this.setSchedulesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.CronSchedule.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.CronSchedule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.CronSchedule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.CronSchedule.toObject = function(includeInstance, msg) {
  var f, obj = {
    second: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minute: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hour: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dayOfMonth: jspb.Message.getFieldWithDefault(msg, 4, 0),
    month: jspb.Message.getFieldWithDefault(msg, 5, 0),
    dayOfWeek: jspb.Message.getFieldWithDefault(msg, 6, 0),
    validFrom: (f = msg.getValidFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    validTo: (f = msg.getValidTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.CronSchedule}
 */
proto.toit.model.CronSchedule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.CronSchedule;
  return proto.toit.model.CronSchedule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.CronSchedule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.CronSchedule}
 */
proto.toit.model.CronSchedule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setSecond(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setMinute(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setHour(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setDayOfMonth(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setMonth(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setDayOfWeek(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setValidFrom(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setValidTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.CronSchedule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.CronSchedule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.CronSchedule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.CronSchedule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecond();
  if (f !== 0) {
    writer.writeSfixed64(
      1,
      f
    );
  }
  f = message.getMinute();
  if (f !== 0) {
    writer.writeSfixed64(
      2,
      f
    );
  }
  f = message.getHour();
  if (f !== 0) {
    writer.writeSfixed64(
      3,
      f
    );
  }
  f = message.getDayOfMonth();
  if (f !== 0) {
    writer.writeSfixed64(
      4,
      f
    );
  }
  f = message.getMonth();
  if (f !== 0) {
    writer.writeSfixed64(
      5,
      f
    );
  }
  f = message.getDayOfWeek();
  if (f !== 0) {
    writer.writeSfixed64(
      6,
      f
    );
  }
  f = message.getValidFrom();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getValidTo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional sfixed64 second = 1;
 * @return {number}
 */
proto.toit.model.CronSchedule.prototype.getSecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.toit.model.CronSchedule} returns this
 */
proto.toit.model.CronSchedule.prototype.setSecond = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional sfixed64 minute = 2;
 * @return {number}
 */
proto.toit.model.CronSchedule.prototype.getMinute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.toit.model.CronSchedule} returns this
 */
proto.toit.model.CronSchedule.prototype.setMinute = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional sfixed64 hour = 3;
 * @return {number}
 */
proto.toit.model.CronSchedule.prototype.getHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.toit.model.CronSchedule} returns this
 */
proto.toit.model.CronSchedule.prototype.setHour = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional sfixed64 day_of_month = 4;
 * @return {number}
 */
proto.toit.model.CronSchedule.prototype.getDayOfMonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.toit.model.CronSchedule} returns this
 */
proto.toit.model.CronSchedule.prototype.setDayOfMonth = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional sfixed64 month = 5;
 * @return {number}
 */
proto.toit.model.CronSchedule.prototype.getMonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.toit.model.CronSchedule} returns this
 */
proto.toit.model.CronSchedule.prototype.setMonth = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional sfixed64 day_of_week = 6;
 * @return {number}
 */
proto.toit.model.CronSchedule.prototype.getDayOfWeek = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.toit.model.CronSchedule} returns this
 */
proto.toit.model.CronSchedule.prototype.setDayOfWeek = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp valid_from = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.toit.model.CronSchedule.prototype.getValidFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.toit.model.CronSchedule} returns this
*/
proto.toit.model.CronSchedule.prototype.setValidFrom = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.CronSchedule} returns this
 */
proto.toit.model.CronSchedule.prototype.clearValidFrom = function() {
  return this.setValidFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.CronSchedule.prototype.hasValidFrom = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp valid_to = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.toit.model.CronSchedule.prototype.getValidTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.toit.model.CronSchedule} returns this
*/
proto.toit.model.CronSchedule.prototype.setValidTo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.CronSchedule} returns this
 */
proto.toit.model.CronSchedule.prototype.clearValidTo = function() {
  return this.setValidTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.CronSchedule.prototype.hasValidTo = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.toit.model.JobPubSub.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.JobPubSub.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.JobPubSub.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.JobPubSub} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobPubSub.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscriptionsList: jspb.Message.toObjectList(msg.getSubscriptionsList(),
    proto.toit.model.JobPubSub.Subscription.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.JobPubSub}
 */
proto.toit.model.JobPubSub.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.JobPubSub;
  return proto.toit.model.JobPubSub.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.JobPubSub} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.JobPubSub}
 */
proto.toit.model.JobPubSub.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.toit.model.JobPubSub.Subscription;
      reader.readMessage(value,proto.toit.model.JobPubSub.Subscription.deserializeBinaryFromReader);
      msg.addSubscriptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.JobPubSub.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.JobPubSub.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.JobPubSub} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobPubSub.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscriptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.toit.model.JobPubSub.Subscription.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.JobPubSub.Subscription.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.JobPubSub.Subscription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.JobPubSub.Subscription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobPubSub.Subscription.toObject = function(includeInstance, msg) {
  var f, obj = {
    topic: (f = msg.getTopic()) && toit_model_pubsub_topic_pb.Topic.toObject(includeInstance, f),
    id: msg.getId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.JobPubSub.Subscription}
 */
proto.toit.model.JobPubSub.Subscription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.JobPubSub.Subscription;
  return proto.toit.model.JobPubSub.Subscription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.JobPubSub.Subscription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.JobPubSub.Subscription}
 */
proto.toit.model.JobPubSub.Subscription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new toit_model_pubsub_topic_pb.Topic;
      reader.readMessage(value,toit_model_pubsub_topic_pb.Topic.deserializeBinaryFromReader);
      msg.setTopic(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.JobPubSub.Subscription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.JobPubSub.Subscription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.JobPubSub.Subscription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobPubSub.Subscription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopic();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      toit_model_pubsub_topic_pb.Topic.serializeBinaryToWriter
    );
  }
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional pubsub.Topic topic = 1;
 * @return {?proto.toit.model.pubsub.Topic}
 */
proto.toit.model.JobPubSub.Subscription.prototype.getTopic = function() {
  return /** @type{?proto.toit.model.pubsub.Topic} */ (
    jspb.Message.getWrapperField(this, toit_model_pubsub_topic_pb.Topic, 1));
};


/**
 * @param {?proto.toit.model.pubsub.Topic|undefined} value
 * @return {!proto.toit.model.JobPubSub.Subscription} returns this
*/
proto.toit.model.JobPubSub.Subscription.prototype.setTopic = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobPubSub.Subscription} returns this
 */
proto.toit.model.JobPubSub.Subscription.prototype.clearTopic = function() {
  return this.setTopic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobPubSub.Subscription.prototype.hasTopic = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.toit.model.JobPubSub.Subscription.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes id = 2;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.toit.model.JobPubSub.Subscription.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.toit.model.JobPubSub.Subscription.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.toit.model.JobPubSub.Subscription} returns this
 */
proto.toit.model.JobPubSub.Subscription.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated Subscription subscriptions = 1;
 * @return {!Array<!proto.toit.model.JobPubSub.Subscription>}
 */
proto.toit.model.JobPubSub.prototype.getSubscriptionsList = function() {
  return /** @type{!Array<!proto.toit.model.JobPubSub.Subscription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.toit.model.JobPubSub.Subscription, 1));
};


/**
 * @param {!Array<!proto.toit.model.JobPubSub.Subscription>} value
 * @return {!proto.toit.model.JobPubSub} returns this
*/
proto.toit.model.JobPubSub.prototype.setSubscriptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.toit.model.JobPubSub.Subscription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.toit.model.JobPubSub.Subscription}
 */
proto.toit.model.JobPubSub.prototype.addSubscriptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.toit.model.JobPubSub.Subscription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.toit.model.JobPubSub} returns this
 */
proto.toit.model.JobPubSub.prototype.clearSubscriptionsList = function() {
  return this.setSubscriptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.JobStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.JobStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.JobStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobId: msg.getJobId_asB64(),
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.JobStatus}
 */
proto.toit.model.JobStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.JobStatus;
  return proto.toit.model.JobStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.JobStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.JobStatus}
 */
proto.toit.model.JobStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setJobId(value);
      break;
    case 1:
      var value = /** @type {!proto.toit.model.JobState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.JobStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.JobStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.JobStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes job_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.toit.model.JobStatus.prototype.getJobId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes job_id = 3;
 * This is a type-conversion wrapper around `getJobId()`
 * @return {string}
 */
proto.toit.model.JobStatus.prototype.getJobId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getJobId()));
};


/**
 * optional bytes job_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getJobId()`
 * @return {!Uint8Array}
 */
proto.toit.model.JobStatus.prototype.getJobId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getJobId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.toit.model.JobStatus} returns this
 */
proto.toit.model.JobStatus.prototype.setJobId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional JobState state = 1;
 * @return {!proto.toit.model.JobState}
 */
proto.toit.model.JobStatus.prototype.getState = function() {
  return /** @type {!proto.toit.model.JobState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.toit.model.JobState} value
 * @return {!proto.toit.model.JobStatus} returns this
 */
proto.toit.model.JobStatus.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp updated = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.toit.model.JobStatus.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.toit.model.JobStatus} returns this
*/
proto.toit.model.JobStatus.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobStatus} returns this
 */
proto.toit.model.JobStatus.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobStatus.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.toit.model.JobInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.toit.model.JobInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.toit.model.JobInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.toit.model.JobConfig.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.toit.model.JobStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.toit.model.JobInfo}
 */
proto.toit.model.JobInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.toit.model.JobInfo;
  return proto.toit.model.JobInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.toit.model.JobInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.toit.model.JobInfo}
 */
proto.toit.model.JobInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.toit.model.JobConfig;
      reader.readMessage(value,proto.toit.model.JobConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = new proto.toit.model.JobStatus;
      reader.readMessage(value,proto.toit.model.JobStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.toit.model.JobInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.toit.model.JobInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.toit.model.JobInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.toit.model.JobInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.toit.model.JobConfig.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.toit.model.JobStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional JobConfig config = 1;
 * @return {?proto.toit.model.JobConfig}
 */
proto.toit.model.JobInfo.prototype.getConfig = function() {
  return /** @type{?proto.toit.model.JobConfig} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.JobConfig, 1));
};


/**
 * @param {?proto.toit.model.JobConfig|undefined} value
 * @return {!proto.toit.model.JobInfo} returns this
*/
proto.toit.model.JobInfo.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobInfo} returns this
 */
proto.toit.model.JobInfo.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobInfo.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional JobStatus status = 2;
 * @return {?proto.toit.model.JobStatus}
 */
proto.toit.model.JobInfo.prototype.getStatus = function() {
  return /** @type{?proto.toit.model.JobStatus} */ (
    jspb.Message.getWrapperField(this, proto.toit.model.JobStatus, 2));
};


/**
 * @param {?proto.toit.model.JobStatus|undefined} value
 * @return {!proto.toit.model.JobInfo} returns this
*/
proto.toit.model.JobInfo.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.toit.model.JobInfo} returns this
 */
proto.toit.model.JobInfo.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.toit.model.JobInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.toit.model.JobGoalState = {
  JOB_GOAL_STATE_UNKNOWN: 0,
  JOB_GOAL_STATE_INSTALL: 1,
  JOB_GOAL_STATE_UNINSTALL: 2
};

/**
 * @enum {number}
 */
proto.toit.model.JobFileType = {
  JOB_FILE_TYPE_UNKNOWN: 0,
  JOB_FILE_TYPE_SYSTEM: 1
};

/**
 * @enum {number}
 */
proto.toit.model.JobState = {
  JOB_STATE_UNKNOWN: 0,
  JOB_STATE_UNINSTALLED: 1,
  JOB_STATE_INSTALLING: 2,
  JOB_STATE_INSTALLED: 3,
  JOB_STATE_FAILED: 4
};

/**
 * @enum {number}
 */
proto.toit.model.JobChangeType = {
  JOB_CHANGE_UNKNOWN: 0,
  JOB_CHANGE_ADDED: 1,
  JOB_CHANGE_DELETED: 2,
  JOB_CHANGE_CHANGED: 3
};

goog.object.extend(exports, proto.toit.model);
