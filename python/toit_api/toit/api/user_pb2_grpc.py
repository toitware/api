# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from toit.api import organization_pb2 as toit_dot_api_dot_organization__pb2
from toit.api import user_pb2 as toit_dot_api_dot_user__pb2


class UserStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetPassword = channel.unary_unary(
                '/toit.api.User/SetPassword',
                request_serializer=toit_dot_api_dot_user__pb2.SetPasswordRequest.SerializeToString,
                response_deserializer=toit_dot_api_dot_user__pb2.SetPasswordResponse.FromString,
                )
        self.InitiateResetPassword = channel.unary_unary(
                '/toit.api.User/InitiateResetPassword',
                request_serializer=toit_dot_api_dot_user__pb2.InitiateResetPasswordRequest.SerializeToString,
                response_deserializer=toit_dot_api_dot_user__pb2.InitiateResetPasswordResponse.FromString,
                )
        self.ChangePasswordWithRPToken = channel.unary_unary(
                '/toit.api.User/ChangePasswordWithRPToken',
                request_serializer=toit_dot_api_dot_user__pb2.ChangePasswordWithRPTokenRequest.SerializeToString,
                response_deserializer=toit_dot_api_dot_user__pb2.ChangePasswordWithRPTokenResponse.FromString,
                )
        self.GetCurrentUser = channel.unary_unary(
                '/toit.api.User/GetCurrentUser',
                request_serializer=toit_dot_api_dot_user__pb2.GetCurrentUserRequest.SerializeToString,
                response_deserializer=toit_dot_api_dot_user__pb2.GetCurrentUserResponse.FromString,
                )
        self.ListOrganizations = channel.unary_unary(
                '/toit.api.User/ListOrganizations',
                request_serializer=toit_dot_api_dot_user__pb2.ListOrganizationsRequest.SerializeToString,
                response_deserializer=toit_dot_api_dot_user__pb2.ListOrganizationsResponse.FromString,
                )
        self.ListUsers = channel.unary_unary(
                '/toit.api.User/ListUsers',
                request_serializer=toit_dot_api_dot_organization__pb2.ListUsersRequest.SerializeToString,
                response_deserializer=toit_dot_api_dot_organization__pb2.ListUsersResponse.FromString,
                )
        self.CreateUser = channel.unary_unary(
                '/toit.api.User/CreateUser',
                request_serializer=toit_dot_api_dot_organization__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=toit_dot_api_dot_organization__pb2.CreateUserResponse.FromString,
                )


class UserServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiateResetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePasswordWithRPToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPassword,
                    request_deserializer=toit_dot_api_dot_user__pb2.SetPasswordRequest.FromString,
                    response_serializer=toit_dot_api_dot_user__pb2.SetPasswordResponse.SerializeToString,
            ),
            'InitiateResetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateResetPassword,
                    request_deserializer=toit_dot_api_dot_user__pb2.InitiateResetPasswordRequest.FromString,
                    response_serializer=toit_dot_api_dot_user__pb2.InitiateResetPasswordResponse.SerializeToString,
            ),
            'ChangePasswordWithRPToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePasswordWithRPToken,
                    request_deserializer=toit_dot_api_dot_user__pb2.ChangePasswordWithRPTokenRequest.FromString,
                    response_serializer=toit_dot_api_dot_user__pb2.ChangePasswordWithRPTokenResponse.SerializeToString,
            ),
            'GetCurrentUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentUser,
                    request_deserializer=toit_dot_api_dot_user__pb2.GetCurrentUserRequest.FromString,
                    response_serializer=toit_dot_api_dot_user__pb2.GetCurrentUserResponse.SerializeToString,
            ),
            'ListOrganizations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizations,
                    request_deserializer=toit_dot_api_dot_user__pb2.ListOrganizationsRequest.FromString,
                    response_serializer=toit_dot_api_dot_user__pb2.ListOrganizationsResponse.SerializeToString,
            ),
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=toit_dot_api_dot_organization__pb2.ListUsersRequest.FromString,
                    response_serializer=toit_dot_api_dot_organization__pb2.ListUsersResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=toit_dot_api_dot_organization__pb2.CreateUserRequest.FromString,
                    response_serializer=toit_dot_api_dot_organization__pb2.CreateUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'toit.api.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toit.api.User/SetPassword',
            toit_dot_api_dot_user__pb2.SetPasswordRequest.SerializeToString,
            toit_dot_api_dot_user__pb2.SetPasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitiateResetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toit.api.User/InitiateResetPassword',
            toit_dot_api_dot_user__pb2.InitiateResetPasswordRequest.SerializeToString,
            toit_dot_api_dot_user__pb2.InitiateResetPasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangePasswordWithRPToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toit.api.User/ChangePasswordWithRPToken',
            toit_dot_api_dot_user__pb2.ChangePasswordWithRPTokenRequest.SerializeToString,
            toit_dot_api_dot_user__pb2.ChangePasswordWithRPTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toit.api.User/GetCurrentUser',
            toit_dot_api_dot_user__pb2.GetCurrentUserRequest.SerializeToString,
            toit_dot_api_dot_user__pb2.GetCurrentUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toit.api.User/ListOrganizations',
            toit_dot_api_dot_user__pb2.ListOrganizationsRequest.SerializeToString,
            toit_dot_api_dot_user__pb2.ListOrganizationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toit.api.User/ListUsers',
            toit_dot_api_dot_organization__pb2.ListUsersRequest.SerializeToString,
            toit_dot_api_dot_organization__pb2.ListUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toit.api.User/CreateUser',
            toit_dot_api_dot_organization__pb2.CreateUserRequest.SerializeToString,
            toit_dot_api_dot_organization__pb2.CreateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
