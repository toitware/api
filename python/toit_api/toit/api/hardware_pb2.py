# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: toit/api/hardware.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from toit.model import device_pb2 as toit_dot_model_dot_device__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='toit/api/hardware.proto',
  package='toit.api',
  syntax='proto3',
  serialized_options=b'\n\026io.toit.proto.toit.apiB\rHardwareProtoZ$github.com/toitware/api.git/toit/api',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x17toit/api/hardware.proto\x12\x08toit.api\x1a\x17toit/model/device.proto\"V\n\x0c\x43laimRequest\x12\x13\n\x0bhardware_id\x18\x01 \x01(\x0c\x12\x18\n\x10init_device_name\x18\x02 \x01(\t\x12\x17\n\x0forganization_id\x18\x03 \x01(\x0c\"\x81\x01\n\rClaimResponse\x12/\n\rhardware_info\x18\x01 \x01(\x0b\x32\x18.toit.model.HardwareInfo\x12\x11\n\tdevice_id\x18\x02 \x01(\x0c\x12\x13\n\x0b\x64\x65vice_name\x18\x03 \x01(\t\x12\x17\n\x0forganization_id\x18\x04 \x01(\x0c\"/\n\x18GetActiveDeviceIDRequest\x12\x13\n\x0bhardware_id\x18\x01 \x01(\x0c\".\n\x19GetActiveDeviceIDResponse\x12\x11\n\tdevice_id\x18\x01 \x01(\x0c\"<\n\x1c\x43laimHardwareIdentityRequest\x12\x1c\n\x14\x66lash_station_secret\x18\x01 \x01(\t\"X\n\x1d\x43laimHardwareIdentityResponse\x12\x37\n\x11hardware_identity\x18\x01 \x01(\x0b\x32\x1c.toit.model.HardwareIdentity\"z\n\x1eSetHardwareIdentityInfoRequest\x12\x1c\n\x14\x66lash_station_secret\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\x0c\x12.\n\x04info\x18\x03 \x01(\x0b\x32 .toit.model.HardwareIdentityInfo\"!\n\x1fSetHardwareIdentityInfoResponse2\xad\x01\n\x0fHardwareService\x12:\n\x05\x43laim\x12\x16.toit.api.ClaimRequest\x1a\x17.toit.api.ClaimResponse\"\x00\x12^\n\x11GetActiveDeviceID\x12\".toit.api.GetActiveDeviceIDRequest\x1a#.toit.api.GetActiveDeviceIDResponse\"\x00\x32\xec\x01\n\x0c\x46lashStation\x12j\n\x15\x43laimHardwareIdentity\x12&.toit.api.ClaimHardwareIdentityRequest\x1a\'.toit.api.ClaimHardwareIdentityResponse\"\x00\x12p\n\x17SetHardwareIdentityInfo\x12(.toit.api.SetHardwareIdentityInfoRequest\x1a).toit.api.SetHardwareIdentityInfoResponse\"\x00\x42M\n\x16io.toit.proto.toit.apiB\rHardwareProtoZ$github.com/toitware/api.git/toit/apib\x06proto3'
  ,
  dependencies=[toit_dot_model_dot_device__pb2.DESCRIPTOR,])




_CLAIMREQUEST = _descriptor.Descriptor(
  name='ClaimRequest',
  full_name='toit.api.ClaimRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hardware_id', full_name='toit.api.ClaimRequest.hardware_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='init_device_name', full_name='toit.api.ClaimRequest.init_device_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='organization_id', full_name='toit.api.ClaimRequest.organization_id', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=148,
)


_CLAIMRESPONSE = _descriptor.Descriptor(
  name='ClaimResponse',
  full_name='toit.api.ClaimResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hardware_info', full_name='toit.api.ClaimResponse.hardware_info', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='device_id', full_name='toit.api.ClaimResponse.device_id', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='device_name', full_name='toit.api.ClaimResponse.device_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='organization_id', full_name='toit.api.ClaimResponse.organization_id', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=151,
  serialized_end=280,
)


_GETACTIVEDEVICEIDREQUEST = _descriptor.Descriptor(
  name='GetActiveDeviceIDRequest',
  full_name='toit.api.GetActiveDeviceIDRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hardware_id', full_name='toit.api.GetActiveDeviceIDRequest.hardware_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=282,
  serialized_end=329,
)


_GETACTIVEDEVICEIDRESPONSE = _descriptor.Descriptor(
  name='GetActiveDeviceIDResponse',
  full_name='toit.api.GetActiveDeviceIDResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='toit.api.GetActiveDeviceIDResponse.device_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=331,
  serialized_end=377,
)


_CLAIMHARDWAREIDENTITYREQUEST = _descriptor.Descriptor(
  name='ClaimHardwareIdentityRequest',
  full_name='toit.api.ClaimHardwareIdentityRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='flash_station_secret', full_name='toit.api.ClaimHardwareIdentityRequest.flash_station_secret', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=379,
  serialized_end=439,
)


_CLAIMHARDWAREIDENTITYRESPONSE = _descriptor.Descriptor(
  name='ClaimHardwareIdentityResponse',
  full_name='toit.api.ClaimHardwareIdentityResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hardware_identity', full_name='toit.api.ClaimHardwareIdentityResponse.hardware_identity', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=441,
  serialized_end=529,
)


_SETHARDWAREIDENTITYINFOREQUEST = _descriptor.Descriptor(
  name='SetHardwareIdentityInfoRequest',
  full_name='toit.api.SetHardwareIdentityInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='flash_station_secret', full_name='toit.api.SetHardwareIdentityInfoRequest.flash_station_secret', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='id', full_name='toit.api.SetHardwareIdentityInfoRequest.id', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='info', full_name='toit.api.SetHardwareIdentityInfoRequest.info', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=531,
  serialized_end=653,
)


_SETHARDWAREIDENTITYINFORESPONSE = _descriptor.Descriptor(
  name='SetHardwareIdentityInfoResponse',
  full_name='toit.api.SetHardwareIdentityInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=655,
  serialized_end=688,
)

_CLAIMRESPONSE.fields_by_name['hardware_info'].message_type = toit_dot_model_dot_device__pb2._HARDWAREINFO
_CLAIMHARDWAREIDENTITYRESPONSE.fields_by_name['hardware_identity'].message_type = toit_dot_model_dot_device__pb2._HARDWAREIDENTITY
_SETHARDWAREIDENTITYINFOREQUEST.fields_by_name['info'].message_type = toit_dot_model_dot_device__pb2._HARDWAREIDENTITYINFO
DESCRIPTOR.message_types_by_name['ClaimRequest'] = _CLAIMREQUEST
DESCRIPTOR.message_types_by_name['ClaimResponse'] = _CLAIMRESPONSE
DESCRIPTOR.message_types_by_name['GetActiveDeviceIDRequest'] = _GETACTIVEDEVICEIDREQUEST
DESCRIPTOR.message_types_by_name['GetActiveDeviceIDResponse'] = _GETACTIVEDEVICEIDRESPONSE
DESCRIPTOR.message_types_by_name['ClaimHardwareIdentityRequest'] = _CLAIMHARDWAREIDENTITYREQUEST
DESCRIPTOR.message_types_by_name['ClaimHardwareIdentityResponse'] = _CLAIMHARDWAREIDENTITYRESPONSE
DESCRIPTOR.message_types_by_name['SetHardwareIdentityInfoRequest'] = _SETHARDWAREIDENTITYINFOREQUEST
DESCRIPTOR.message_types_by_name['SetHardwareIdentityInfoResponse'] = _SETHARDWAREIDENTITYINFORESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ClaimRequest = _reflection.GeneratedProtocolMessageType('ClaimRequest', (_message.Message,), {
  'DESCRIPTOR' : _CLAIMREQUEST,
  '__module__' : 'toit.api.hardware_pb2'
  # @@protoc_insertion_point(class_scope:toit.api.ClaimRequest)
  })
_sym_db.RegisterMessage(ClaimRequest)

ClaimResponse = _reflection.GeneratedProtocolMessageType('ClaimResponse', (_message.Message,), {
  'DESCRIPTOR' : _CLAIMRESPONSE,
  '__module__' : 'toit.api.hardware_pb2'
  # @@protoc_insertion_point(class_scope:toit.api.ClaimResponse)
  })
_sym_db.RegisterMessage(ClaimResponse)

GetActiveDeviceIDRequest = _reflection.GeneratedProtocolMessageType('GetActiveDeviceIDRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETACTIVEDEVICEIDREQUEST,
  '__module__' : 'toit.api.hardware_pb2'
  # @@protoc_insertion_point(class_scope:toit.api.GetActiveDeviceIDRequest)
  })
_sym_db.RegisterMessage(GetActiveDeviceIDRequest)

GetActiveDeviceIDResponse = _reflection.GeneratedProtocolMessageType('GetActiveDeviceIDResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETACTIVEDEVICEIDRESPONSE,
  '__module__' : 'toit.api.hardware_pb2'
  # @@protoc_insertion_point(class_scope:toit.api.GetActiveDeviceIDResponse)
  })
_sym_db.RegisterMessage(GetActiveDeviceIDResponse)

ClaimHardwareIdentityRequest = _reflection.GeneratedProtocolMessageType('ClaimHardwareIdentityRequest', (_message.Message,), {
  'DESCRIPTOR' : _CLAIMHARDWAREIDENTITYREQUEST,
  '__module__' : 'toit.api.hardware_pb2'
  # @@protoc_insertion_point(class_scope:toit.api.ClaimHardwareIdentityRequest)
  })
_sym_db.RegisterMessage(ClaimHardwareIdentityRequest)

ClaimHardwareIdentityResponse = _reflection.GeneratedProtocolMessageType('ClaimHardwareIdentityResponse', (_message.Message,), {
  'DESCRIPTOR' : _CLAIMHARDWAREIDENTITYRESPONSE,
  '__module__' : 'toit.api.hardware_pb2'
  # @@protoc_insertion_point(class_scope:toit.api.ClaimHardwareIdentityResponse)
  })
_sym_db.RegisterMessage(ClaimHardwareIdentityResponse)

SetHardwareIdentityInfoRequest = _reflection.GeneratedProtocolMessageType('SetHardwareIdentityInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETHARDWAREIDENTITYINFOREQUEST,
  '__module__' : 'toit.api.hardware_pb2'
  # @@protoc_insertion_point(class_scope:toit.api.SetHardwareIdentityInfoRequest)
  })
_sym_db.RegisterMessage(SetHardwareIdentityInfoRequest)

SetHardwareIdentityInfoResponse = _reflection.GeneratedProtocolMessageType('SetHardwareIdentityInfoResponse', (_message.Message,), {
  'DESCRIPTOR' : _SETHARDWAREIDENTITYINFORESPONSE,
  '__module__' : 'toit.api.hardware_pb2'
  # @@protoc_insertion_point(class_scope:toit.api.SetHardwareIdentityInfoResponse)
  })
_sym_db.RegisterMessage(SetHardwareIdentityInfoResponse)


DESCRIPTOR._options = None

_HARDWARESERVICE = _descriptor.ServiceDescriptor(
  name='HardwareService',
  full_name='toit.api.HardwareService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=691,
  serialized_end=864,
  methods=[
  _descriptor.MethodDescriptor(
    name='Claim',
    full_name='toit.api.HardwareService.Claim',
    index=0,
    containing_service=None,
    input_type=_CLAIMREQUEST,
    output_type=_CLAIMRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetActiveDeviceID',
    full_name='toit.api.HardwareService.GetActiveDeviceID',
    index=1,
    containing_service=None,
    input_type=_GETACTIVEDEVICEIDREQUEST,
    output_type=_GETACTIVEDEVICEIDRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_HARDWARESERVICE)

DESCRIPTOR.services_by_name['HardwareService'] = _HARDWARESERVICE


_FLASHSTATION = _descriptor.ServiceDescriptor(
  name='FlashStation',
  full_name='toit.api.FlashStation',
  file=DESCRIPTOR,
  index=1,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=867,
  serialized_end=1103,
  methods=[
  _descriptor.MethodDescriptor(
    name='ClaimHardwareIdentity',
    full_name='toit.api.FlashStation.ClaimHardwareIdentity',
    index=0,
    containing_service=None,
    input_type=_CLAIMHARDWAREIDENTITYREQUEST,
    output_type=_CLAIMHARDWAREIDENTITYRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetHardwareIdentityInfo',
    full_name='toit.api.FlashStation.SetHardwareIdentityInfo',
    index=1,
    containing_service=None,
    input_type=_SETHARDWAREIDENTITYINFOREQUEST,
    output_type=_SETHARDWAREIDENTITYINFORESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_FLASHSTATION)

DESCRIPTOR.services_by_name['FlashStation'] = _FLASHSTATION

# @@protoc_insertion_point(module_scope)
