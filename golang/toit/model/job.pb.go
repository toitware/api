// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: toit/model/job.proto

package model

import (
	pubsub "github.com/toitware/api/golang/toit/model/pubsub"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobGoalState int32

const (
	JobGoalState_JOB_GOAL_STATE_UNKNOWN   JobGoalState = 0
	JobGoalState_JOB_GOAL_STATE_INSTALL   JobGoalState = 1
	JobGoalState_JOB_GOAL_STATE_UNINSTALL JobGoalState = 2
)

// Enum value maps for JobGoalState.
var (
	JobGoalState_name = map[int32]string{
		0: "JOB_GOAL_STATE_UNKNOWN",
		1: "JOB_GOAL_STATE_INSTALL",
		2: "JOB_GOAL_STATE_UNINSTALL",
	}
	JobGoalState_value = map[string]int32{
		"JOB_GOAL_STATE_UNKNOWN":   0,
		"JOB_GOAL_STATE_INSTALL":   1,
		"JOB_GOAL_STATE_UNINSTALL": 2,
	}
)

func (x JobGoalState) Enum() *JobGoalState {
	p := new(JobGoalState)
	*p = x
	return p
}

func (x JobGoalState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobGoalState) Descriptor() protoreflect.EnumDescriptor {
	return file_toit_model_job_proto_enumTypes[0].Descriptor()
}

func (JobGoalState) Type() protoreflect.EnumType {
	return &file_toit_model_job_proto_enumTypes[0]
}

func (x JobGoalState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobGoalState.Descriptor instead.
func (JobGoalState) EnumDescriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{0}
}

type JobFileType int32

const (
	JobFileType_JOB_FILE_TYPE_UNKNOWN JobFileType = 0
	JobFileType_JOB_FILE_TYPE_SYSTEM  JobFileType = 1
)

// Enum value maps for JobFileType.
var (
	JobFileType_name = map[int32]string{
		0: "JOB_FILE_TYPE_UNKNOWN",
		1: "JOB_FILE_TYPE_SYSTEM",
	}
	JobFileType_value = map[string]int32{
		"JOB_FILE_TYPE_UNKNOWN": 0,
		"JOB_FILE_TYPE_SYSTEM":  1,
	}
)

func (x JobFileType) Enum() *JobFileType {
	p := new(JobFileType)
	*p = x
	return p
}

func (x JobFileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobFileType) Descriptor() protoreflect.EnumDescriptor {
	return file_toit_model_job_proto_enumTypes[1].Descriptor()
}

func (JobFileType) Type() protoreflect.EnumType {
	return &file_toit_model_job_proto_enumTypes[1]
}

func (x JobFileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobFileType.Descriptor instead.
func (JobFileType) EnumDescriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{1}
}

type JobState int32

const (
	JobState_JOB_STATE_UNKNOWN     JobState = 0
	JobState_JOB_STATE_UNINSTALLED JobState = 1
	JobState_JOB_STATE_INSTALLING  JobState = 2
	JobState_JOB_STATE_INSTALLED   JobState = 3
	JobState_JOB_STATE_FAILED      JobState = 4
)

// Enum value maps for JobState.
var (
	JobState_name = map[int32]string{
		0: "JOB_STATE_UNKNOWN",
		1: "JOB_STATE_UNINSTALLED",
		2: "JOB_STATE_INSTALLING",
		3: "JOB_STATE_INSTALLED",
		4: "JOB_STATE_FAILED",
	}
	JobState_value = map[string]int32{
		"JOB_STATE_UNKNOWN":     0,
		"JOB_STATE_UNINSTALLED": 1,
		"JOB_STATE_INSTALLING":  2,
		"JOB_STATE_INSTALLED":   3,
		"JOB_STATE_FAILED":      4,
	}
)

func (x JobState) Enum() *JobState {
	p := new(JobState)
	*p = x
	return p
}

func (x JobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobState) Descriptor() protoreflect.EnumDescriptor {
	return file_toit_model_job_proto_enumTypes[2].Descriptor()
}

func (JobState) Type() protoreflect.EnumType {
	return &file_toit_model_job_proto_enumTypes[2]
}

func (x JobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobState.Descriptor instead.
func (JobState) EnumDescriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{2}
}

type JobChangeType int32

const (
	JobChangeType_JOB_CHANGE_UNKNOWN JobChangeType = 0
	JobChangeType_JOB_CHANGE_ADDED   JobChangeType = 1
	JobChangeType_JOB_CHANGE_DELETED JobChangeType = 2
	JobChangeType_JOB_CHANGE_CHANGED JobChangeType = 3
)

// Enum value maps for JobChangeType.
var (
	JobChangeType_name = map[int32]string{
		0: "JOB_CHANGE_UNKNOWN",
		1: "JOB_CHANGE_ADDED",
		2: "JOB_CHANGE_DELETED",
		3: "JOB_CHANGE_CHANGED",
	}
	JobChangeType_value = map[string]int32{
		"JOB_CHANGE_UNKNOWN": 0,
		"JOB_CHANGE_ADDED":   1,
		"JOB_CHANGE_DELETED": 2,
		"JOB_CHANGE_CHANGED": 3,
	}
)

func (x JobChangeType) Enum() *JobChangeType {
	p := new(JobChangeType)
	*p = x
	return p
}

func (x JobChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_toit_model_job_proto_enumTypes[3].Descriptor()
}

func (JobChangeType) Type() protoreflect.EnumType {
	return &file_toit_model_job_proto_enumTypes[3]
}

func (x JobChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobChangeType.Descriptor instead.
func (JobChangeType) EnumDescriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{3}
}

type JobConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId           []byte                 `protobuf:"bytes,8,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CompilationId   []byte                 `protobuf:"bytes,2,opt,name=compilation_id,json=compilationId,proto3" json:"compilation_id,omitempty"`
	GoalState       JobGoalState           `protobuf:"varint,3,opt,name=goal_state,json=goalState,proto3,enum=toit.model.JobGoalState" json:"goal_state,omitempty"`
	Resources       *JobResources          `protobuf:"bytes,4,opt,name=resources,proto3" json:"resources,omitempty"`
	Triggers        *JobTriggers           `protobuf:"bytes,5,opt,name=triggers,proto3" json:"triggers,omitempty"`
	Created         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	Updated         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated,proto3" json:"updated,omitempty"`
	CompilationInfo *CompilationInfo       `protobuf:"bytes,10,opt,name=compilation_info,json=compilationInfo,proto3" json:"compilation_info,omitempty"`
	Pubsub          *JobPubSub             `protobuf:"bytes,11,opt,name=pubsub,proto3" json:"pubsub,omitempty"`
	Files           []*JobFile             `protobuf:"bytes,12,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *JobConfig) Reset() {
	*x = JobConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobConfig) ProtoMessage() {}

func (x *JobConfig) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobConfig.ProtoReflect.Descriptor instead.
func (*JobConfig) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{0}
}

func (x *JobConfig) GetJobId() []byte {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *JobConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobConfig) GetCompilationId() []byte {
	if x != nil {
		return x.CompilationId
	}
	return nil
}

func (x *JobConfig) GetGoalState() JobGoalState {
	if x != nil {
		return x.GoalState
	}
	return JobGoalState_JOB_GOAL_STATE_UNKNOWN
}

func (x *JobConfig) GetResources() *JobResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *JobConfig) GetTriggers() *JobTriggers {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *JobConfig) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *JobConfig) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *JobConfig) GetCompilationInfo() *CompilationInfo {
	if x != nil {
		return x.CompilationInfo
	}
	return nil
}

func (x *JobConfig) GetPubsub() *JobPubSub {
	if x != nil {
		return x.Pubsub
	}
	return nil
}

func (x *JobConfig) GetFiles() []*JobFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type CompilationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramId []byte `protobuf:"bytes,1,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
	Sdk       string `protobuf:"bytes,2,opt,name=sdk,proto3" json:"sdk,omitempty"`
	CreatorId []byte `protobuf:"bytes,3,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
}

func (x *CompilationInfo) Reset() {
	*x = CompilationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompilationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompilationInfo) ProtoMessage() {}

func (x *CompilationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompilationInfo.ProtoReflect.Descriptor instead.
func (*CompilationInfo) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{1}
}

func (x *CompilationInfo) GetProgramId() []byte {
	if x != nil {
		return x.ProgramId
	}
	return nil
}

func (x *CompilationInfo) GetSdk() string {
	if x != nil {
		return x.Sdk
	}
	return ""
}

func (x *CompilationInfo) GetCreatorId() []byte {
	if x != nil {
		return x.CreatorId
	}
	return nil
}

type JobResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory   *MemoryResource `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"`
	Features *JobFeatures    `protobuf:"bytes,2,opt,name=features,proto3" json:"features,omitempty"`
}

func (x *JobResources) Reset() {
	*x = JobResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResources) ProtoMessage() {}

func (x *JobResources) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResources.ProtoReflect.Descriptor instead.
func (*JobResources) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{2}
}

func (x *JobResources) GetMemory() *MemoryResource {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *JobResources) GetFeatures() *JobFeatures {
	if x != nil {
		return x.Features
	}
	return nil
}

type JobFeatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gps *GPSFeature `protobuf:"bytes,1,opt,name=gps,proto3" json:"gps,omitempty"`
}

func (x *JobFeatures) Reset() {
	*x = JobFeatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobFeatures) ProtoMessage() {}

func (x *JobFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobFeatures.ProtoReflect.Descriptor instead.
func (*JobFeatures) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{3}
}

func (x *JobFeatures) GetGps() *GPSFeature {
	if x != nil {
		return x.Gps
	}
	return nil
}

type JobFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type JobFileType `protobuf:"varint,1,opt,name=type,proto3,enum=toit.model.JobFileType" json:"type,omitempty"`
	Path string      `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *JobFile) Reset() {
	*x = JobFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobFile) ProtoMessage() {}

func (x *JobFile) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobFile.ProtoReflect.Descriptor instead.
func (*JobFile) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{4}
}

func (x *JobFile) GetType() JobFileType {
	if x != nil {
		return x.Type
	}
	return JobFileType_JOB_FILE_TYPE_UNKNOWN
}

func (x *JobFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GPSFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *GPSFeature) Reset() {
	*x = GPSFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPSFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPSFeature) ProtoMessage() {}

func (x *GPSFeature) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPSFeature.ProtoReflect.Descriptor instead.
func (*GPSFeature) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{5}
}

func (x *GPSFeature) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type MemoryResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory int64 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *MemoryResource) Reset() {
	*x = MemoryResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryResource) ProtoMessage() {}

func (x *MemoryResource) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryResource.ProtoReflect.Descriptor instead.
func (*MemoryResource) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{6}
}

func (x *MemoryResource) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

type JobTriggers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnInstall *OnInstallTrigger `protobuf:"bytes,1,opt,name=on_install,json=onInstall,proto3" json:"on_install,omitempty"`
	OnBoot    *OnBootTrigger    `protobuf:"bytes,2,opt,name=on_boot,json=onBoot,proto3" json:"on_boot,omitempty"`
	Interval  *IntervalTrigger  `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	Cron      *CronTrigger      `protobuf:"bytes,4,opt,name=cron,proto3" json:"cron,omitempty"`
	Movement  *MovementTrigger  `protobuf:"bytes,5,opt,name=movement,proto3" json:"movement,omitempty"`
	Button    *ButtonTrigger    `protobuf:"bytes,6,opt,name=button,proto3" json:"button,omitempty"`
	Network   *NetworkTrigger   `protobuf:"bytes,7,opt,name=network,proto3" json:"network,omitempty"`
	Pubsub    *PubSubTrigger    `protobuf:"bytes,8,opt,name=pubsub,proto3" json:"pubsub,omitempty"`
}

func (x *JobTriggers) Reset() {
	*x = JobTriggers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobTriggers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobTriggers) ProtoMessage() {}

func (x *JobTriggers) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobTriggers.ProtoReflect.Descriptor instead.
func (*JobTriggers) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{7}
}

func (x *JobTriggers) GetOnInstall() *OnInstallTrigger {
	if x != nil {
		return x.OnInstall
	}
	return nil
}

func (x *JobTriggers) GetOnBoot() *OnBootTrigger {
	if x != nil {
		return x.OnBoot
	}
	return nil
}

func (x *JobTriggers) GetInterval() *IntervalTrigger {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *JobTriggers) GetCron() *CronTrigger {
	if x != nil {
		return x.Cron
	}
	return nil
}

func (x *JobTriggers) GetMovement() *MovementTrigger {
	if x != nil {
		return x.Movement
	}
	return nil
}

func (x *JobTriggers) GetButton() *ButtonTrigger {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *JobTriggers) GetNetwork() *NetworkTrigger {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *JobTriggers) GetPubsub() *PubSubTrigger {
	if x != nil {
		return x.Pubsub
	}
	return nil
}

type OnInstallTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *OnInstallTrigger) Reset() {
	*x = OnInstallTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnInstallTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnInstallTrigger) ProtoMessage() {}

func (x *OnInstallTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnInstallTrigger.ProtoReflect.Descriptor instead.
func (*OnInstallTrigger) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{8}
}

func (x *OnInstallTrigger) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type OnBootTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *OnBootTrigger) Reset() {
	*x = OnBootTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnBootTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnBootTrigger) ProtoMessage() {}

func (x *OnBootTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnBootTrigger.ProtoReflect.Descriptor instead.
func (*OnBootTrigger) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{9}
}

func (x *OnBootTrigger) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type IntervalTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval *durationpb.Duration `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *IntervalTrigger) Reset() {
	*x = IntervalTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntervalTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntervalTrigger) ProtoMessage() {}

func (x *IntervalTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntervalTrigger.ProtoReflect.Descriptor instead.
func (*IntervalTrigger) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{10}
}

func (x *IntervalTrigger) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

type CronTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specs []*CronSpec `protobuf:"bytes,1,rep,name=specs,proto3" json:"specs,omitempty"`
}

func (x *CronTrigger) Reset() {
	*x = CronTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronTrigger) ProtoMessage() {}

func (x *CronTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronTrigger.ProtoReflect.Descriptor instead.
func (*CronTrigger) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{11}
}

func (x *CronTrigger) GetSpecs() []*CronSpec {
	if x != nil {
		return x.Specs
	}
	return nil
}

type MovementTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shaken bool `protobuf:"varint,1,opt,name=shaken,proto3" json:"shaken,omitempty"`
}

func (x *MovementTrigger) Reset() {
	*x = MovementTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovementTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovementTrigger) ProtoMessage() {}

func (x *MovementTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovementTrigger.ProtoReflect.Descriptor instead.
func (*MovementTrigger) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{12}
}

func (x *MovementTrigger) GetShaken() bool {
	if x != nil {
		return x.Shaken
	}
	return false
}

type ButtonTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buttons []string `protobuf:"bytes,1,rep,name=buttons,proto3" json:"buttons,omitempty"`
}

func (x *ButtonTrigger) Reset() {
	*x = ButtonTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ButtonTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ButtonTrigger) ProtoMessage() {}

func (x *ButtonTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ButtonTrigger.ProtoReflect.Descriptor instead.
func (*ButtonTrigger) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{13}
}

func (x *ButtonTrigger) GetButtons() []string {
	if x != nil {
		return x.Buttons
	}
	return nil
}

type NetworkTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connected bool `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
}

func (x *NetworkTrigger) Reset() {
	*x = NetworkTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkTrigger) ProtoMessage() {}

func (x *NetworkTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkTrigger.ProtoReflect.Descriptor instead.
func (*NetworkTrigger) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{14}
}

func (x *NetworkTrigger) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

type PubSubTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics []*pubsub.Topic `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *PubSubTrigger) Reset() {
	*x = PubSubTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubSubTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubSubTrigger) ProtoMessage() {}

func (x *PubSubTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubSubTrigger.ProtoReflect.Descriptor instead.
func (*PubSubTrigger) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{15}
}

func (x *PubSubTrigger) GetTopics() []*pubsub.Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

type CronSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CronString string          `protobuf:"bytes,1,opt,name=cron_string,json=cronString,proto3" json:"cron_string,omitempty"`
	Schedules  []*CronSchedule `protobuf:"bytes,2,rep,name=schedules,proto3" json:"schedules,omitempty"`
}

func (x *CronSpec) Reset() {
	*x = CronSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronSpec) ProtoMessage() {}

func (x *CronSpec) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronSpec.ProtoReflect.Descriptor instead.
func (*CronSpec) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{16}
}

func (x *CronSpec) GetCronString() string {
	if x != nil {
		return x.CronString
	}
	return ""
}

func (x *CronSpec) GetSchedules() []*CronSchedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type CronSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Second     int64                  `protobuf:"fixed64,1,opt,name=second,proto3" json:"second,omitempty"`
	Minute     int64                  `protobuf:"fixed64,2,opt,name=minute,proto3" json:"minute,omitempty"`
	Hour       int64                  `protobuf:"fixed64,3,opt,name=hour,proto3" json:"hour,omitempty"`
	DayOfMonth int64                  `protobuf:"fixed64,4,opt,name=day_of_month,json=dayOfMonth,proto3" json:"day_of_month,omitempty"`
	Month      int64                  `protobuf:"fixed64,5,opt,name=month,proto3" json:"month,omitempty"`
	DayOfWeek  int64                  `protobuf:"fixed64,6,opt,name=day_of_week,json=dayOfWeek,proto3" json:"day_of_week,omitempty"`
	ValidFrom  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
}

func (x *CronSchedule) Reset() {
	*x = CronSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronSchedule) ProtoMessage() {}

func (x *CronSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronSchedule.ProtoReflect.Descriptor instead.
func (*CronSchedule) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{17}
}

func (x *CronSchedule) GetSecond() int64 {
	if x != nil {
		return x.Second
	}
	return 0
}

func (x *CronSchedule) GetMinute() int64 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *CronSchedule) GetHour() int64 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *CronSchedule) GetDayOfMonth() int64 {
	if x != nil {
		return x.DayOfMonth
	}
	return 0
}

func (x *CronSchedule) GetMonth() int64 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *CronSchedule) GetDayOfWeek() int64 {
	if x != nil {
		return x.DayOfWeek
	}
	return 0
}

func (x *CronSchedule) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *CronSchedule) GetValidTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidTo
	}
	return nil
}

type JobPubSub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions []*JobPubSub_Subscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *JobPubSub) Reset() {
	*x = JobPubSub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobPubSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobPubSub) ProtoMessage() {}

func (x *JobPubSub) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobPubSub.ProtoReflect.Descriptor instead.
func (*JobPubSub) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{18}
}

func (x *JobPubSub) GetSubscriptions() []*JobPubSub_Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type JobStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId   []byte                 `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	State   JobState               `protobuf:"varint,1,opt,name=state,proto3,enum=toit.model.JobState" json:"state,omitempty"`
	Updated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{19}
}

func (x *JobStatus) GetJobId() []byte {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *JobStatus) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_JOB_STATE_UNKNOWN
}

func (x *JobStatus) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type JobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *JobConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Status *JobStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *JobInfo) Reset() {
	*x = JobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInfo) ProtoMessage() {}

func (x *JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInfo.ProtoReflect.Descriptor instead.
func (*JobInfo) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{20}
}

func (x *JobInfo) GetConfig() *JobConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *JobInfo) GetStatus() *JobStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type JobPubSub_Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *pubsub.Topic `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Id    []byte        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *JobPubSub_Subscription) Reset() {
	*x = JobPubSub_Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_model_job_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobPubSub_Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobPubSub_Subscription) ProtoMessage() {}

func (x *JobPubSub_Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_toit_model_job_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobPubSub_Subscription.ProtoReflect.Descriptor instead.
func (*JobPubSub_Subscription) Descriptor() ([]byte, []int) {
	return file_toit_model_job_proto_rawDescGZIP(), []int{18, 0}
}

func (x *JobPubSub_Subscription) GetTopic() *pubsub.Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *JobPubSub_Subscription) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

var File_toit_model_job_proto protoreflect.FileDescriptor

var file_toit_model_job_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x6f, 0x69, 0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6a, 0x6f, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x74, 0x6f, 0x69, 0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x91, 0x04, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x6f, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x52, 0x08,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x06,
	0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x75, 0x62,
	0x53, 0x75, 0x62, 0x52, 0x06, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x12, 0x29, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x69,
	0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x64, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x0c, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x6f, 0x69, 0x74,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x33, 0x0a,
	0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x12, 0x28, 0x0a, 0x03, 0x67, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x50, 0x53, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x03, 0x67, 0x70, 0x73, 0x22, 0x4a, 0x0a, 0x07, 0x4a,
	0x6f, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x26, 0x0a, 0x0a, 0x47, 0x50, 0x53, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22,
	0x28, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0xb9, 0x03, 0x0a, 0x0b, 0x4a, 0x6f,
	0x62, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x6e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x32, 0x0a, 0x07, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x6f,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x6e, 0x42, 0x6f, 0x6f, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x52, 0x06, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43,
	0x72, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e,
	0x12, 0x37, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x08, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x69, 0x74,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x06, 0x70,
	0x75, 0x62, 0x73, 0x75, 0x62, 0x22, 0x2c, 0x0a, 0x10, 0x4f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x29, 0x0a, 0x0d, 0x4f, 0x6e, 0x42, 0x6f, 0x6f, 0x74, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x48,
	0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x39, 0x0a, 0x0b, 0x43, 0x72, 0x6f, 0x6e,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x73, 0x70,
	0x65, 0x63, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x6e, 0x22, 0x29,
	0x0a, 0x0d, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x22, 0x2e, 0x0a, 0x0e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x41, 0x0a, 0x0d, 0x50, 0x75, 0x62,
	0x53, 0x75, 0x62, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x69,
	0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x22, 0x63, 0x0a, 0x08,
	0x43, 0x72, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x22, 0x9c, 0x02, 0x0a, 0x0c, 0x43, 0x72, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x10, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x10,
	0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66,
	0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x10, 0x52, 0x0a, 0x64, 0x61,
	0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x10, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1e,
	0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x10, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x39,
	0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x35, 0x0a, 0x08, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f,
	0x22, 0xa5, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x12, 0x48,
	0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4e, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x67, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x69,
	0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x69, 0x74,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x64, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x47,
	0x6f, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4a, 0x4f, 0x42, 0x5f,
	0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4a, 0x4f, 0x42, 0x5f, 0x47, 0x4f, 0x41, 0x4c,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0x01,
	0x12, 0x1c, 0x0a, 0x18, 0x4a, 0x4f, 0x42, 0x5f, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x2a, 0x42,
	0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x15, 0x4a, 0x4f, 0x42, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4a, 0x4f, 0x42, 0x5f,
	0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d,
	0x10, 0x01, 0x2a, 0x85, 0x01, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49,
	0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x4a,
	0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x6d, 0x0a, 0x0d, 0x4a, 0x6f,
	0x62, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4a,
	0x4f, 0x42, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4a, 0x4f, 0x42, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x4f, 0x42,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x4f, 0x42, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x03, 0x42, 0x62, 0x0a, 0x18, 0x69, 0x6f, 0x2e,
	0x74, 0x6f, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x08, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a,
	0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6f, 0x69, 0x74,
	0x77, 0x61, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
	0x74, 0x6f, 0x69, 0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0xaa, 0x02, 0x10, 0x54, 0x6f, 0x69,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_toit_model_job_proto_rawDescOnce sync.Once
	file_toit_model_job_proto_rawDescData = file_toit_model_job_proto_rawDesc
)

func file_toit_model_job_proto_rawDescGZIP() []byte {
	file_toit_model_job_proto_rawDescOnce.Do(func() {
		file_toit_model_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_toit_model_job_proto_rawDescData)
	})
	return file_toit_model_job_proto_rawDescData
}

var file_toit_model_job_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_toit_model_job_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_toit_model_job_proto_goTypes = []interface{}{
	(JobGoalState)(0),              // 0: toit.model.JobGoalState
	(JobFileType)(0),               // 1: toit.model.JobFileType
	(JobState)(0),                  // 2: toit.model.JobState
	(JobChangeType)(0),             // 3: toit.model.JobChangeType
	(*JobConfig)(nil),              // 4: toit.model.JobConfig
	(*CompilationInfo)(nil),        // 5: toit.model.CompilationInfo
	(*JobResources)(nil),           // 6: toit.model.JobResources
	(*JobFeatures)(nil),            // 7: toit.model.JobFeatures
	(*JobFile)(nil),                // 8: toit.model.JobFile
	(*GPSFeature)(nil),             // 9: toit.model.GPSFeature
	(*MemoryResource)(nil),         // 10: toit.model.MemoryResource
	(*JobTriggers)(nil),            // 11: toit.model.JobTriggers
	(*OnInstallTrigger)(nil),       // 12: toit.model.OnInstallTrigger
	(*OnBootTrigger)(nil),          // 13: toit.model.OnBootTrigger
	(*IntervalTrigger)(nil),        // 14: toit.model.IntervalTrigger
	(*CronTrigger)(nil),            // 15: toit.model.CronTrigger
	(*MovementTrigger)(nil),        // 16: toit.model.MovementTrigger
	(*ButtonTrigger)(nil),          // 17: toit.model.ButtonTrigger
	(*NetworkTrigger)(nil),         // 18: toit.model.NetworkTrigger
	(*PubSubTrigger)(nil),          // 19: toit.model.PubSubTrigger
	(*CronSpec)(nil),               // 20: toit.model.CronSpec
	(*CronSchedule)(nil),           // 21: toit.model.CronSchedule
	(*JobPubSub)(nil),              // 22: toit.model.JobPubSub
	(*JobStatus)(nil),              // 23: toit.model.JobStatus
	(*JobInfo)(nil),                // 24: toit.model.JobInfo
	(*JobPubSub_Subscription)(nil), // 25: toit.model.JobPubSub.Subscription
	(*timestamppb.Timestamp)(nil),  // 26: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),    // 27: google.protobuf.Duration
	(*pubsub.Topic)(nil),           // 28: toit.model.pubsub.Topic
}
var file_toit_model_job_proto_depIdxs = []int32{
	0,  // 0: toit.model.JobConfig.goal_state:type_name -> toit.model.JobGoalState
	6,  // 1: toit.model.JobConfig.resources:type_name -> toit.model.JobResources
	11, // 2: toit.model.JobConfig.triggers:type_name -> toit.model.JobTriggers
	26, // 3: toit.model.JobConfig.created:type_name -> google.protobuf.Timestamp
	26, // 4: toit.model.JobConfig.updated:type_name -> google.protobuf.Timestamp
	5,  // 5: toit.model.JobConfig.compilation_info:type_name -> toit.model.CompilationInfo
	22, // 6: toit.model.JobConfig.pubsub:type_name -> toit.model.JobPubSub
	8,  // 7: toit.model.JobConfig.files:type_name -> toit.model.JobFile
	10, // 8: toit.model.JobResources.memory:type_name -> toit.model.MemoryResource
	7,  // 9: toit.model.JobResources.features:type_name -> toit.model.JobFeatures
	9,  // 10: toit.model.JobFeatures.gps:type_name -> toit.model.GPSFeature
	1,  // 11: toit.model.JobFile.type:type_name -> toit.model.JobFileType
	12, // 12: toit.model.JobTriggers.on_install:type_name -> toit.model.OnInstallTrigger
	13, // 13: toit.model.JobTriggers.on_boot:type_name -> toit.model.OnBootTrigger
	14, // 14: toit.model.JobTriggers.interval:type_name -> toit.model.IntervalTrigger
	15, // 15: toit.model.JobTriggers.cron:type_name -> toit.model.CronTrigger
	16, // 16: toit.model.JobTriggers.movement:type_name -> toit.model.MovementTrigger
	17, // 17: toit.model.JobTriggers.button:type_name -> toit.model.ButtonTrigger
	18, // 18: toit.model.JobTriggers.network:type_name -> toit.model.NetworkTrigger
	19, // 19: toit.model.JobTriggers.pubsub:type_name -> toit.model.PubSubTrigger
	27, // 20: toit.model.IntervalTrigger.interval:type_name -> google.protobuf.Duration
	20, // 21: toit.model.CronTrigger.specs:type_name -> toit.model.CronSpec
	28, // 22: toit.model.PubSubTrigger.topics:type_name -> toit.model.pubsub.Topic
	21, // 23: toit.model.CronSpec.schedules:type_name -> toit.model.CronSchedule
	26, // 24: toit.model.CronSchedule.valid_from:type_name -> google.protobuf.Timestamp
	26, // 25: toit.model.CronSchedule.valid_to:type_name -> google.protobuf.Timestamp
	25, // 26: toit.model.JobPubSub.subscriptions:type_name -> toit.model.JobPubSub.Subscription
	2,  // 27: toit.model.JobStatus.state:type_name -> toit.model.JobState
	26, // 28: toit.model.JobStatus.updated:type_name -> google.protobuf.Timestamp
	4,  // 29: toit.model.JobInfo.config:type_name -> toit.model.JobConfig
	23, // 30: toit.model.JobInfo.status:type_name -> toit.model.JobStatus
	28, // 31: toit.model.JobPubSub.Subscription.topic:type_name -> toit.model.pubsub.Topic
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_toit_model_job_proto_init() }
func file_toit_model_job_proto_init() {
	if File_toit_model_job_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_toit_model_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompilationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobFeatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPSFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobTriggers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnInstallTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnBootTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntervalTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovementTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ButtonTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubSubTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobPubSub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_model_job_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobPubSub_Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_toit_model_job_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_toit_model_job_proto_goTypes,
		DependencyIndexes: file_toit_model_job_proto_depIdxs,
		EnumInfos:         file_toit_model_job_proto_enumTypes,
		MessageInfos:      file_toit_model_job_proto_msgTypes,
	}.Build()
	File_toit_model_job_proto = out.File
	file_toit_model_job_proto_rawDesc = nil
	file_toit_model_job_proto_goTypes = nil
	file_toit_model_job_proto_depIdxs = nil
}
