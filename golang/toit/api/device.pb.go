// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.4
// source: toit/api/device.proto

package api

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	model "github.com/toitware/api/golang/toit/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessStatus int32

const (
	ProcessStatus_PROCESS_STATUS_UNKNOWN    ProcessStatus = 0
	ProcessStatus_PROCESS_STATUS_RUNNING    ProcessStatus = 1
	ProcessStatus_PROCESS_STATUS_TERMINATED ProcessStatus = 2
)

// Enum value maps for ProcessStatus.
var (
	ProcessStatus_name = map[int32]string{
		0: "PROCESS_STATUS_UNKNOWN",
		1: "PROCESS_STATUS_RUNNING",
		2: "PROCESS_STATUS_TERMINATED",
	}
	ProcessStatus_value = map[string]int32{
		"PROCESS_STATUS_UNKNOWN":    0,
		"PROCESS_STATUS_RUNNING":    1,
		"PROCESS_STATUS_TERMINATED": 2,
	}
)

func (x ProcessStatus) Enum() *ProcessStatus {
	p := new(ProcessStatus)
	*p = x
	return p
}

func (x ProcessStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_toit_api_device_proto_enumTypes[0].Descriptor()
}

func (ProcessStatus) Type() protoreflect.EnumType {
	return &file_toit_api_device_proto_enumTypes[0]
}

func (x ProcessStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessStatus.Descriptor instead.
func (ProcessStatus) EnumDescriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{0}
}

type ProcessGoalStatus int32

const (
	ProcessGoalStatus_PROCESS_GOAL_STATUS_UNKNOWN    ProcessGoalStatus = 0
	ProcessGoalStatus_PROCESS_GOAL_STATUS_RUNNING    ProcessGoalStatus = 1
	ProcessGoalStatus_PROCESS_GOAL_STATUS_TERMINATED ProcessGoalStatus = 2
)

// Enum value maps for ProcessGoalStatus.
var (
	ProcessGoalStatus_name = map[int32]string{
		0: "PROCESS_GOAL_STATUS_UNKNOWN",
		1: "PROCESS_GOAL_STATUS_RUNNING",
		2: "PROCESS_GOAL_STATUS_TERMINATED",
	}
	ProcessGoalStatus_value = map[string]int32{
		"PROCESS_GOAL_STATUS_UNKNOWN":    0,
		"PROCESS_GOAL_STATUS_RUNNING":    1,
		"PROCESS_GOAL_STATUS_TERMINATED": 2,
	}
)

func (x ProcessGoalStatus) Enum() *ProcessGoalStatus {
	p := new(ProcessGoalStatus)
	*p = x
	return p
}

func (x ProcessGoalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessGoalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_toit_api_device_proto_enumTypes[1].Descriptor()
}

func (ProcessGoalStatus) Type() protoreflect.EnumType {
	return &file_toit_api_device_proto_enumTypes[1]
}

func (x ProcessGoalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessGoalStatus.Descriptor instead.
func (ProcessGoalStatus) EnumDescriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{1}
}

type DeviceLog_Type int32

const (
	DeviceLog_UNKNOWN       DeviceLog_Type = 0
	DeviceLog_MESSAGE       DeviceLog_Type = 1
	DeviceLog_PROCESS_START DeviceLog_Type = 2
	DeviceLog_PROCESS_STOP  DeviceLog_Type = 3
	DeviceLog_STACK_TRACE   DeviceLog_Type = 4
	DeviceLog_BOOT          DeviceLog_Type = 5
	DeviceLog_SHUTDOWN      DeviceLog_Type = 6
)

// Enum value maps for DeviceLog_Type.
var (
	DeviceLog_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "MESSAGE",
		2: "PROCESS_START",
		3: "PROCESS_STOP",
		4: "STACK_TRACE",
		5: "BOOT",
		6: "SHUTDOWN",
	}
	DeviceLog_Type_value = map[string]int32{
		"UNKNOWN":       0,
		"MESSAGE":       1,
		"PROCESS_START": 2,
		"PROCESS_STOP":  3,
		"STACK_TRACE":   4,
		"BOOT":          5,
		"SHUTDOWN":      6,
	}
)

func (x DeviceLog_Type) Enum() *DeviceLog_Type {
	p := new(DeviceLog_Type)
	*p = x
	return p
}

func (x DeviceLog_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceLog_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_toit_api_device_proto_enumTypes[2].Descriptor()
}

func (DeviceLog_Type) Type() protoreflect.EnumType {
	return &file_toit_api_device_proto_enumTypes[2]
}

func (x DeviceLog_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceLog_Type.Descriptor instead.
func (DeviceLog_Type) EnumDescriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{2, 0}
}

type GetDevicePartitionsRequest_Mode int32

const (
	GetDevicePartitionsRequest_UNKNOWN     GetDevicePartitionsRequest_Mode = 0
	GetDevicePartitionsRequest_SYSTEM      GetDevicePartitionsRequest_Mode = 2
	GetDevicePartitionsRequest_INITIAL     GetDevicePartitionsRequest_Mode = 3
	GetDevicePartitionsRequest_REPARTITION GetDevicePartitionsRequest_Mode = 4
)

// Enum value maps for GetDevicePartitionsRequest_Mode.
var (
	GetDevicePartitionsRequest_Mode_name = map[int32]string{
		0: "UNKNOWN",
		2: "SYSTEM",
		3: "INITIAL",
		4: "REPARTITION",
	}
	GetDevicePartitionsRequest_Mode_value = map[string]int32{
		"UNKNOWN":     0,
		"SYSTEM":      2,
		"INITIAL":     3,
		"REPARTITION": 4,
	}
)

func (x GetDevicePartitionsRequest_Mode) Enum() *GetDevicePartitionsRequest_Mode {
	p := new(GetDevicePartitionsRequest_Mode)
	*p = x
	return p
}

func (x GetDevicePartitionsRequest_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDevicePartitionsRequest_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_toit_api_device_proto_enumTypes[3].Descriptor()
}

func (GetDevicePartitionsRequest_Mode) Type() protoreflect.EnumType {
	return &file_toit_api_device_proto_enumTypes[3]
}

func (x GetDevicePartitionsRequest_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDevicePartitionsRequest_Mode.Descriptor instead.
func (GetDevicePartitionsRequest_Mode) EnumDescriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{27, 0}
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           []byte              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HardwareId   []byte              `protobuf:"bytes,5,opt,name=hardware_id,json=hardwareId,proto3" json:"hardware_id,omitempty"`
	HardwareFqdn string              `protobuf:"bytes,6,opt,name=hardware_fqdn,json=hardwareFqdn,proto3" json:"hardware_fqdn,omitempty"`
	Config       *model.DeviceConfig `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	Status       *model.DeviceStatus `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	IsSimulator  bool                `protobuf:"varint,9,opt,name=is_simulator,json=isSimulator,proto3" json:"is_simulator,omitempty"`
	NextAction   model.DeviceAction  `protobuf:"varint,10,opt,name=next_action,json=nextAction,proto3,enum=toit.model.DeviceAction" json:"next_action,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{0}
}

func (x *Device) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Device) GetHardwareId() []byte {
	if x != nil {
		return x.HardwareId
	}
	return nil
}

func (x *Device) GetHardwareFqdn() string {
	if x != nil {
		return x.HardwareFqdn
	}
	return ""
}

func (x *Device) GetConfig() *model.DeviceConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Device) GetStatus() *model.DeviceStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Device) GetIsSimulator() bool {
	if x != nil {
		return x.IsSimulator
	}
	return false
}

func (x *Device) GetNextAction() model.DeviceAction {
	if x != nil {
		return x.NextAction
	}
	return model.DeviceAction_DEVICE_ACTION_UNKNOWN
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []byte           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Config *model.JobConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Status *model.JobStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Job) GetConfig() *model.JobConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Job) GetStatus() *model.JobStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type DeviceLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId []byte `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Together with the device_id, it globally identifies the event. Events
	// can be sorted, and will always be returned in increasing order.
	EventId  []byte               `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	JobId    []byte               `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Received *timestamp.Timestamp `protobuf:"bytes,4,opt,name=received,proto3" json:"received,omitempty"`
	Type     DeviceLog_Type       `protobuf:"varint,5,opt,name=type,proto3,enum=toit.api.DeviceLog_Type" json:"type,omitempty"`
	Msg      string               `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	Data     []byte               `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Created  *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *DeviceLog) Reset() {
	*x = DeviceLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceLog) ProtoMessage() {}

func (x *DeviceLog) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceLog.ProtoReflect.Descriptor instead.
func (*DeviceLog) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceLog) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *DeviceLog) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *DeviceLog) GetJobId() []byte {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *DeviceLog) GetReceived() *timestamp.Timestamp {
	if x != nil {
		return x.Received
	}
	return nil
}

func (x *DeviceLog) GetType() DeviceLog_Type {
	if x != nil {
		return x.Type
	}
	return DeviceLog_UNKNOWN
}

func (x *DeviceLog) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeviceLog) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeviceLog) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

type GetDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId   []byte `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	HardwareId []byte `protobuf:"bytes,2,opt,name=hardware_id,json=hardwareId,proto3" json:"hardware_id,omitempty"`
}

func (x *GetDeviceRequest) Reset() {
	*x = GetDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceRequest) ProtoMessage() {}

func (x *GetDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{3}
}

func (x *GetDeviceRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *GetDeviceRequest) GetHardwareId() []byte {
	if x != nil {
		return x.HardwareId
	}
	return nil
}

type GetDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	// Deprecated: Do not use.
	Jobs []*Job `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetDeviceResponse) Reset() {
	*x = GetDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceResponse) ProtoMessage() {}

func (x *GetDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{4}
}

func (x *GetDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// Deprecated: Do not use.
func (x *GetDeviceResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type ConfigChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Config:
	//	*ConfigChange_Sdk
	//	*ConfigChange_Name_
	//	*ConfigChange_SdkModel
	//	*ConfigChange_Broker_
	//	*ConfigChange_MaxOffline_
	//	*ConfigChange_Connections_
	//	*ConfigChange_Reboot_
	//	*ConfigChange_FactoryReset_
	//	*ConfigChange_EventQueueThreshold_
	//	*ConfigChange_LoggingLevel_
	//	*ConfigChange_MetricsLevel_
	//	*ConfigChange_ReportModules_
	//	*ConfigChange_UpdateModule_
	Config isConfigChange_Config `protobuf_oneof:"config"`
}

func (x *ConfigChange) Reset() {
	*x = ConfigChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange) ProtoMessage() {}

func (x *ConfigChange) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange.ProtoReflect.Descriptor instead.
func (*ConfigChange) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5}
}

func (m *ConfigChange) GetConfig() isConfigChange_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *ConfigChange) GetSdk() *ConfigChange_SDK {
	if x, ok := x.GetConfig().(*ConfigChange_Sdk); ok {
		return x.Sdk
	}
	return nil
}

func (x *ConfigChange) GetName() *ConfigChange_Name {
	if x, ok := x.GetConfig().(*ConfigChange_Name_); ok {
		return x.Name
	}
	return nil
}

func (x *ConfigChange) GetSdkModel() *ConfigChange_SDKModel {
	if x, ok := x.GetConfig().(*ConfigChange_SdkModel); ok {
		return x.SdkModel
	}
	return nil
}

func (x *ConfigChange) GetBroker() *ConfigChange_Broker {
	if x, ok := x.GetConfig().(*ConfigChange_Broker_); ok {
		return x.Broker
	}
	return nil
}

func (x *ConfigChange) GetMaxOffline() *ConfigChange_MaxOffline {
	if x, ok := x.GetConfig().(*ConfigChange_MaxOffline_); ok {
		return x.MaxOffline
	}
	return nil
}

func (x *ConfigChange) GetConnections() *ConfigChange_Connections {
	if x, ok := x.GetConfig().(*ConfigChange_Connections_); ok {
		return x.Connections
	}
	return nil
}

func (x *ConfigChange) GetReboot() *ConfigChange_Reboot {
	if x, ok := x.GetConfig().(*ConfigChange_Reboot_); ok {
		return x.Reboot
	}
	return nil
}

func (x *ConfigChange) GetFactoryReset() *ConfigChange_FactoryReset {
	if x, ok := x.GetConfig().(*ConfigChange_FactoryReset_); ok {
		return x.FactoryReset
	}
	return nil
}

func (x *ConfigChange) GetEventQueueThreshold() *ConfigChange_EventQueueThreshold {
	if x, ok := x.GetConfig().(*ConfigChange_EventQueueThreshold_); ok {
		return x.EventQueueThreshold
	}
	return nil
}

func (x *ConfigChange) GetLoggingLevel() *ConfigChange_LoggingLevel {
	if x, ok := x.GetConfig().(*ConfigChange_LoggingLevel_); ok {
		return x.LoggingLevel
	}
	return nil
}

func (x *ConfigChange) GetMetricsLevel() *ConfigChange_MetricsLevel {
	if x, ok := x.GetConfig().(*ConfigChange_MetricsLevel_); ok {
		return x.MetricsLevel
	}
	return nil
}

func (x *ConfigChange) GetReportModules() *ConfigChange_ReportModules {
	if x, ok := x.GetConfig().(*ConfigChange_ReportModules_); ok {
		return x.ReportModules
	}
	return nil
}

func (x *ConfigChange) GetUpdateModule() *ConfigChange_UpdateModule {
	if x, ok := x.GetConfig().(*ConfigChange_UpdateModule_); ok {
		return x.UpdateModule
	}
	return nil
}

type isConfigChange_Config interface {
	isConfigChange_Config()
}

type ConfigChange_Sdk struct {
	Sdk *ConfigChange_SDK `protobuf:"bytes,1,opt,name=sdk,proto3,oneof"`
}

type ConfigChange_Name_ struct {
	Name *ConfigChange_Name `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

type ConfigChange_SdkModel struct {
	SdkModel *ConfigChange_SDKModel `protobuf:"bytes,3,opt,name=sdk_model,json=sdkModel,proto3,oneof"`
}

type ConfigChange_Broker_ struct {
	Broker *ConfigChange_Broker `protobuf:"bytes,4,opt,name=broker,proto3,oneof"`
}

type ConfigChange_MaxOffline_ struct {
	MaxOffline *ConfigChange_MaxOffline `protobuf:"bytes,5,opt,name=max_offline,json=maxOffline,proto3,oneof"`
}

type ConfigChange_Connections_ struct {
	Connections *ConfigChange_Connections `protobuf:"bytes,6,opt,name=connections,proto3,oneof"`
}

type ConfigChange_Reboot_ struct {
	Reboot *ConfigChange_Reboot `protobuf:"bytes,9,opt,name=reboot,proto3,oneof"`
}

type ConfigChange_FactoryReset_ struct {
	FactoryReset *ConfigChange_FactoryReset `protobuf:"bytes,10,opt,name=factory_reset,json=factoryReset,proto3,oneof"`
}

type ConfigChange_EventQueueThreshold_ struct {
	EventQueueThreshold *ConfigChange_EventQueueThreshold `protobuf:"bytes,11,opt,name=event_queue_threshold,json=eventQueueThreshold,proto3,oneof"`
}

type ConfigChange_LoggingLevel_ struct {
	LoggingLevel *ConfigChange_LoggingLevel `protobuf:"bytes,12,opt,name=logging_level,json=loggingLevel,proto3,oneof"`
}

type ConfigChange_MetricsLevel_ struct {
	MetricsLevel *ConfigChange_MetricsLevel `protobuf:"bytes,13,opt,name=metrics_level,json=metricsLevel,proto3,oneof"`
}

type ConfigChange_ReportModules_ struct {
	ReportModules *ConfigChange_ReportModules `protobuf:"bytes,14,opt,name=report_modules,json=reportModules,proto3,oneof"`
}

type ConfigChange_UpdateModule_ struct {
	UpdateModule *ConfigChange_UpdateModule `protobuf:"bytes,15,opt,name=update_module,json=updateModule,proto3,oneof"`
}

func (*ConfigChange_Sdk) isConfigChange_Config() {}

func (*ConfigChange_Name_) isConfigChange_Config() {}

func (*ConfigChange_SdkModel) isConfigChange_Config() {}

func (*ConfigChange_Broker_) isConfigChange_Config() {}

func (*ConfigChange_MaxOffline_) isConfigChange_Config() {}

func (*ConfigChange_Connections_) isConfigChange_Config() {}

func (*ConfigChange_Reboot_) isConfigChange_Config() {}

func (*ConfigChange_FactoryReset_) isConfigChange_Config() {}

func (*ConfigChange_EventQueueThreshold_) isConfigChange_Config() {}

func (*ConfigChange_LoggingLevel_) isConfigChange_Config() {}

func (*ConfigChange_MetricsLevel_) isConfigChange_Config() {}

func (*ConfigChange_ReportModules_) isConfigChange_Config() {}

func (*ConfigChange_UpdateModule_) isConfigChange_Config() {}

type ConfigureDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId      []byte          `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ConfigChanges []*ConfigChange `protobuf:"bytes,8,rep,name=config_changes,json=configChanges,proto3" json:"config_changes,omitempty"`
}

func (x *ConfigureDeviceRequest) Reset() {
	*x = ConfigureDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureDeviceRequest) ProtoMessage() {}

func (x *ConfigureDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureDeviceRequest.ProtoReflect.Descriptor instead.
func (*ConfigureDeviceRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigureDeviceRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *ConfigureDeviceRequest) GetConfigChanges() []*ConfigChange {
	if x != nil {
		return x.ConfigChanges
	}
	return nil
}

type ConfigureDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigureDeviceResponse) Reset() {
	*x = ConfigureDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureDeviceResponse) ProtoMessage() {}

func (x *ConfigureDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureDeviceResponse.ProtoReflect.Descriptor instead.
func (*ConfigureDeviceResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{7}
}

type ConnectionSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections []*model.ConnectionSetting `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
}

func (x *ConnectionSettings) Reset() {
	*x = ConnectionSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionSettings) ProtoMessage() {}

func (x *ConnectionSettings) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionSettings.ProtoReflect.Descriptor instead.
func (*ConnectionSettings) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{8}
}

func (x *ConnectionSettings) GetConnections() []*model.ConnectionSetting {
	if x != nil {
		return x.Connections
	}
	return nil
}

type LookupDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName string `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
}

func (x *LookupDevicesRequest) Reset() {
	*x = LookupDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupDevicesRequest) ProtoMessage() {}

func (x *LookupDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupDevicesRequest.ProtoReflect.Descriptor instead.
func (*LookupDevicesRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{9}
}

func (x *LookupDevicesRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type LookupDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIds [][]byte `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
}

func (x *LookupDevicesResponse) Reset() {
	*x = LookupDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupDevicesResponse) ProtoMessage() {}

func (x *LookupDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupDevicesResponse.ProtoReflect.Descriptor instead.
func (*LookupDevicesResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{10}
}

func (x *LookupDevicesResponse) GetDeviceIds() [][]byte {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

type ListDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset    []byte             `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int64              `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	OrderBy   string             `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	OrderDesc bool               `protobuf:"varint,4,opt,name=order_desc,json=orderDesc,proto3" json:"order_desc,omitempty"`
	Filter    *ListDevicesFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListDevicesRequest) Reset() {
	*x = ListDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesRequest) ProtoMessage() {}

func (x *ListDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListDevicesRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{11}
}

func (x *ListDevicesRequest) GetOffset() []byte {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *ListDevicesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDevicesRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListDevicesRequest) GetOrderDesc() bool {
	if x != nil {
		return x.OrderDesc
	}
	return false
}

func (x *ListDevicesRequest) GetFilter() *ListDevicesFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListDevicesFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdated    *duration.Duration `protobuf:"bytes,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	OnlySimulators bool               `protobuf:"varint,2,opt,name=only_simulators,json=onlySimulators,proto3" json:"only_simulators,omitempty"`
	NamePrefix     string             `protobuf:"bytes,3,opt,name=name_prefix,json=namePrefix,proto3" json:"name_prefix,omitempty"`
}

func (x *ListDevicesFilter) Reset() {
	*x = ListDevicesFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesFilter) ProtoMessage() {}

func (x *ListDevicesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesFilter.ProtoReflect.Descriptor instead.
func (*ListDevicesFilter) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{12}
}

func (x *ListDevicesFilter) GetLastUpdated() *duration.Duration {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *ListDevicesFilter) GetOnlySimulators() bool {
	if x != nil {
		return x.OnlySimulators
	}
	return false
}

func (x *ListDevicesFilter) GetNamePrefix() string {
	if x != nil {
		return x.NamePrefix
	}
	return ""
}

type ListDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	Offset  []byte    `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListDevicesResponse) Reset() {
	*x = ListDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesResponse) ProtoMessage() {}

func (x *ListDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListDevicesResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{13}
}

func (x *ListDevicesResponse) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *ListDevicesResponse) GetOffset() []byte {
	if x != nil {
		return x.Offset
	}
	return nil
}

type ListJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset    []byte          `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int64           `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	OrderBy   string          `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	OrderDesc bool            `protobuf:"varint,4,opt,name=order_desc,json=orderDesc,proto3" json:"order_desc,omitempty"`
	Filter    *ListJobsFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsRequest.ProtoReflect.Descriptor instead.
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{14}
}

func (x *ListJobsRequest) GetOffset() []byte {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *ListJobsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListJobsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListJobsRequest) GetOrderDesc() bool {
	if x != nil {
		return x.OrderDesc
	}
	return false
}

func (x *ListJobsRequest) GetFilter() *ListJobsFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListJobsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId   []byte               `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	States     []model.JobState     `protobuf:"varint,2,rep,packed,name=states,proto3,enum=toit.model.JobState" json:"states,omitempty"`
	Goalstates []model.JobGoalState `protobuf:"varint,3,rep,packed,name=goalstates,proto3,enum=toit.model.JobGoalState" json:"goalstates,omitempty"`
	JobId      []byte               `protobuf:"bytes,4,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *ListJobsFilter) Reset() {
	*x = ListJobsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsFilter) ProtoMessage() {}

func (x *ListJobsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsFilter.ProtoReflect.Descriptor instead.
func (*ListJobsFilter) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{15}
}

func (x *ListJobsFilter) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *ListJobsFilter) GetStates() []model.JobState {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *ListJobsFilter) GetGoalstates() []model.JobGoalState {
	if x != nil {
		return x.Goalstates
	}
	return nil
}

func (x *ListJobsFilter) GetJobId() []byte {
	if x != nil {
		return x.JobId
	}
	return nil
}

type ListJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs   []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	Offset []byte `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsResponse.ProtoReflect.Descriptor instead.
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{16}
}

func (x *ListJobsResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *ListJobsResponse) GetOffset() []byte {
	if x != nil {
		return x.Offset
	}
	return nil
}

type InstallJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId []byte           `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Config   *model.JobConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *InstallJobRequest) Reset() {
	*x = InstallJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallJobRequest) ProtoMessage() {}

func (x *InstallJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallJobRequest.ProtoReflect.Descriptor instead.
func (*InstallJobRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{17}
}

func (x *InstallJobRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *InstallJobRequest) GetConfig() *model.JobConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type InstallJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId []byte `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *InstallJobResponse) Reset() {
	*x = InstallJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallJobResponse) ProtoMessage() {}

func (x *InstallJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallJobResponse.ProtoReflect.Descriptor instead.
func (*InstallJobResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{18}
}

func (x *InstallJobResponse) GetJobId() []byte {
	if x != nil {
		return x.JobId
	}
	return nil
}

type ConfigureJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId  []byte             `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	JobId     []byte             `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	GoalState model.JobGoalState `protobuf:"varint,3,opt,name=goal_state,json=goalState,proto3,enum=toit.model.JobGoalState" json:"goal_state,omitempty"`
}

func (x *ConfigureJobRequest) Reset() {
	*x = ConfigureJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureJobRequest) ProtoMessage() {}

func (x *ConfigureJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureJobRequest.ProtoReflect.Descriptor instead.
func (*ConfigureJobRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{19}
}

func (x *ConfigureJobRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *ConfigureJobRequest) GetJobId() []byte {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *ConfigureJobRequest) GetGoalState() model.JobGoalState {
	if x != nil {
		return x.GoalState
	}
	return model.JobGoalState_JOB_GOAL_STATE_UNKNOWN
}

type ConfigureJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigureJobResponse) Reset() {
	*x = ConfigureJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureJobResponse) ProtoMessage() {}

func (x *ConfigureJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureJobResponse.ProtoReflect.Descriptor instead.
func (*ConfigureJobResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{20}
}

type RebootDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId []byte `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *RebootDeviceRequest) Reset() {
	*x = RebootDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebootDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootDeviceRequest) ProtoMessage() {}

func (x *RebootDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootDeviceRequest.ProtoReflect.Descriptor instead.
func (*RebootDeviceRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{21}
}

func (x *RebootDeviceRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

type RebootDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RebootDeviceResponse) Reset() {
	*x = RebootDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebootDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootDeviceResponse) ProtoMessage() {}

func (x *RebootDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootDeviceResponse.ProtoReflect.Descriptor instead.
func (*RebootDeviceResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{22}
}

type ReadDeviceLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId []byte `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Where to stream from, exclusive. Empty returns all historic logs.
	//
	// Types that are assignable to Offset:
	//	*ReadDeviceLogsRequest_Id
	//	*ReadDeviceLogsRequest_Ts
	Offset       isReadDeviceLogsRequest_Offset `protobuf_oneof:"offset"`
	Limit        uint64                         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Reverse      bool                           `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse,omitempty"`
	FilterJobIds [][]byte                       `protobuf:"bytes,6,rep,name=filter_job_ids,json=filterJobIds,proto3" json:"filter_job_ids,omitempty"`
}

func (x *ReadDeviceLogsRequest) Reset() {
	*x = ReadDeviceLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDeviceLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeviceLogsRequest) ProtoMessage() {}

func (x *ReadDeviceLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeviceLogsRequest.ProtoReflect.Descriptor instead.
func (*ReadDeviceLogsRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{23}
}

func (x *ReadDeviceLogsRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (m *ReadDeviceLogsRequest) GetOffset() isReadDeviceLogsRequest_Offset {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (x *ReadDeviceLogsRequest) GetId() []byte {
	if x, ok := x.GetOffset().(*ReadDeviceLogsRequest_Id); ok {
		return x.Id
	}
	return nil
}

func (x *ReadDeviceLogsRequest) GetTs() *timestamp.Timestamp {
	if x, ok := x.GetOffset().(*ReadDeviceLogsRequest_Ts); ok {
		return x.Ts
	}
	return nil
}

func (x *ReadDeviceLogsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadDeviceLogsRequest) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ReadDeviceLogsRequest) GetFilterJobIds() [][]byte {
	if x != nil {
		return x.FilterJobIds
	}
	return nil
}

type isReadDeviceLogsRequest_Offset interface {
	isReadDeviceLogsRequest_Offset()
}

type ReadDeviceLogsRequest_Id struct {
	Id []byte `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

type ReadDeviceLogsRequest_Ts struct {
	Ts *timestamp.Timestamp `protobuf:"bytes,3,opt,name=ts,proto3,oneof"`
}

func (*ReadDeviceLogsRequest_Id) isReadDeviceLogsRequest_Offset() {}

func (*ReadDeviceLogsRequest_Ts) isReadDeviceLogsRequest_Offset() {}

type ReadDeviceLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*DeviceLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *ReadDeviceLogsResponse) Reset() {
	*x = ReadDeviceLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDeviceLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeviceLogsResponse) ProtoMessage() {}

func (x *ReadDeviceLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeviceLogsResponse.ProtoReflect.Descriptor instead.
func (*ReadDeviceLogsResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{24}
}

func (x *ReadDeviceLogsResponse) GetLogs() []*DeviceLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type ReadDeviceEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId []byte `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Where to stream from, exclusive. Empty returns all historic logs.
	//
	// Types that are assignable to Offset:
	//	*ReadDeviceEventsRequest_Id
	//	*ReadDeviceEventsRequest_Ts
	Offset  isReadDeviceEventsRequest_Offset `protobuf_oneof:"offset"`
	Limit   uint64                           `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Reverse bool                             `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse,omitempty"`
}

func (x *ReadDeviceEventsRequest) Reset() {
	*x = ReadDeviceEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDeviceEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeviceEventsRequest) ProtoMessage() {}

func (x *ReadDeviceEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeviceEventsRequest.ProtoReflect.Descriptor instead.
func (*ReadDeviceEventsRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{25}
}

func (x *ReadDeviceEventsRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (m *ReadDeviceEventsRequest) GetOffset() isReadDeviceEventsRequest_Offset {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (x *ReadDeviceEventsRequest) GetId() []byte {
	if x, ok := x.GetOffset().(*ReadDeviceEventsRequest_Id); ok {
		return x.Id
	}
	return nil
}

func (x *ReadDeviceEventsRequest) GetTs() *timestamp.Timestamp {
	if x, ok := x.GetOffset().(*ReadDeviceEventsRequest_Ts); ok {
		return x.Ts
	}
	return nil
}

func (x *ReadDeviceEventsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadDeviceEventsRequest) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

type isReadDeviceEventsRequest_Offset interface {
	isReadDeviceEventsRequest_Offset()
}

type ReadDeviceEventsRequest_Id struct {
	Id []byte `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

type ReadDeviceEventsRequest_Ts struct {
	Ts *timestamp.Timestamp `protobuf:"bytes,3,opt,name=ts,proto3,oneof"`
}

func (*ReadDeviceEventsRequest_Id) isReadDeviceEventsRequest_Offset() {}

func (*ReadDeviceEventsRequest_Ts) isReadDeviceEventsRequest_Offset() {}

type ReadDeviceEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*model.DeviceEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ReadDeviceEventsResponse) Reset() {
	*x = ReadDeviceEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDeviceEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeviceEventsResponse) ProtoMessage() {}

func (x *ReadDeviceEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeviceEventsResponse.ProtoReflect.Descriptor instead.
func (*ReadDeviceEventsResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{26}
}

func (x *ReadDeviceEventsResponse) GetEvents() []*model.DeviceEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetDevicePartitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdkName          string                          `protobuf:"bytes,1,opt,name=sdk_name,json=sdkName,proto3" json:"sdk_name,omitempty"`
	Mode             GetDevicePartitionsRequest_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=toit.api.GetDevicePartitionsRequest_Mode" json:"mode,omitempty"`
	Properties       map[string]string               `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HardwareIdentity *model.HardwareIdentity         `protobuf:"bytes,4,opt,name=hardware_identity,json=hardwareIdentity,proto3" json:"hardware_identity,omitempty"`
	Model            string                          `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Qrcode           []byte                          `protobuf:"bytes,6,opt,name=qrcode,proto3" json:"qrcode,omitempty"`
}

func (x *GetDevicePartitionsRequest) Reset() {
	*x = GetDevicePartitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicePartitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicePartitionsRequest) ProtoMessage() {}

func (x *GetDevicePartitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicePartitionsRequest.ProtoReflect.Descriptor instead.
func (*GetDevicePartitionsRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{27}
}

func (x *GetDevicePartitionsRequest) GetSdkName() string {
	if x != nil {
		return x.SdkName
	}
	return ""
}

func (x *GetDevicePartitionsRequest) GetMode() GetDevicePartitionsRequest_Mode {
	if x != nil {
		return x.Mode
	}
	return GetDevicePartitionsRequest_UNKNOWN
}

func (x *GetDevicePartitionsRequest) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *GetDevicePartitionsRequest) GetHardwareIdentity() *model.HardwareIdentity {
	if x != nil {
		return x.HardwareIdentity
	}
	return nil
}

func (x *GetDevicePartitionsRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GetDevicePartitionsRequest) GetQrcode() []byte {
	if x != nil {
		return x.Qrcode
	}
	return nil
}

type GetDevicePartitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partitions []*GetDevicePartitionsResponse_Partition `protobuf:"bytes,1,rep,name=partitions,proto3" json:"partitions,omitempty"`
	DeviceId   []byte                                   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *GetDevicePartitionsResponse) Reset() {
	*x = GetDevicePartitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicePartitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicePartitionsResponse) ProtoMessage() {}

func (x *GetDevicePartitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicePartitionsResponse.ProtoReflect.Descriptor instead.
func (*GetDevicePartitionsResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{28}
}

func (x *GetDevicePartitionsResponse) GetPartitions() []*GetDevicePartitionsResponse_Partition {
	if x != nil {
		return x.Partitions
	}
	return nil
}

func (x *GetDevicePartitionsResponse) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

type WatchDeviceChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional to listen on changes for a single device.
	DeviceId      []byte `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	WatchRevision int64  `protobuf:"varint,2,opt,name=watch_revision,json=watchRevision,proto3" json:"watch_revision,omitempty"`
}

func (x *WatchDeviceChangesRequest) Reset() {
	*x = WatchDeviceChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDeviceChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDeviceChangesRequest) ProtoMessage() {}

func (x *WatchDeviceChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDeviceChangesRequest.ProtoReflect.Descriptor instead.
func (*WatchDeviceChangesRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{29}
}

func (x *WatchDeviceChangesRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *WatchDeviceChangesRequest) GetWatchRevision() int64 {
	if x != nil {
		return x.WatchRevision
	}
	return 0
}

type WatchDeviceChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          model.DeviceChangeType `protobuf:"varint,1,opt,name=type,proto3,enum=toit.model.DeviceChangeType" json:"type,omitempty"`
	DeviceId      []byte                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	WatchRevision int64                  `protobuf:"varint,3,opt,name=watch_revision,json=watchRevision,proto3" json:"watch_revision,omitempty"`
	LastConnected *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=last_connected,json=lastConnected,proto3" json:"last_connected,omitempty"`
}

func (x *WatchDeviceChangesResponse) Reset() {
	*x = WatchDeviceChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDeviceChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDeviceChangesResponse) ProtoMessage() {}

func (x *WatchDeviceChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDeviceChangesResponse.ProtoReflect.Descriptor instead.
func (*WatchDeviceChangesResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{30}
}

func (x *WatchDeviceChangesResponse) GetType() model.DeviceChangeType {
	if x != nil {
		return x.Type
	}
	return model.DeviceChangeType_DEVICE_CHANGE_UNKNOWN
}

func (x *WatchDeviceChangesResponse) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *WatchDeviceChangesResponse) GetWatchRevision() int64 {
	if x != nil {
		return x.WatchRevision
	}
	return 0
}

func (x *WatchDeviceChangesResponse) GetLastConnected() *timestamp.Timestamp {
	if x != nil {
		return x.LastConnected
	}
	return nil
}

type WatchJobChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional to listen on changes for a single device.
	DeviceId []byte `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Optional to listen on changes for a single job.
	JobId         []byte `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	WatchRevision int64  `protobuf:"varint,3,opt,name=watch_revision,json=watchRevision,proto3" json:"watch_revision,omitempty"`
}

func (x *WatchJobChangesRequest) Reset() {
	*x = WatchJobChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchJobChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchJobChangesRequest) ProtoMessage() {}

func (x *WatchJobChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchJobChangesRequest.ProtoReflect.Descriptor instead.
func (*WatchJobChangesRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{31}
}

func (x *WatchJobChangesRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *WatchJobChangesRequest) GetJobId() []byte {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *WatchJobChangesRequest) GetWatchRevision() int64 {
	if x != nil {
		return x.WatchRevision
	}
	return 0
}

type WatchJobChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          model.JobChangeType `protobuf:"varint,1,opt,name=type,proto3,enum=toit.model.JobChangeType" json:"type,omitempty"`
	JobId         []byte              `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	WatchRevision int64               `protobuf:"varint,3,opt,name=watch_revision,json=watchRevision,proto3" json:"watch_revision,omitempty"`
	DeviceId      []byte              `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *WatchJobChangesResponse) Reset() {
	*x = WatchJobChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchJobChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchJobChangesResponse) ProtoMessage() {}

func (x *WatchJobChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchJobChangesResponse.ProtoReflect.Descriptor instead.
func (*WatchJobChangesResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{32}
}

func (x *WatchJobChangesResponse) GetType() model.JobChangeType {
	if x != nil {
		return x.Type
	}
	return model.JobChangeType_JOB_CHANGE_UNKNOWN
}

func (x *WatchJobChangesResponse) GetJobId() []byte {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *WatchJobChangesResponse) GetWatchRevision() int64 {
	if x != nil {
		return x.WatchRevision
	}
	return 0
}

func (x *WatchJobChangesResponse) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

type WatchSessionChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional to listen on session changes for a single device.
	DeviceId      []byte `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	WatchRevision int64  `protobuf:"varint,2,opt,name=watch_revision,json=watchRevision,proto3" json:"watch_revision,omitempty"`
}

func (x *WatchSessionChangesRequest) Reset() {
	*x = WatchSessionChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchSessionChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchSessionChangesRequest) ProtoMessage() {}

func (x *WatchSessionChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchSessionChangesRequest.ProtoReflect.Descriptor instead.
func (*WatchSessionChangesRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{33}
}

func (x *WatchSessionChangesRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *WatchSessionChangesRequest) GetWatchRevision() int64 {
	if x != nil {
		return x.WatchRevision
	}
	return 0
}

type WatchSessionChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          model.DeviceSessionChangeType `protobuf:"varint,1,opt,name=type,proto3,enum=toit.model.DeviceSessionChangeType" json:"type,omitempty"`
	DeviceId      []byte                        `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	WatchRevision int64                         `protobuf:"varint,3,opt,name=watch_revision,json=watchRevision,proto3" json:"watch_revision,omitempty"`
	// Will be set if the type is DeviceSessionChangeTypeConnected
	LastConnected *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_connected,json=lastConnected,proto3" json:"last_connected,omitempty"`
}

func (x *WatchSessionChangesResponse) Reset() {
	*x = WatchSessionChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchSessionChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchSessionChangesResponse) ProtoMessage() {}

func (x *WatchSessionChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchSessionChangesResponse.ProtoReflect.Descriptor instead.
func (*WatchSessionChangesResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{34}
}

func (x *WatchSessionChangesResponse) GetType() model.DeviceSessionChangeType {
	if x != nil {
		return x.Type
	}
	return model.DeviceSessionChangeType_UNKNOWN_TYPE
}

func (x *WatchSessionChangesResponse) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *WatchSessionChangesResponse) GetWatchRevision() int64 {
	if x != nil {
		return x.WatchRevision
	}
	return 0
}

func (x *WatchSessionChangesResponse) GetLastConnected() *timestamp.Timestamp {
	if x != nil {
		return x.LastConnected
	}
	return nil
}

type GetCurrentTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCurrentTimeRequest) Reset() {
	*x = GetCurrentTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentTimeRequest) ProtoMessage() {}

func (x *GetCurrentTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentTimeRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentTimeRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{35}
}

type GetCurrentTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
}

func (x *GetCurrentTimeResponse) Reset() {
	*x = GetCurrentTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentTimeResponse) ProtoMessage() {}

func (x *GetCurrentTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentTimeResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentTimeResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{36}
}

func (x *GetCurrentTimeResponse) GetCurrentTime() *timestamp.Timestamp {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

type UnclaimDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId []byte `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *UnclaimDeviceRequest) Reset() {
	*x = UnclaimDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnclaimDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnclaimDeviceRequest) ProtoMessage() {}

func (x *UnclaimDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnclaimDeviceRequest.ProtoReflect.Descriptor instead.
func (*UnclaimDeviceRequest) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{37}
}

func (x *UnclaimDeviceRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

type UnclaimDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnclaimDeviceResponse) Reset() {
	*x = UnclaimDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnclaimDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnclaimDeviceResponse) ProtoMessage() {}

func (x *UnclaimDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnclaimDeviceResponse.ProtoReflect.Descriptor instead.
func (*UnclaimDeviceResponse) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{38}
}

type ConfigChange_SDK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ConfigChange_SDK) Reset() {
	*x = ConfigChange_SDK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_SDK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_SDK) ProtoMessage() {}

func (x *ConfigChange_SDK) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_SDK.ProtoReflect.Descriptor instead.
func (*ConfigChange_SDK) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ConfigChange_SDK) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ConfigChange_Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ConfigChange_Name) Reset() {
	*x = ConfigChange_Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_Name) ProtoMessage() {}

func (x *ConfigChange_Name) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_Name.ProtoReflect.Descriptor instead.
func (*ConfigChange_Name) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 1}
}

func (x *ConfigChange_Name) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ConfigChange_SDKModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *ConfigChange_SDKModel) Reset() {
	*x = ConfigChange_SDKModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_SDKModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_SDKModel) ProtoMessage() {}

func (x *ConfigChange_SDKModel) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_SDKModel.ProtoReflect.Descriptor instead.
func (*ConfigChange_SDKModel) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 2}
}

func (x *ConfigChange_SDKModel) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type ConfigChange_Broker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrokerSettings *model.DeviceBrokerSettings `protobuf:"bytes,1,opt,name=broker_settings,json=brokerSettings,proto3" json:"broker_settings,omitempty"`
}

func (x *ConfigChange_Broker) Reset() {
	*x = ConfigChange_Broker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_Broker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_Broker) ProtoMessage() {}

func (x *ConfigChange_Broker) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_Broker.ProtoReflect.Descriptor instead.
func (*ConfigChange_Broker) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 3}
}

func (x *ConfigChange_Broker) GetBrokerSettings() *model.DeviceBrokerSettings {
	if x != nil {
		return x.BrokerSettings
	}
	return nil
}

type ConfigChange_MaxOffline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxOffline *duration.Duration `protobuf:"bytes,1,opt,name=max_offline,json=maxOffline,proto3" json:"max_offline,omitempty"`
}

func (x *ConfigChange_MaxOffline) Reset() {
	*x = ConfigChange_MaxOffline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_MaxOffline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_MaxOffline) ProtoMessage() {}

func (x *ConfigChange_MaxOffline) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_MaxOffline.ProtoReflect.Descriptor instead.
func (*ConfigChange_MaxOffline) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 4}
}

func (x *ConfigChange_MaxOffline) GetMaxOffline() *duration.Duration {
	if x != nil {
		return x.MaxOffline
	}
	return nil
}

type ConfigChange_Connections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections []*model.ConnectionSetting `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
}

func (x *ConfigChange_Connections) Reset() {
	*x = ConfigChange_Connections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_Connections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_Connections) ProtoMessage() {}

func (x *ConfigChange_Connections) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_Connections.ProtoReflect.Descriptor instead.
func (*ConfigChange_Connections) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 5}
}

func (x *ConfigChange_Connections) GetConnections() []*model.ConnectionSetting {
	if x != nil {
		return x.Connections
	}
	return nil
}

type ConfigChange_Reboot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigChange_Reboot) Reset() {
	*x = ConfigChange_Reboot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_Reboot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_Reboot) ProtoMessage() {}

func (x *ConfigChange_Reboot) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_Reboot.ProtoReflect.Descriptor instead.
func (*ConfigChange_Reboot) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 6}
}

type ConfigChange_FactoryReset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigChange_FactoryReset) Reset() {
	*x = ConfigChange_FactoryReset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_FactoryReset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_FactoryReset) ProtoMessage() {}

func (x *ConfigChange_FactoryReset) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_FactoryReset.ProtoReflect.Descriptor instead.
func (*ConfigChange_FactoryReset) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 7}
}

type ConfigChange_EventQueueThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threshold uint32 `protobuf:"varint,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (x *ConfigChange_EventQueueThreshold) Reset() {
	*x = ConfigChange_EventQueueThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_EventQueueThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_EventQueueThreshold) ProtoMessage() {}

func (x *ConfigChange_EventQueueThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_EventQueueThreshold.ProtoReflect.Descriptor instead.
func (*ConfigChange_EventQueueThreshold) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 8}
}

func (x *ConfigChange_EventQueueThreshold) GetThreshold() uint32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type ConfigChange_LoggingLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level model.LogData_Level `protobuf:"varint,1,opt,name=level,proto3,enum=toit.model.LogData_Level" json:"level,omitempty"`
}

func (x *ConfigChange_LoggingLevel) Reset() {
	*x = ConfigChange_LoggingLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_LoggingLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_LoggingLevel) ProtoMessage() {}

func (x *ConfigChange_LoggingLevel) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_LoggingLevel.ProtoReflect.Descriptor instead.
func (*ConfigChange_LoggingLevel) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 9}
}

func (x *ConfigChange_LoggingLevel) GetLevel() model.LogData_Level {
	if x != nil {
		return x.Level
	}
	return model.LogData_PRINT_LEVEL
}

type ConfigChange_MetricsLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level model.MetricsData_Level `protobuf:"varint,1,opt,name=level,proto3,enum=toit.model.MetricsData_Level" json:"level,omitempty"`
}

func (x *ConfigChange_MetricsLevel) Reset() {
	*x = ConfigChange_MetricsLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_MetricsLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_MetricsLevel) ProtoMessage() {}

func (x *ConfigChange_MetricsLevel) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_MetricsLevel.ProtoReflect.Descriptor instead.
func (*ConfigChange_MetricsLevel) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 10}
}

func (x *ConfigChange_MetricsLevel) GetLevel() model.MetricsData_Level {
	if x != nil {
		return x.Level
	}
	return model.MetricsData_DEBUG_LEVEL
}

type ConfigChange_ReportModules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigChange_ReportModules) Reset() {
	*x = ConfigChange_ReportModules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_ReportModules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_ReportModules) ProtoMessage() {}

func (x *ConfigChange_ReportModules) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_ReportModules.ProtoReflect.Descriptor instead.
func (*ConfigChange_ReportModules) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 11}
}

type ConfigChange_UpdateModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    model.DeviceModuleType `protobuf:"varint,1,opt,name=type,proto3,enum=toit.model.DeviceModuleType" json:"type,omitempty"`
	Model   string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Version string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ConfigChange_UpdateModule) Reset() {
	*x = ConfigChange_UpdateModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange_UpdateModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange_UpdateModule) ProtoMessage() {}

func (x *ConfigChange_UpdateModule) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange_UpdateModule.ProtoReflect.Descriptor instead.
func (*ConfigChange_UpdateModule) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{5, 12}
}

func (x *ConfigChange_UpdateModule) GetType() model.DeviceModuleType {
	if x != nil {
		return x.Type
	}
	return model.DeviceModuleType_Unknown
}

func (x *ConfigChange_UpdateModule) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ConfigChange_UpdateModule) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetDevicePartitionsResponse_Partition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDevicePartitionsResponse_Partition) Reset() {
	*x = GetDevicePartitionsResponse_Partition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toit_api_device_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicePartitionsResponse_Partition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicePartitionsResponse_Partition) ProtoMessage() {}

func (x *GetDevicePartitionsResponse_Partition) ProtoReflect() protoreflect.Message {
	mi := &file_toit_api_device_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicePartitionsResponse_Partition.ProtoReflect.Descriptor instead.
func (*GetDevicePartitionsResponse_Partition) Descriptor() ([]byte, []int) {
	return file_toit_api_device_proto_rawDescGZIP(), []int{28, 0}
}

func (x *GetDevicePartitionsResponse_Partition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDevicePartitionsResponse_Partition) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetDevicePartitionsResponse_Partition) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_toit_api_device_proto protoreflect.FileDescriptor

var file_toit_api_device_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x6f, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x74, 0x6f, 0x69, 0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6a,
	0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x74, 0x6f, 0x69, 0x74, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x74, 0x6f, 0x69, 0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x5f, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x46, 0x71, 0x64, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x69, 0x74,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6f,
	0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x39, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x03, 0x4a,
	0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x8c, 0x03, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x6e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f,
	0x53, 0x54, 0x4f, 0x50, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x43, 0x4b, 0x5f,
	0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x54, 0x10,
	0x05, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x06, 0x22,
	0x50, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49,
	0x64, 0x22, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0xc2, 0x0c, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x73, 0x64, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x44,
	0x4b, 0x48, 0x00, 0x52, 0x03, 0x73, 0x64, 0x6b, 0x12, 0x31, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x73,
	0x64, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x44, 0x4b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x48,
	0x00, 0x52, 0x08, 0x73, 0x64, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x37, 0x0a, 0x06, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x6f,
	0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x6f, 0x69, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x4d, 0x61, 0x78, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x6d, 0x61, 0x78, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x62, 0x6f, 0x6f,
	0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x12, 0x4a, 0x0a, 0x0d, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x60, 0x0a, 0x15, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x48, 0x00, 0x52, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x4a, 0x0a, 0x0d, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x4a, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x4d, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x6f, 0x69, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x4a, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0c,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x1f, 0x0a, 0x03,
	0x53, 0x44, 0x4b, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1a, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x20, 0x0a, 0x08, 0x53, 0x44, 0x4b,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x53, 0x0a, 0x06, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x0e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x1a, 0x48, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3a,
	0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x6d, 0x61, 0x78, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x4e, 0x0a, 0x0b, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x08, 0x0a, 0x06, 0x52, 0x65,
	0x62, 0x6f, 0x6f, 0x74, 0x1a, 0x0e, 0x0a, 0x0c, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x1a, 0x33, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x1a, 0x3f, 0x0a, 0x0c, 0x4c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x43, 0x0a, 0x0c, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x6f, 0x69, 0x74,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x1a,
	0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x1a, 0x70, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x7a, 0x0a, 0x16,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6f,
	0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x08, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x37, 0x0a, 0x14, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x6f, 0x69,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x9b, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x73, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x6e,
	0x6c, 0x79, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x59, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xac, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4a,
	0x6f, 0x62, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x6f, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6a, 0x6f, 0x62,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x5f, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x2b, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x4a, 0x6f, 0x62, 0x47, 0x6f, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x67, 0x6f,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x32, 0x0a, 0x13, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x15,
	0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x02,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0x41, 0x0a, 0x16, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x69,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2c, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x4b, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x64,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xc3, 0x03, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x64, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x64, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x54,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x11, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x48, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x3d, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3d, 0x0a, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45,
	0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x22, 0xd8, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x4b, 0x0a, 0x09, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x19, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd5, 0x01, 0x0a, 0x1a, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22,
	0x73, 0x0a, 0x16, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f,
	0x62, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x1a, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xdd, 0x01, 0x0a,
	0x1b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x74, 0x6f, 0x69,
	0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x17, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x33,
	0x0a, 0x14, 0x55, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x66, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x16, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x2a, 0x79, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47,
	0x6f, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x52,
	0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x50,
	0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x32,
	0xf6, 0x0a, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x46, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x6f, 0x69,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62,
	0x73, 0x12, 0x19, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x1b, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x1d, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0c, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x55, 0x0a, 0x0e, 0x52, 0x65,
	0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x6f,
	0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x74, 0x6f, 0x69,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x0f, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x4a, 0x6f, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a,
	0x6f, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x66, 0x0a, 0x13, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x55, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x55, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x5f, 0x0a, 0x16, 0x69, 0x6f, 0x2e, 0x74,
	0x6f, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x6f, 0x69, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x42, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a,
	0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6f, 0x69, 0x74,
	0x77, 0x61, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
	0x74, 0x6f, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x69, 0xaa, 0x02, 0x0e, 0x54, 0x6f, 0x69, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x50, 0x49, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_toit_api_device_proto_rawDescOnce sync.Once
	file_toit_api_device_proto_rawDescData = file_toit_api_device_proto_rawDesc
)

func file_toit_api_device_proto_rawDescGZIP() []byte {
	file_toit_api_device_proto_rawDescOnce.Do(func() {
		file_toit_api_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_toit_api_device_proto_rawDescData)
	})
	return file_toit_api_device_proto_rawDescData
}

var file_toit_api_device_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_toit_api_device_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_toit_api_device_proto_goTypes = []interface{}{
	(ProcessStatus)(0),                            // 0: toit.api.ProcessStatus
	(ProcessGoalStatus)(0),                        // 1: toit.api.ProcessGoalStatus
	(DeviceLog_Type)(0),                           // 2: toit.api.DeviceLog.Type
	(GetDevicePartitionsRequest_Mode)(0),          // 3: toit.api.GetDevicePartitionsRequest.Mode
	(*Device)(nil),                                // 4: toit.api.Device
	(*Job)(nil),                                   // 5: toit.api.Job
	(*DeviceLog)(nil),                             // 6: toit.api.DeviceLog
	(*GetDeviceRequest)(nil),                      // 7: toit.api.GetDeviceRequest
	(*GetDeviceResponse)(nil),                     // 8: toit.api.GetDeviceResponse
	(*ConfigChange)(nil),                          // 9: toit.api.ConfigChange
	(*ConfigureDeviceRequest)(nil),                // 10: toit.api.ConfigureDeviceRequest
	(*ConfigureDeviceResponse)(nil),               // 11: toit.api.ConfigureDeviceResponse
	(*ConnectionSettings)(nil),                    // 12: toit.api.ConnectionSettings
	(*LookupDevicesRequest)(nil),                  // 13: toit.api.LookupDevicesRequest
	(*LookupDevicesResponse)(nil),                 // 14: toit.api.LookupDevicesResponse
	(*ListDevicesRequest)(nil),                    // 15: toit.api.ListDevicesRequest
	(*ListDevicesFilter)(nil),                     // 16: toit.api.ListDevicesFilter
	(*ListDevicesResponse)(nil),                   // 17: toit.api.ListDevicesResponse
	(*ListJobsRequest)(nil),                       // 18: toit.api.ListJobsRequest
	(*ListJobsFilter)(nil),                        // 19: toit.api.ListJobsFilter
	(*ListJobsResponse)(nil),                      // 20: toit.api.ListJobsResponse
	(*InstallJobRequest)(nil),                     // 21: toit.api.InstallJobRequest
	(*InstallJobResponse)(nil),                    // 22: toit.api.InstallJobResponse
	(*ConfigureJobRequest)(nil),                   // 23: toit.api.ConfigureJobRequest
	(*ConfigureJobResponse)(nil),                  // 24: toit.api.ConfigureJobResponse
	(*RebootDeviceRequest)(nil),                   // 25: toit.api.RebootDeviceRequest
	(*RebootDeviceResponse)(nil),                  // 26: toit.api.RebootDeviceResponse
	(*ReadDeviceLogsRequest)(nil),                 // 27: toit.api.ReadDeviceLogsRequest
	(*ReadDeviceLogsResponse)(nil),                // 28: toit.api.ReadDeviceLogsResponse
	(*ReadDeviceEventsRequest)(nil),               // 29: toit.api.ReadDeviceEventsRequest
	(*ReadDeviceEventsResponse)(nil),              // 30: toit.api.ReadDeviceEventsResponse
	(*GetDevicePartitionsRequest)(nil),            // 31: toit.api.GetDevicePartitionsRequest
	(*GetDevicePartitionsResponse)(nil),           // 32: toit.api.GetDevicePartitionsResponse
	(*WatchDeviceChangesRequest)(nil),             // 33: toit.api.WatchDeviceChangesRequest
	(*WatchDeviceChangesResponse)(nil),            // 34: toit.api.WatchDeviceChangesResponse
	(*WatchJobChangesRequest)(nil),                // 35: toit.api.WatchJobChangesRequest
	(*WatchJobChangesResponse)(nil),               // 36: toit.api.WatchJobChangesResponse
	(*WatchSessionChangesRequest)(nil),            // 37: toit.api.WatchSessionChangesRequest
	(*WatchSessionChangesResponse)(nil),           // 38: toit.api.WatchSessionChangesResponse
	(*GetCurrentTimeRequest)(nil),                 // 39: toit.api.GetCurrentTimeRequest
	(*GetCurrentTimeResponse)(nil),                // 40: toit.api.GetCurrentTimeResponse
	(*UnclaimDeviceRequest)(nil),                  // 41: toit.api.UnclaimDeviceRequest
	(*UnclaimDeviceResponse)(nil),                 // 42: toit.api.UnclaimDeviceResponse
	(*ConfigChange_SDK)(nil),                      // 43: toit.api.ConfigChange.SDK
	(*ConfigChange_Name)(nil),                     // 44: toit.api.ConfigChange.Name
	(*ConfigChange_SDKModel)(nil),                 // 45: toit.api.ConfigChange.SDKModel
	(*ConfigChange_Broker)(nil),                   // 46: toit.api.ConfigChange.Broker
	(*ConfigChange_MaxOffline)(nil),               // 47: toit.api.ConfigChange.MaxOffline
	(*ConfigChange_Connections)(nil),              // 48: toit.api.ConfigChange.Connections
	(*ConfigChange_Reboot)(nil),                   // 49: toit.api.ConfigChange.Reboot
	(*ConfigChange_FactoryReset)(nil),             // 50: toit.api.ConfigChange.FactoryReset
	(*ConfigChange_EventQueueThreshold)(nil),      // 51: toit.api.ConfigChange.EventQueueThreshold
	(*ConfigChange_LoggingLevel)(nil),             // 52: toit.api.ConfigChange.LoggingLevel
	(*ConfigChange_MetricsLevel)(nil),             // 53: toit.api.ConfigChange.MetricsLevel
	(*ConfigChange_ReportModules)(nil),            // 54: toit.api.ConfigChange.ReportModules
	(*ConfigChange_UpdateModule)(nil),             // 55: toit.api.ConfigChange.UpdateModule
	nil,                                           // 56: toit.api.GetDevicePartitionsRequest.PropertiesEntry
	(*GetDevicePartitionsResponse_Partition)(nil), // 57: toit.api.GetDevicePartitionsResponse.Partition
	(*model.DeviceConfig)(nil),                    // 58: toit.model.DeviceConfig
	(*model.DeviceStatus)(nil),                    // 59: toit.model.DeviceStatus
	(model.DeviceAction)(0),                       // 60: toit.model.DeviceAction
	(*model.JobConfig)(nil),                       // 61: toit.model.JobConfig
	(*model.JobStatus)(nil),                       // 62: toit.model.JobStatus
	(*timestamp.Timestamp)(nil),                   // 63: google.protobuf.Timestamp
	(*model.ConnectionSetting)(nil),               // 64: toit.model.ConnectionSetting
	(*duration.Duration)(nil),                     // 65: google.protobuf.Duration
	(model.JobState)(0),                           // 66: toit.model.JobState
	(model.JobGoalState)(0),                       // 67: toit.model.JobGoalState
	(*model.DeviceEvent)(nil),                     // 68: toit.model.DeviceEvent
	(*model.HardwareIdentity)(nil),                // 69: toit.model.HardwareIdentity
	(model.DeviceChangeType)(0),                   // 70: toit.model.DeviceChangeType
	(model.JobChangeType)(0),                      // 71: toit.model.JobChangeType
	(model.DeviceSessionChangeType)(0),            // 72: toit.model.DeviceSessionChangeType
	(*model.DeviceBrokerSettings)(nil),            // 73: toit.model.DeviceBrokerSettings
	(model.LogData_Level)(0),                      // 74: toit.model.LogData.Level
	(model.MetricsData_Level)(0),                  // 75: toit.model.MetricsData.Level
	(model.DeviceModuleType)(0),                   // 76: toit.model.DeviceModuleType
}
var file_toit_api_device_proto_depIdxs = []int32{
	58, // 0: toit.api.Device.config:type_name -> toit.model.DeviceConfig
	59, // 1: toit.api.Device.status:type_name -> toit.model.DeviceStatus
	60, // 2: toit.api.Device.next_action:type_name -> toit.model.DeviceAction
	61, // 3: toit.api.Job.config:type_name -> toit.model.JobConfig
	62, // 4: toit.api.Job.status:type_name -> toit.model.JobStatus
	63, // 5: toit.api.DeviceLog.received:type_name -> google.protobuf.Timestamp
	2,  // 6: toit.api.DeviceLog.type:type_name -> toit.api.DeviceLog.Type
	63, // 7: toit.api.DeviceLog.created:type_name -> google.protobuf.Timestamp
	4,  // 8: toit.api.GetDeviceResponse.device:type_name -> toit.api.Device
	5,  // 9: toit.api.GetDeviceResponse.jobs:type_name -> toit.api.Job
	43, // 10: toit.api.ConfigChange.sdk:type_name -> toit.api.ConfigChange.SDK
	44, // 11: toit.api.ConfigChange.name:type_name -> toit.api.ConfigChange.Name
	45, // 12: toit.api.ConfigChange.sdk_model:type_name -> toit.api.ConfigChange.SDKModel
	46, // 13: toit.api.ConfigChange.broker:type_name -> toit.api.ConfigChange.Broker
	47, // 14: toit.api.ConfigChange.max_offline:type_name -> toit.api.ConfigChange.MaxOffline
	48, // 15: toit.api.ConfigChange.connections:type_name -> toit.api.ConfigChange.Connections
	49, // 16: toit.api.ConfigChange.reboot:type_name -> toit.api.ConfigChange.Reboot
	50, // 17: toit.api.ConfigChange.factory_reset:type_name -> toit.api.ConfigChange.FactoryReset
	51, // 18: toit.api.ConfigChange.event_queue_threshold:type_name -> toit.api.ConfigChange.EventQueueThreshold
	52, // 19: toit.api.ConfigChange.logging_level:type_name -> toit.api.ConfigChange.LoggingLevel
	53, // 20: toit.api.ConfigChange.metrics_level:type_name -> toit.api.ConfigChange.MetricsLevel
	54, // 21: toit.api.ConfigChange.report_modules:type_name -> toit.api.ConfigChange.ReportModules
	55, // 22: toit.api.ConfigChange.update_module:type_name -> toit.api.ConfigChange.UpdateModule
	9,  // 23: toit.api.ConfigureDeviceRequest.config_changes:type_name -> toit.api.ConfigChange
	64, // 24: toit.api.ConnectionSettings.connections:type_name -> toit.model.ConnectionSetting
	16, // 25: toit.api.ListDevicesRequest.filter:type_name -> toit.api.ListDevicesFilter
	65, // 26: toit.api.ListDevicesFilter.last_updated:type_name -> google.protobuf.Duration
	4,  // 27: toit.api.ListDevicesResponse.devices:type_name -> toit.api.Device
	19, // 28: toit.api.ListJobsRequest.filter:type_name -> toit.api.ListJobsFilter
	66, // 29: toit.api.ListJobsFilter.states:type_name -> toit.model.JobState
	67, // 30: toit.api.ListJobsFilter.goalstates:type_name -> toit.model.JobGoalState
	5,  // 31: toit.api.ListJobsResponse.jobs:type_name -> toit.api.Job
	61, // 32: toit.api.InstallJobRequest.config:type_name -> toit.model.JobConfig
	67, // 33: toit.api.ConfigureJobRequest.goal_state:type_name -> toit.model.JobGoalState
	63, // 34: toit.api.ReadDeviceLogsRequest.ts:type_name -> google.protobuf.Timestamp
	6,  // 35: toit.api.ReadDeviceLogsResponse.logs:type_name -> toit.api.DeviceLog
	63, // 36: toit.api.ReadDeviceEventsRequest.ts:type_name -> google.protobuf.Timestamp
	68, // 37: toit.api.ReadDeviceEventsResponse.events:type_name -> toit.model.DeviceEvent
	3,  // 38: toit.api.GetDevicePartitionsRequest.mode:type_name -> toit.api.GetDevicePartitionsRequest.Mode
	56, // 39: toit.api.GetDevicePartitionsRequest.properties:type_name -> toit.api.GetDevicePartitionsRequest.PropertiesEntry
	69, // 40: toit.api.GetDevicePartitionsRequest.hardware_identity:type_name -> toit.model.HardwareIdentity
	57, // 41: toit.api.GetDevicePartitionsResponse.partitions:type_name -> toit.api.GetDevicePartitionsResponse.Partition
	70, // 42: toit.api.WatchDeviceChangesResponse.type:type_name -> toit.model.DeviceChangeType
	63, // 43: toit.api.WatchDeviceChangesResponse.last_connected:type_name -> google.protobuf.Timestamp
	71, // 44: toit.api.WatchJobChangesResponse.type:type_name -> toit.model.JobChangeType
	72, // 45: toit.api.WatchSessionChangesResponse.type:type_name -> toit.model.DeviceSessionChangeType
	63, // 46: toit.api.WatchSessionChangesResponse.last_connected:type_name -> google.protobuf.Timestamp
	63, // 47: toit.api.GetCurrentTimeResponse.current_time:type_name -> google.protobuf.Timestamp
	73, // 48: toit.api.ConfigChange.Broker.broker_settings:type_name -> toit.model.DeviceBrokerSettings
	65, // 49: toit.api.ConfigChange.MaxOffline.max_offline:type_name -> google.protobuf.Duration
	64, // 50: toit.api.ConfigChange.Connections.connections:type_name -> toit.model.ConnectionSetting
	74, // 51: toit.api.ConfigChange.LoggingLevel.level:type_name -> toit.model.LogData.Level
	75, // 52: toit.api.ConfigChange.MetricsLevel.level:type_name -> toit.model.MetricsData.Level
	76, // 53: toit.api.ConfigChange.UpdateModule.type:type_name -> toit.model.DeviceModuleType
	7,  // 54: toit.api.DeviceService.GetDevice:input_type -> toit.api.GetDeviceRequest
	10, // 55: toit.api.DeviceService.ConfigureDevice:input_type -> toit.api.ConfigureDeviceRequest
	13, // 56: toit.api.DeviceService.LookupDevices:input_type -> toit.api.LookupDevicesRequest
	15, // 57: toit.api.DeviceService.ListDevices:input_type -> toit.api.ListDevicesRequest
	18, // 58: toit.api.DeviceService.ListJobs:input_type -> toit.api.ListJobsRequest
	21, // 59: toit.api.DeviceService.InstallJob:input_type -> toit.api.InstallJobRequest
	23, // 60: toit.api.DeviceService.ConfigureJob:input_type -> toit.api.ConfigureJobRequest
	25, // 61: toit.api.DeviceService.RebootDevice:input_type -> toit.api.RebootDeviceRequest
	27, // 62: toit.api.DeviceService.ReadDeviceLogs:input_type -> toit.api.ReadDeviceLogsRequest
	29, // 63: toit.api.DeviceService.ReadDeviceEvents:input_type -> toit.api.ReadDeviceEventsRequest
	31, // 64: toit.api.DeviceService.GetDevicePartitions:input_type -> toit.api.GetDevicePartitionsRequest
	33, // 65: toit.api.DeviceService.WatchDeviceChanges:input_type -> toit.api.WatchDeviceChangesRequest
	35, // 66: toit.api.DeviceService.WatchJobChanges:input_type -> toit.api.WatchJobChangesRequest
	37, // 67: toit.api.DeviceService.WatchSessionChanges:input_type -> toit.api.WatchSessionChangesRequest
	39, // 68: toit.api.DeviceService.GetCurrentTime:input_type -> toit.api.GetCurrentTimeRequest
	41, // 69: toit.api.DeviceService.UnclaimDevice:input_type -> toit.api.UnclaimDeviceRequest
	8,  // 70: toit.api.DeviceService.GetDevice:output_type -> toit.api.GetDeviceResponse
	11, // 71: toit.api.DeviceService.ConfigureDevice:output_type -> toit.api.ConfigureDeviceResponse
	14, // 72: toit.api.DeviceService.LookupDevices:output_type -> toit.api.LookupDevicesResponse
	17, // 73: toit.api.DeviceService.ListDevices:output_type -> toit.api.ListDevicesResponse
	20, // 74: toit.api.DeviceService.ListJobs:output_type -> toit.api.ListJobsResponse
	22, // 75: toit.api.DeviceService.InstallJob:output_type -> toit.api.InstallJobResponse
	24, // 76: toit.api.DeviceService.ConfigureJob:output_type -> toit.api.ConfigureJobResponse
	26, // 77: toit.api.DeviceService.RebootDevice:output_type -> toit.api.RebootDeviceResponse
	28, // 78: toit.api.DeviceService.ReadDeviceLogs:output_type -> toit.api.ReadDeviceLogsResponse
	30, // 79: toit.api.DeviceService.ReadDeviceEvents:output_type -> toit.api.ReadDeviceEventsResponse
	32, // 80: toit.api.DeviceService.GetDevicePartitions:output_type -> toit.api.GetDevicePartitionsResponse
	34, // 81: toit.api.DeviceService.WatchDeviceChanges:output_type -> toit.api.WatchDeviceChangesResponse
	36, // 82: toit.api.DeviceService.WatchJobChanges:output_type -> toit.api.WatchJobChangesResponse
	38, // 83: toit.api.DeviceService.WatchSessionChanges:output_type -> toit.api.WatchSessionChangesResponse
	40, // 84: toit.api.DeviceService.GetCurrentTime:output_type -> toit.api.GetCurrentTimeResponse
	42, // 85: toit.api.DeviceService.UnclaimDevice:output_type -> toit.api.UnclaimDeviceResponse
	70, // [70:86] is the sub-list for method output_type
	54, // [54:70] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_toit_api_device_proto_init() }
func file_toit_api_device_proto_init() {
	if File_toit_api_device_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_toit_api_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebootDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebootDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDeviceLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDeviceLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDeviceEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDeviceEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicePartitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicePartitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDeviceChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDeviceChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchJobChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchJobChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchSessionChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchSessionChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnclaimDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnclaimDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_SDK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_SDKModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_Broker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_MaxOffline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_Connections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_Reboot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_FactoryReset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_EventQueueThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_LoggingLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_MetricsLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_ReportModules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange_UpdateModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toit_api_device_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicePartitionsResponse_Partition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_toit_api_device_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ConfigChange_Sdk)(nil),
		(*ConfigChange_Name_)(nil),
		(*ConfigChange_SdkModel)(nil),
		(*ConfigChange_Broker_)(nil),
		(*ConfigChange_MaxOffline_)(nil),
		(*ConfigChange_Connections_)(nil),
		(*ConfigChange_Reboot_)(nil),
		(*ConfigChange_FactoryReset_)(nil),
		(*ConfigChange_EventQueueThreshold_)(nil),
		(*ConfigChange_LoggingLevel_)(nil),
		(*ConfigChange_MetricsLevel_)(nil),
		(*ConfigChange_ReportModules_)(nil),
		(*ConfigChange_UpdateModule_)(nil),
	}
	file_toit_api_device_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*ReadDeviceLogsRequest_Id)(nil),
		(*ReadDeviceLogsRequest_Ts)(nil),
	}
	file_toit_api_device_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*ReadDeviceEventsRequest_Id)(nil),
		(*ReadDeviceEventsRequest_Ts)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_toit_api_device_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_toit_api_device_proto_goTypes,
		DependencyIndexes: file_toit_api_device_proto_depIdxs,
		EnumInfos:         file_toit_api_device_proto_enumTypes,
		MessageInfos:      file_toit_api_device_proto_msgTypes,
	}.Build()
	File_toit_api_device_proto = out.File
	file_toit_api_device_proto_rawDesc = nil
	file_toit_api_device_proto_goTypes = nil
	file_toit_api_device_proto_depIdxs = nil
}
